interactions:
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - python-requests/2.31.0
    method: GET
    uri: https://api.semanticscholar.org/graph/v1/author/search?query=Jason%20Nieh&fields=affiliations,aliases,authorId,citationCount,externalIds,hIndex,homepage,name,paperCount,papers,papers.abstract,papers.authors,papers.citationCount,papers.corpusId,papers.externalIds,papers.fieldsOfStudy,papers.influentialCitationCount,papers.isOpenAccess,papers.journal,papers.openAccessPdf,papers.paperId,papers.publicationDate,papers.publicationTypes,papers.publicationVenue,papers.referenceCount,papers.s2FieldsOfStudy,papers.title,papers.url,papers.venue,papers.year,url&offset=0&limit=1000
  response:
    body:
      string: '{"total": 3, "offset": 0, "data": [{"authorId": "2237784224", "externalIds":
        {}, "url": "https://www.semanticscholar.org/author/2237784224", "name": "Jason
        Nieh", "aliases": null, "affiliations": [], "homepage": null, "paperCount":
        1, "citationCount": 0, "hIndex": 0, "papers": [{"paperId": "dac937063ce5714f4917dc07d6fb24841ae39873",
        "externalIds": {"MAG": "221013295", "DBLP": "conf/sigmetrics/2009", "DOI":
        "10.1145/2492101", "CorpusId": 261529156}, "corpusId": 261529156, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/dac937063ce5714f4917dc07d6fb24841ae39873",
        "title": "Proceedings of the Eleventh International Joint Conference on Measurement
        and Modeling of Computer Systems, SIGMETRICS/Performance 2009, Seattle, WA,
        USA, June 15-19, 2009", "abstract": null, "venue": "SIGMETRICS/Performance",
        "year": 2009, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": null, "journal": {"volume": "",
        "name": ""}, "authors": [{"authorId": "2419090", "name": "John R. Douceur"},
        {"authorId": "2237787532", "name": "Albert Greenberg"}, {"authorId": "2251441475",
        "name": "T. Bonald"}, {"authorId": "2237784224", "name": "Jason Nieh"}]}]},
        {"authorId": "1700208", "externalIds": {"DBLP": ["Jason Nieh"]}, "url": "https://www.semanticscholar.org/author/1700208",
        "name": "Jason Nieh", "aliases": null, "affiliations": [], "homepage": null,
        "paperCount": 171, "citationCount": 5421, "hIndex": 39, "papers": [{"paperId":
        "0421c0442d6efc5ff4a84ba1711e2bf2f2f3e259", "externalIds": {"DBLP": "conf/osdi/LiLQGN23",
        "CorpusId": 259858938}, "corpusId": 259858938, "publicationVenue": {"id":
        "86c43745-31d9-4c1a-b33f-ce3aa0042dbb", "name": "USENIX Symposium on Operating
        Systems Design and Implementation", "type": "conference", "alternate_names":
        ["Oper Syst Des Implement", "Operating Systems Design and Implementation",
        "OSDI", "USENIX Symp Oper Syst Des Implement"]}, "url": "https://www.semanticscholar.org/paper/0421c0442d6efc5ff4a84ba1711e2bf2f2f3e259",
        "title": "Spoq: Scaling Machine-Checkable Systems Verification in Coq", "abstract":
        "System software is often large and complex, resulting in many vulnerabilities
        that can potentially be exploited to compromise the security of a system.
        Formal verification offers a potential solution to creating bug-free software,
        but a key impediment to its adoption remains proof cost. We present Spoq,
        a highly automated verification framework to construct machine-checkable proofs
        in Coq for system software with much less proof cost. Spoq introduces a novel
        program structure reconstruction technique to leverage LLVM to translate C
        code into Coq, supporting full C semantics, including C macros, inline assembly,
        and compiler directives, so that source code no longer has to be manually
        modified to be verified. Spoq leverages a layering proof strategy and introduces
        novel Coq tactics and transformation rules to automatically generate layer
        specifications and refinement proofs to simplify verification of concurrent
        system software. Spoq also supports easy integration of manually written layer
        specifications and refinement proofs. We use Spoq to verify a multiprocessor
        KVM hypervisor implementation. Verification using Spoq required 70% less proof
        effort than the manually written specifications and proofs to verify an older
        implementation. Furthermore, the proofs using Spoq hold for the unmodified
        implementation that is directly compiled and executed.", "venue": "USENIX
        Symposium on Operating Systems Design and Implementation", "year": 2023, "referenceCount":
        64, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
        "Conference"], "publicationDate": null, "journal": {"pages": "851-869"}, "authors":
        [{"authorId": "2108147908", "name": "Xupeng Li"}, {"authorId": "2173139985",
        "name": "Xuheng Li"}, {"authorId": "2059455562", "name": "Wei Qiang"}, {"authorId":
        "3409635", "name": "Ronghui Gu"}, {"authorId": "1700208", "name": "Jason Nieh"}]},
        {"paperId": "4831c52655050e37dd61c98b2c984b1060eafe9c", "externalIds": {"DBLP":
        "conf/eurosys/WengH0NY23", "DOI": "10.1145/3552326.3587444", "CorpusId": 258508828},
        "corpusId": 258508828, "publicationVenue": {"id": "e4f51561-5050-4b9c-87c2-c49957677fbf",
        "name": "European Conference on Computer Systems", "type": "conference", "alternate_names":
        ["Eur Conf Comput Syst", "EuroSys"], "url": "http://www.eurosys.org/"}, "url":
        "https://www.semanticscholar.org/paper/4831c52655050e37dd61c98b2c984b1060eafe9c",
        "title": "Effective Performance Issue Diagnosis with Value-Assisted Cost Profiling",
        "abstract": "Diagnosing performance issues is often difficult, especially
        when they occur only during some program executions. Profilers can help with
        performance debugging, but are ineffective when the most costly functions
        are not the root causes of performance issues. To address this problem, we
        introduce a new profiling methodology, value-assisted cost profiling, and
        a tool vProf. Our insight is that capturing the values of variables can greatly
        help diagnose performance issues. vProf continuously records values while
        profiling normal and buggy program executions. It identifies anomalies in
        the values and the functions where they occur to pinpoint the real root causes
        of performance issues. Using a set of 15 real-world performance bugs in four
        widely used applications, we show that vProf is effective at diagnosing all
        of the issues while other state-of-the-art tools diagnose only a few of them.
        We further use vProf to diagnose longstanding performance issues in these
        applications that have been unresolved for over four years.", "venue": "European
        Conference on Computer Systems", "year": 2023, "referenceCount": 52, "citationCount":
        1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["Book", "JournalArticle",
        "Conference"], "publicationDate": "2023-05-08", "journal": {"name": "Proceedings
        of the Eighteenth European Conference on Computer Systems"}, "authors": [{"authorId":
        "153917992", "name": "Lingmei Weng"}, {"authorId": "31567532", "name": "Yigong
        Hu"}, {"authorId": "145557503", "name": "Peng Huang"}, {"authorId": "1700208",
        "name": "Jason Nieh"}, {"authorId": "2144516645", "name": "Junfeng Yang"}]},
        {"paperId": "912c77c0a6fff1119073347c90a6d06b3885f096", "externalIds": {"DBLP":
        "conf/wafr/2022", "DOI": "10.1007/978-3-031-21090-7", "CorpusId": 254716743},
        "corpusId": 254716743, "publicationVenue": {"id": "bff7eed1-d24f-440c-a9fe-c7b93f066cff",
        "name": "Workshop on the Algorithmic Foundations of Robotics", "type": "conference",
        "alternate_names": ["WAFR", "International Workshop Algorithmic Foundations
        Robotics", "Int Workshop Algorithmic Found Robot", "Workshop Algorithmic Found
        Robot"], "url": "http://www.wafr.org/"}, "url": "https://www.semanticscholar.org/paper/912c77c0a6fff1119073347c90a6d06b3885f096",
        "title": "Algorithmic Foundations of Robotics XV - Proceedings of the Fifteenth
        Workshop on the Algorithmic Foundations of Robotics, WAFR 2022, College Park,
        MD, USA, 22-24 June, 2022", "abstract": null, "venue": "Workshop on the Algorithmic
        Foundations of Robotics", "year": 2023, "referenceCount": 0, "citationCount":
        1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["Conference"], "publicationDate":
        null, "journal": {"volume": "25"}, "authors": [{"authorId": "2217544374",
        "name": "K. C. Liu"}, {"authorId": "34656105", "name": "John S. Koh"}, {"authorId":
        "1751667", "name": "S. Bellovin"}, {"authorId": "1700208", "name": "Jason
        Nieh"}, {"authorId": "1744969", "name": "Alexander A. Shvartsman"}]}, {"paperId":
        "11bcdf664ee392ba1cec9a0ecc0f7d59a7f497eb", "externalIds": {"DBLP": "conf/osdi/David0SSY0XNG22",
        "CorpusId": 250520470}, "corpusId": 250520470, "publicationVenue": {"id":
        "86c43745-31d9-4c1a-b33f-ce3aa0042dbb", "name": "USENIX Symposium on Operating
        Systems Design and Implementation", "type": "conference", "alternate_names":
        ["Oper Syst Des Implement", "Operating Systems Design and Implementation",
        "OSDI", "USENIX Symp Oper Syst Des Implement"]}, "url": "https://www.semanticscholar.org/paper/11bcdf664ee392ba1cec9a0ecc0f7d59a7f497eb",
        "title": "UPGRADVISOR: Early Adopting Dependency Updates Using Hybrid Program
        Analysis and Hardware Tracing", "abstract": "Applications often have fast-paced
        release schedules, but adoption of software dependency updates can lag by
        years, leaving applications susceptible to security risks and unexpected breakage.
        To address this problem, we present U PGRADVISOR , a system that reduces developer
        effort in evaluating dependency updates and can, in many cases, automatically
        determine which updates are backward-compatible versus API-breaking. U PGRADVISOR
        introduces a novel co-designed static analysis and dynamic tracing mechanism
        to gauge the scope and effect of dependency updates on an application. Static
        analysis prunes changes irrelevant to an application and clusters relevant
        ones into targets . Dynamic tracing needs to focus only on whether targets
        affect an application, making it fast and accurate. U PGRADVISOR handles dynamic
        interpreted languages and introduces call graph over-approximation to account
        for their lack of type information and selective hardware tracing to capture
        program execution while ignoring interpreter machinery. We have implemented
        U PGRADVISOR for Python and evaluated it on 172 dependency updates previously
        blocked from being adopted in widely-used open-source software, including
        Django , aws-cli , tfx , and Celery . U PGRADVISOR automatically determined
        that 56% of dependencies were safe to update and reduced by more than an order
        of magnitude the number of code changes that needed to be considered by dynamic
        tracing. Evaluating U PGRADVISOR \u2019s tracer in a production-like environment
        incurred only 3% overhead on average, making it fast enough to deploy in practice.
        We submitted safe updates that were previously blocked as pull requests for
        nine projects, and their developers have already merged most of them. Abstract
        The version of U PGRADVISOR used to perform the experiments described in the
        paper may be downloaded from figshare.com. Theartifactcontainsthecodeforthepackagesur-vey,
        the static analyzer, and the hardware tracer. It also contains scripts to
        compile the tracer, run the experiments described in the paper, and produce
        most of the figures. For the most up to We provide the analyzer pre-installed
        in a docker container. The tracer requires a bare-metal machine. It directly
        employs a tracing capability found in Intel 5th generation CPUs (Broadwell)
        and above. Installing the tracer software requires root access to the OS.
        This artifact will run on a i7-10700 CPU workstation with 16GB RAM. A slower
        machine may result in reduced performance. We set up the docker container
        on the tracer machine and encourage you to do the same.", "venue": "USENIX
        Symposium on Operating Systems Design and Implementation", "year": 2022, "referenceCount":
        40, "citationCount": 2, "influentialCitationCount": 1, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
        "Conference"], "publicationDate": null, "journal": {"pages": "751-767"}, "authors":
        [{"authorId": "1974088", "name": "Yaniv David"}, {"authorId": "2176154648",
        "name": "Xudong Sun"}, {"authorId": "2176101958", "name": "Raphael J Sofaer"},
        {"authorId": "2176101817", "name": "Aditya Senthilnathan"}, {"authorId": "152211006",
        "name": "Junfeng Yang"}, {"authorId": "145057220", "name": "Zhiqiang Zuo"},
        {"authorId": "38394648", "name": "G. Xu"}, {"authorId": "1700208", "name":
        "Jason Nieh"}, {"authorId": "3409635", "name": "Ronghui Gu"}]}, {"paperId":
        "23d2ce87033bbeaddcfbeb889c6d30b00d12ad7f", "externalIds": {"DBLP": "conf/osdi/YaoTGN22",
        "CorpusId": 250015778}, "corpusId": 250015778, "publicationVenue": {"id":
        "86c43745-31d9-4c1a-b33f-ce3aa0042dbb", "name": "USENIX Symposium on Operating
        Systems Design and Implementation", "type": "conference", "alternate_names":
        ["Oper Syst Des Implement", "Operating Systems Design and Implementation",
        "OSDI", "USENIX Symp Oper Syst Des Implement"]}, "url": "https://www.semanticscholar.org/paper/23d2ce87033bbeaddcfbeb889c6d30b00d12ad7f",
        "title": "DuoAI: Fast, Automated Inference of Inductive Invariants for Verifying
        Distributed Protocols", "abstract": "Distributed systems are complex and difficult
        to build correctly. Formal verification can provably rule out bugs in such
        systems, but finding an inductive invariant that implies the safety property
        of the system is often the hardest part of the proof. We present DuoAI, an
        automated system that quickly finds inductive invariants for verifying distributed
        protocols by reducing SMT query costs in checking invariants with existential
        quantifiers. DuoAI enumerates the strongest candidate invariants that hold
        on validate states from protocol simulations, then applies two methods in
        parallel, returning the result from the method that succeeds first. One checks
        all candidate invariants and weakens them as needed until it finds an inductive
        invariant that implies the safety property. Another checks invariants without
        existential quantifiers to find an inductive invariant without the safety
        property, then adds candidate invariants with existential quantifiers to strengthen
        it until the safety property holds. Both methods are guaranteed to find an
        inductive invariant that proves desired safety properties, if one exists,
        but the first reduces SMT query costs when more candidate invariants with
        existential quantifiers are needed, while the second reduces SMT query costs
        when few candidate invariants with existential quantifiers suffice. We show
        that DuoAI verifies more than two dozen common distributed protocols automatically,
        including various versions of Paxos, and outperforms alternative methods both
        in the number of protocols it verifies and the speed at which it does so,including
        solving Paxos more than two orders of magnitude faster than previous methods.
        which is difficult to do without first knowing the ground-truth invariants.
        The 4 protocols have much simpler inductive invariants when expressed on top
        of these clauses, with all except the simplest, client server db ae, becoming
        \u2203 -free. Ivy fails when checking the invariants generated by IC3PO for
        Paxos and flexible Paxos. The IC3PO authors [9] imply that the invariants
        had to be manually checked against the human-expert invariants.", "venue":
        "USENIX Symposium on Operating Systems Design and Implementation", "year":
        2022, "referenceCount": 38, "citationCount": 5, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": null,
        "journal": {"pages": "485-501"}, "authors": [{"authorId": "48270480", "name":
        "Jianan Yao"}, {"authorId": "51513737", "name": "Runzhou Tao"}, {"authorId":
        "3409635", "name": "Ronghui Gu"}, {"authorId": "1700208", "name": "Jason Nieh"}]},
        {"paperId": "3af13b96191578ccb41388b3017829246859ea00", "externalIds": {"DBLP":
        "conf/osdi/HofN22", "CorpusId": 250520326}, "corpusId": 250520326, "publicationVenue":
        {"id": "86c43745-31d9-4c1a-b33f-ce3aa0042dbb", "name": "USENIX Symposium on
        Operating Systems Design and Implementation", "type": "conference", "alternate_names":
        ["Oper Syst Des Implement", "Operating Systems Design and Implementation",
        "OSDI", "USENIX Symp Oper Syst Des Implement"]}, "url": "https://www.semanticscholar.org/paper/3af13b96191578ccb41388b3017829246859ea00",
        "title": "BlackBox: A Container Security Monitor for Protecting Containers
        on Untrusted Operating Systems", "abstract": "Containers are widely deployed
        to package, isolate, and multiplex applications on shared computing infrastructure,
        but rely on the operating system to enforce their security guarantees. This
        poses a signi\ufb01cant security risk as large operating system codebases
        contain many vulnerabilities. We have created BlackBox, a new container architecture
        that provides \ufb01ne-grain protection of application data con\ufb01dentiality
        and integrity without trusting the operating system. BlackBox introduces a
        container security monitor, a small trusted computing base that creates protected
        physical address spaces (PPASes) for each container such that there is no
        direct information \ufb02ow from container to operating system or other container
        PPASes. Indirect information \ufb02ow can only happen through the monitor,
        which only copies data between container PPASes and the operating system as
        system call arguments, encrypting data as needed to protect interprocess communication
        through the operating system. Containerized applications do not need to be
        modi\ufb01ed, can still make use of operating system services via system calls,
        yet their CPU and memory state are isolated and protected from other containers
        and the operating system. We have implemented BlackBox by leveraging Arm hardware
        virtualization support, using nested paging to enforce PPASes. The trusted
        computing base is a few thousand lines of code, many orders of magnitude less
        than Linux, yet supports widely-used Linux containers with only modest modi\ufb01cations
        to the Linux kernel. We show that BlackBox provides superior security guarantees
        over traditional hypervisor and container architectures with only modest performance
        overhead on real application workloads.", "venue": "USENIX Symposium on Operating
        Systems Design and Implementation", "year": 2022, "referenceCount": 60, "citationCount":
        9, "influentialCitationCount": 1, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
        "publicationDate": null, "journal": {"pages": "683-700"}, "authors": [{"authorId":
        "144288636", "name": "Alexander Van''t Hof"}, {"authorId": "1700208", "name":
        "Jason Nieh"}]}, {"paperId": "59af677f81ded821b3c24f70b26808a4b12e207b", "externalIds":
        {"CorpusId": 250015287}, "corpusId": 250015287, "publicationVenue": null,
        "url": "https://www.semanticscholar.org/paper/59af677f81ded821b3c24f70b26808a4b12e207b",
        "title": "Design and Veri\ufb01cation of the Arm Con\ufb01dential Compute
        Architecture", "abstract": "The increasing use of sensitive private data in
        computing is matched by a growing concern regarding data privacy. System software
        such as hypervisors and operating systems are supposed to protect and isolate
        applications and their private data, but their large codebases contain many
        vulnerabilities that can risk data con\ufb01dentiality and integrity. We introduce
        Realms, a new abstraction for con\ufb01dential computing to protect the data
        con\ufb01dentiality and integrity of virtual machines. Hardware creates and
        enforces Realm world, a new physical address space for Realms. Firmware controls
        the hardware to secure Realms and handles requests from untrusted system software
        to manage Realms, including creating and running them. Untrusted system software
        retains control of the dynamic allocation of memory to Realms, but cannot
        access Realm memory contents, even if run at a higher privileged level. To
        guarantee the security of Realms, we veri\ufb01ed the \ufb01rmware, introducing
        novel veri\ufb01cation techniques that enable us to prove, for the \ufb01rst
        time, the security and correctness of concurrent software with hand-over-hand
        locking and dynamically allocated shared page tables, data races in kernel
        code running on relaxed memory hardware, integrated C and Arm assembly code
        calling one another, and untrusted software being in full control of allocating
        system resources. Realms are included in the Arm Con\ufb01dential Compute
        Architecture.", "venue": "", "year": 2022, "referenceCount": 59, "citationCount":
        4, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
        "journal": null, "authors": [{"authorId": "2108147908", "name": "Xupeng Li"},
        {"authorId": "2173139985", "name": "Xuheng Li"}, {"authorId": "1700208", "name":
        "Jason Nieh"}]}, {"paperId": "86a301c4fcd85ae6e003c34087d25df812b9da0a", "externalIds":
        {"DBLP": "journals/ftsec/ChakrabortiCKNS22", "DOI": "10.1561/3300000028",
        "CorpusId": 247065327}, "corpusId": 247065327, "publicationVenue": null, "url":
        "https://www.semanticscholar.org/paper/86a301c4fcd85ae6e003c34087d25df812b9da0a",
        "title": "Cloud Computing Security: Foundations and Research Directions",
        "abstract": null, "venue": "Found. Trends Priv. Secur.", "year": 2022, "referenceCount":
        0, "citationCount": 7, "influentialCitationCount": 0, "isOpenAccess": true,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": null, "journal": {"volume": "3", "pages": "103-213", "name":
        "Found. Trends Priv. Secur."}, "authors": [{"authorId": "1782498", "name":
        "Anrin Chakraborti"}, {"authorId": "1692516", "name": "Reza Curtmola"}, {"authorId":
        "2067681624", "name": "Jonathan Katz"}, {"authorId": "1700208", "name": "Jason
        Nieh"}, {"authorId": "145897166", "name": "A. Sadeghi"}, {"authorId": "1764620",
        "name": "R. Sion"}, {"authorId": "39939156", "name": "Yinqian Zhang"}]}, {"paperId":
        "882cc7dfb01a96ae08388e4bac3bdcc5caffdf01", "externalIds": {"DBLP": "conf/osdi/LiLDGNSS22",
        "CorpusId": 250520576}, "corpusId": 250520576, "publicationVenue": {"id":
        "86c43745-31d9-4c1a-b33f-ce3aa0042dbb", "name": "USENIX Symposium on Operating
        Systems Design and Implementation", "type": "conference", "alternate_names":
        ["Oper Syst Des Implement", "Operating Systems Design and Implementation",
        "OSDI", "USENIX Symp Oper Syst Des Implement"]}, "url": "https://www.semanticscholar.org/paper/882cc7dfb01a96ae08388e4bac3bdcc5caffdf01",
        "title": "Design and Verification of the Arm Confidential Compute Architecture",
        "abstract": "The increasing use of sensitive private data in computing is
        matched by a growing concern regarding data privacy. System software such
        as hypervisors and operating systems are supposed to protect and isolate applications
        and their private data, but their large codebases contain many vulnerabilities
        that can risk data con\ufb01dentiality and integrity. We introduce Realms,
        a new abstraction for con\ufb01dential computing to protect the data con\ufb01dentiality
        and integrity of virtual machines. Hardware creates and enforces Realm world,
        a new physical address space for Realms. Firmware controls the hardware to
        secure Realms and handles requests from untrusted system software to manage
        Realms, including creating and running them. Untrusted system software retains
        control of the dynamic allocation of memory to Realms, but cannot access Realm
        memory contents, even if run at a higher privileged level. To guarantee the
        security of Realms, we veri\ufb01ed the \ufb01rmware, introducing novel veri\ufb01cation
        techniques that enable us to prove, for the \ufb01rst time, the security and
        correctness of concurrent software with hand-over-hand locking and dynamically
        allocated shared page tables, data races in kernel code running on relaxed
        memory hardware, integrated C and Arm assembly code calling one another, and
        untrusted software being in full control of allocating system resources. Realms
        are included in the Arm Con\ufb01dential Compute Architecture.", "venue":
        "USENIX Symposium on Operating Systems Design and Implementation", "year":
        2022, "referenceCount": 55, "citationCount": 22, "influentialCitationCount":
        2, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": null,
        "journal": {"pages": "465-484"}, "authors": [{"authorId": "2108147908", "name":
        "Xupeng Li"}, {"authorId": "2173139985", "name": "Xuheng Li"}, {"authorId":
        "2187457029", "name": "Christoffer Dall"}, {"authorId": "3409635", "name":
        "Ronghui Gu"}, {"authorId": "1700208", "name": "Jason Nieh"}, {"authorId":
        "2187456562", "name": "Yousuf Sait"}, {"authorId": "13740332", "name": "Gareth
        Stockwell"}]}, {"paperId": "0192b460429fc155035ee895c2a9d3383123fc29", "externalIds":
        {"DBLP": "conf/usenix/WengHNY21", "CorpusId": 236429161}, "corpusId": 236429161,
        "publicationVenue": {"id": "9448f839-459b-45f3-8573-5eff3f032334", "name":
        "USENIX Annual Technical Conference", "type": "conference", "alternate_names":
        ["USENIX Annu Tech Conf", "USENIX", "USENIX ATC"], "url": "https://www.usenix.org/conferences/byname/131"},
        "url": "https://www.semanticscholar.org/paper/0192b460429fc155035ee895c2a9d3383123fc29",
        "title": "Argus: Debugging Performance Issues in Modern Desktop Applications
        with Annotated Causal Tracing", "abstract": "Modern desktop applications involve
        many asynchronous, concurrent interactions that make performance issues difficult
        to diagnose. Although prior work has used causal tracing for debugging performance
        issues in distributed systems, we find that these techniques suffer from high
        inaccuracies for desktop applications. We present Argus, a fast, effective
        causal tracing tool for debugging performance anomalies in desktop applications.
        Argus introduces a novel notion of strong and weak edges to explicitly model
        and annotate trace graph ambiguities, a new beam-search-based diagnosis algorithm
        to select the most likely causal paths in the presence of ambiguities, and
        a new way to compare causal paths across normal and abnormal executions. We
        have implemented Argus across multiple versions of macOS and evaluated it
        on 12 infamous spinning pinwheel issues in popular macOS applications. Argus
        diagnosed the root causes for all issues, 10 of which were previously unknown,
        some of which have been open for several years. Argus incurs less than 5%
        CPU overhead when its system-wide tracing is enabled, making always-on tracing
        feasible.", "venue": "USENIX Annual Technical Conference", "year": 2021, "referenceCount":
        46, "citationCount": 4, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
        "Conference"], "publicationDate": null, "journal": {"pages": "193-207"}, "authors":
        [{"authorId": "153917992", "name": "Lingmei Weng"}, {"authorId": "145557503",
        "name": "Peng Huang"}, {"authorId": "1700208", "name": "Jason Nieh"}, {"authorId":
        "152211006", "name": "Junfeng Yang"}]}, {"paperId": "1caf87b6df36c049acae3568f5d37cdbd7647cc4",
        "externalIds": {"MAG": "3167793678", "DOI": "10.51868/5", "CorpusId": 236416691},
        "corpusId": 236416691, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/1caf87b6df36c049acae3568f5d37cdbd7647cc4",
        "title": "Antitrust Enforcement and Big Tech: After the Remedy Is Ordered",
        "abstract": "Each of us\u2014one an attorney and the other two software experts\u2014has
        substantial experience monitoring the implementation of court-ordered remedies
        in two leading hi-tech cases: United States v. Microsoft Corp. and United
        States v. Bazaarvoice, Inc. We discuss challenges that attorney and expert
        monitors confront in overseeing company compliance with antitrust remedial
        decrees in cases against hi-tech companies. We first summarize the legal principles
        applicable to antitrust remedies. Thereafter, we discuss oversight in the
        Microsoft and Bazaarvoice cases. Finally, we offer takeaways on effective
        antitrust decree monitoring. Two takeaways are particularly noteworthy. First,
        expect the unexpected. During monitoring oversight, implementing the court
        decree\u2019s relatively general relief provisions will likely uncover unanticipated
        issues that prove challenging to resolve and may often require hi-tech expertise
        to do so. Second\u2014and relatedly\u2014be skeptical of company resistance.
        Court-ordered relief is unlikely to align with company business interests;
        if it did, the company probably would have adopted the practice without being
        ordered to do so. Accordingly, company incentives probably will militate toward
        a cramped view of decree implementation. Monitors therefore should refrain
        from taking company protestations at face value and should be prepared to
        leverage hi-tech expertise to probe company systems, data, and personnel for
        verification or refutation of company positions. Finally, with artificial
        intelligence and computational law (including antitrust) continuing to develop,
        we call attention to opportunities to use computer-automated processes to
        inform compliance oversight.", "venue": "", "year": 2021, "referenceCount":
        0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": true,
        "openAccessPdf": {"url": "https://doi.org/10.51868/5", "status": null}, "fieldsOfStudy":
        ["Business"], "s2FieldsOfStudy": [{"category": "Business", "source": "external"},
        {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
        null, "publicationDate": "2021-05-31", "journal": {"volume": "", "pages":
        "64-83", "name": ""}, "authors": [{"authorId": "65928304", "name": "Jay L.
        Himes"}, {"authorId": "1700208", "name": "Jason Nieh"}, {"authorId": "30876744",
        "name": "R. Schnell"}]}, {"paperId": "1d71a942f457f6b324c42256eed829a8806b77dd",
        "externalIds": {"DBLP": "conf/osdi/YaoTGNJR21", "CorpusId": 236771625}, "corpusId":
        236771625, "publicationVenue": {"id": "86c43745-31d9-4c1a-b33f-ce3aa0042dbb",
        "name": "USENIX Symposium on Operating Systems Design and Implementation",
        "type": "conference", "alternate_names": ["Oper Syst Des Implement", "Operating
        Systems Design and Implementation", "OSDI", "USENIX Symp Oper Syst Des Implement"]},
        "url": "https://www.semanticscholar.org/paper/1d71a942f457f6b324c42256eed829a8806b77dd",
        "title": "DistAI: Data-Driven Automated Invariant Learning for Distributed
        Protocols", "abstract": "Distributed systems are notoriously hard to implement
        correctly due to non-determinism. Finding the inductive invariant of the distributed
        protocol is a critical step in verifying the correctness of distributed systems,
        but takes a long time to do even for simple protocols. We present DistAI,
        a data-driven automated system for learning inductive invariants for distributed
        protocols. DistAI generates data by simulating the distributed protocol at
        different instance sizes and recording states as samples. Based on the observation
        that invariants are often concise in practice, DistAI starts with small invariant
        formulas and enumerates all strongest possible invariants that hold for all
        samples. It then feeds those invariants and the desired safety properties
        to an SMT solver to check if the conjunction of the invariants and the safety
        properties is inductive. Starting with small invariant formulas and strongest
        possible invariants avoids large SMT queries, improving SMT solver performance.
        Because DistAI starts with the strongest possible invariants, if the SMT solver
        fails, DistAI does not need to discard failed invariants, but knows to monotonically
        weaken them and try again with the solver, repeating the process until it
        eventually succeeds. We prove that DistAI is guaranteed to find the \u2203-free
        inductive invariant that proves the desired safety properties in finite time,
        if one exists. Our evaluation shows that DistAI successfully verifies 13 common
        distributed protocols automatically and outperforms alternative methods both
        in the number of protocols it verifies and the speed at which it does so,
        in some cases by more than two orders of magnitude.", "venue": "USENIX Symposium
        on Operating Systems Design and Implementation", "year": 2021, "referenceCount":
        36, "citationCount": 21, "influentialCitationCount": 2, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
        "Conference"], "publicationDate": null, "journal": {"pages": "405-421"}, "authors":
        [{"authorId": "48270480", "name": "Jianan Yao"}, {"authorId": "51513737",
        "name": "Runzhou Tao"}, {"authorId": "3409635", "name": "Ronghui Gu"}, {"authorId":
        "1700208", "name": "Jason Nieh"}, {"authorId": "39400201", "name": "S. Jana"},
        {"authorId": "51167872", "name": "Gabriel Ryan"}]}, {"paperId": "59c83a2ced9816343098d85cdc7c12d806838fce",
        "externalIds": {"DBLP": "conf/sosp/TaoYLLNG21", "DOI": "10.1145/3477132.3483560",
        "CorpusId": 239028973}, "corpusId": 239028973, "publicationVenue": {"id":
        "6c6fcaa9-fd25-488b-8050-995227ac671c", "name": "Symposium on Operating Systems
        Principles", "type": "conference", "alternate_names": ["Symp Oper Syst Princ",
        "SOSP"], "url": "http://sosp.org/"}, "url": "https://www.semanticscholar.org/paper/59c83a2ced9816343098d85cdc7c12d806838fce",
        "title": "Formal Verification of a Multiprocessor Hypervisor on Arm Relaxed
        Memory Hardware", "abstract": "Concurrent systems software is widely-used,
        complex, and error-prone, posing a significant security risk. We introduce
        VRM, a new framework that makes it possible for the first time to verify concurrent
        systems software, such as operating systems and hypervisors, on Arm relaxed
        memory hardware. VRM defines a set of synchronization and memory access conditions
        such that a program that satisfies these conditions can be mostly verified
        on a sequentially consistent hardware model and the proofs will automatically
        hold on relaxed memory hardware. VRM can be used to verify concurrent kernel
        code that is not data race free, including code responsible for managing shared
        page tables in the presence of relaxed MMU hardware. Using VRM, we verify
        the security guarantees of a retrofitted implementation of the Linux KVM hypervisor
        on Arm. For multiple versions of KVM, we prove KVM''s security properties
        on a sequentially consistent model, then prove that KVM satisfies VRM''s required
        program conditions such that its security proofs hold on Arm relaxed memory
        hardware. Our experimental results show that the retrofit and VRM conditions
        do not adversely affect the scalability of verified KVM, as it performs similar
        to unmodified KVM when concurrently running many multiprocessor virtual machines
        with real application workloads on Arm multiprocessor server hardware. Our
        work is the first machine-checked proof for concurrent systems software on
        Arm relaxed memory hardware.", "venue": "Symposium on Operating Systems Principles",
        "year": 2021, "referenceCount": 54, "citationCount": 19, "influentialCitationCount":
        1, "isOpenAccess": true, "openAccessPdf": {"url": "https://dl.acm.org/doi/pdf/10.1145/3477132.3483560",
        "status": null}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
        "Book", "Conference"], "publicationDate": "2021-10-26", "journal": {"name":
        "Proceedings of the ACM SIGOPS 28th Symposium on Operating Systems Principles"},
        "authors": [{"authorId": "51513737", "name": "Runzhou Tao"}, {"authorId":
        "48270480", "name": "Jianan Yao"}, {"authorId": "2108147908", "name": "Xupeng
        Li"}, {"authorId": "2175344", "name": "Shih-wei Li"}, {"authorId": "1700208",
        "name": "Jason Nieh"}, {"authorId": "3409635", "name": "Ronghui Gu"}]}, {"paperId":
        "66537bf2100089307bb0baa0dc6df11a04c62531", "externalIds": {"DBLP": "conf/sp/LiLGNH21",
        "DOI": "10.1109/SP40001.2021.00049", "CorpusId": 237331219}, "corpusId": 237331219,
        "publicationVenue": {"id": "29b9c461-963e-4d11-b2ab-92c182243942", "name":
        "IEEE Symposium on Security and Privacy", "type": "conference", "alternate_names":
        ["S&P", "IEEE Symp Secur Priv"], "url": "http://www.ieee-security.org/"},
        "url": "https://www.semanticscholar.org/paper/66537bf2100089307bb0baa0dc6df11a04c62531",
        "title": "A Secure and Formally Verified Linux KVM Hypervisor", "abstract":
        "Commodity hypervisors are widely deployed to support virtual machines (VMs)
        on multiprocessor hardware. Their growing complexity poses a security risk.
        To enable formal verification over such a large codebase, we introduce microverification,
        a new approach that decomposes a commodity hypervisor into a small core and
        a set of untrusted services so that we can prove security properties of the
        entire hypervisor by verifying the core alone. To verify the multiprocessor
        hypervisor core, we introduce security-preserving layers to modularize the
        proof without hiding information leakage so we can prove each layer of the
        implementation refines its specification, and the top layer specification
        is refined by all layers of the core implementation. To verify commodity hypervisor
        features that require dynamically changing information flow, we introduce
        data oracles to mask intentional information flow. We can then prove noninterference
        at the top layer specification and guarantee the resulting security properties
        hold for the entire hypervisor implementation. Using microverification, we
        retrofitted the Linux KVM hypervisor with only modest modifications to its
        codebase. Using Coq, we proved that the hypervisor protects the confidentiality
        and integrity of VM data, while retaining KVM\u2019s functionality and performance.
        Our work is the first machine-checked security proof for a commodity multiprocessor
        hypervisor.", "venue": "IEEE Symposium on Security and Privacy", "year": 2021,
        "referenceCount": 75, "citationCount": 35, "influentialCitationCount": 0,
        "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2021-05-01", "journal":
        {"pages": "1782-1799", "name": "2021 IEEE Symposium on Security and Privacy
        (SP)"}, "authors": [{"authorId": "2175344", "name": "Shih-wei Li"}, {"authorId":
        "2108147908", "name": "Xupeng Li"}, {"authorId": "3409635", "name": "Ronghui
        Gu"}, {"authorId": "1700208", "name": "Jason Nieh"}, {"authorId": "2111716948",
        "name": "J. Hui"}]}, {"paperId": "73d77e49560e637fe6bb6d82a965bd149a5e47d4",
        "externalIds": {"DBLP": "conf/mobisys/KohNB21", "DOI": "10.1145/3458864.3468220",
        "CorpusId": 235599312}, "corpusId": 235599312, "publicationVenue": {"id":
        "41929b26-d887-42cf-97f1-1217a0a9e315", "name": "ACM SIGMOBILE International
        Conference on Mobile Systems, Applications, and Services", "type": "conference",
        "alternate_names": ["Int Conf Mob Syst Appl Serv", "MobiSys", "International
        Conference on Mobile Systems, Applications, and Services", "ACM SIGMOBILE
        Int Conf Mob Syst Appl Serv"]}, "url": "https://www.semanticscholar.org/paper/73d77e49560e637fe6bb6d82a965bd149a5e47d4",
        "title": "Encrypted cloud photo storage using Google photos", "abstract":
        "Cloud photo services are widely used for persistent, convenient, and often
        free photo storage, which is especially useful for mobile devices. As users
        store more and more photos in the cloud, significant privacy concerns arise
        because even a single compromise of a user''s credentials give attackers unfettered
        access to all of the user''s photos. We have created Easy Secure Photos (ESP)
        to enable users to protect their photos on cloud photo services such as Google
        Photos. ESP introduces a new client-side encryption architecture that includes
        a novel format-preserving image encryption algorithm, an encrypted thumbnail
        display mechanism, and a usable key management system. ESP encrypts image
        data such that the result is still a standard format image like JPEG that
        is compatible with cloud photo services. ESP efficiently generates and displays
        encrypted thumbnails for fast and easy browsing of photo galleries from trusted
        user devices. ESP''s key management makes it simple to authorize multiple
        user devices to view encrypted image content via a process similar to device
        pairing, but using the cloud photo service as a QR code communication channel.
        We have implemented ESP in a popular Android photos app for use with Google
        Photos and demonstrate that it is easy to use and provides encryption functionality
        transparently to users, maintains good interactive performance and image quality
        while providing strong privacy guarantees, and retains the sharing and storage
        benefits of Google Photos without any changes to the cloud service.", "venue":
        "ACM SIGMOBILE International Conference on Mobile Systems, Applications, and
        Services", "year": 2021, "referenceCount": 56, "citationCount": 5, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle", "Book", "Conference"], "publicationDate":
        "2021-06-24", "journal": {"name": "Proceedings of the 19th Annual International
        Conference on Mobile Systems, Applications, and Services"}, "authors": [{"authorId":
        "34656105", "name": "John S. Koh"}, {"authorId": "1700208", "name": "Jason
        Nieh"}, {"authorId": "1751667", "name": "S. Bellovin"}]}, {"paperId": "95dc1272a354aa822320a39ae0369e7dffa2a892",
        "externalIds": {"DBLP": "conf/mobisys/AlDuaijN21", "DOI": "10.1145/3458864.3467678",
        "CorpusId": 235599385}, "corpusId": 235599385, "publicationVenue": {"id":
        "41929b26-d887-42cf-97f1-1217a0a9e315", "name": "ACM SIGMOBILE International
        Conference on Mobile Systems, Applications, and Services", "type": "conference",
        "alternate_names": ["Int Conf Mob Syst Appl Serv", "MobiSys", "International
        Conference on Mobile Systems, Applications, and Services", "ACM SIGMOBILE
        Int Conf Mob Syst Appl Serv"]}, "url": "https://www.semanticscholar.org/paper/95dc1272a354aa822320a39ae0369e7dffa2a892",
        "title": "Tap: an app framework for dynamically composable mobile systems",
        "abstract": "As smartphones and tablets have become ubiquitous, there is a
        growing demand for apps that can enable users to collaboratively use multiple
        mobile systems. We present Tap, a framework that makes it easy for users to
        dynamically compose collections of mobile systems and developers to write
        apps that make use of those impromptu collections. Tap users control the composition
        by simply tapping systems together for discovery and authentication. The physical
        interaction mimics and supports ephemeral user interactions without the need
        for tediously exchanging user contact information such as phone numbers or
        email addresses. Tapping triggers a simple NFC-based mechanism to exchange
        connectivity information and security credentials that works across heterogeneous
        networks and requires no user accounts or cloud infrastructure support. Tap
        makes it possible for apps to use existing mobile platform APIs across multiple
        mobile systems by virtualizing data sources so that local and remote data
        sources can be combined together upon tapping. Virtualized data sources can
        be hardware or software features, including media, clipboard, calendar events,
        and devices such as cameras and microphones. Leveraging existing mobile platform
        APIs makes it easy for developers to write apps that use hardware and software
        features across dynamically composed collections of mobile systems. We have
        implemented a Tap prototype that allows apps to make use of both unmodified
        Android and iOS systems. We have modified and implemented various apps using
        Tap to demonstrate that it is easy to use and can enable apps to provide powerful
        new functionality by leveraging multiple mobile systems. Our results show
        that Tap has good performance, even for high-bandwidth features, and is user
        and developer friendly.", "venue": "ACM SIGMOBILE International Conference
        on Mobile Systems, Applications, and Services", "year": 2021, "referenceCount":
        71, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": true,
        "openAccessPdf": {"url": "https://dl.acm.org/doi/pdf/10.1145/3458864.3467678",
        "status": null}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
        "Book", "Conference"], "publicationDate": "2021-06-24", "journal": {"name":
        "Proceedings of the 19th Annual International Conference on Mobile Systems,
        Applications, and Services"}, "authors": [{"authorId": "2715408", "name":
        "Naser AlDuaij"}, {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId":
        "ad320d4d95c9a0f92271d7adc0babd81735a9c85", "externalIds": {"MAG": "3159547072",
        "DBLP": "conf/uss/LiLGNH21", "CorpusId": 236802961}, "corpusId": 236802961,
        "publicationVenue": {"id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0", "name":
        "USENIX Security Symposium", "type": "conference", "alternate_names": ["USENIX
        Secur Symp"], "url": "http://www.usenix.org/events/bytopic/security.html"},
        "url": "https://www.semanticscholar.org/paper/ad320d4d95c9a0f92271d7adc0babd81735a9c85",
        "title": "Formally Verified Memory Protection for a Commodity Multiprocessor
        Hypervisor", "abstract": "Hypervisors are widely deployed by cloud computing
        providers to support virtual machines, but their growing complexity poses
        a security risk, as large codebases contain many vulnerabilities. We present
        SeKVM, a layered Linux KVM hypervisor architecture that has been formally
        verified on multiprocessor hardware. Using layers, we isolate KVM\u2019s trusted
        computing base into a small core such that only the core needs to be verified
        to ensure KVM\u2019s security guarantees. Using layers, we model hardware
        features at different levels of abstraction tailored to each layer of software.
        Lower hypervisor layers that configure and control hardware are verified using
        a novel machine model that includes multiprocessor memory management hardware
        such as multi-level shared page tables, tagged TLBs, and a coherent cache
        hierarchy with cache bypass support. Higher hypervisor layers that build on
        the lower layers are then verified using a more abstract and simplified model,
        taking advantage of layer encapsulation to reduce proof burden. Furthermore,
        layers provide modularity to reduce verification effort across multiple implementation
        versions. We have retrofitted and verified multiple versions of KVM on Arm
        multiprocessor hardware, proving the correctness of the implementations and
        that they contain no vulnerabilities that can affect KVM\u2019s security guarantees.
        Our work is the first machine-checked proof for a commodity hypervisor using
        multiprocessor memory management hardware. SeKVM requires only modest KVM
        modifications and incurs only modest performance overhead versus unmodified
        KVM on real application workloads.", "venue": "USENIX Security Symposium",
        "year": 2021, "referenceCount": 63, "citationCount": 24, "influentialCitationCount":
        2, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal":
        {"pages": "3953-3970"}, "authors": [{"authorId": "2175344", "name": "Shih-wei
        Li"}, {"authorId": "2108147908", "name": "Xupeng Li"}, {"authorId": "3409635",
        "name": "Ronghui Gu"}, {"authorId": "1700208", "name": "Jason Nieh"}, {"authorId":
        "2111716948", "name": "J. Hui"}]}, {"paperId": "e530f36019b32bc0eb456a3e70632ac948f080a8",
        "externalIds": {"DOI": "10.1002/0471684228.egp12331", "CorpusId": 241793758},
        "corpusId": 241793758, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/e530f36019b32bc0eb456a3e70632ac948f080a8",
        "title": "Tap", "abstract": null, "venue": "Proceedings of the 19th Annual
        International Conference on Mobile Systems, Applications, and Services", "year":
        2021, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
        [], "publicationTypes": ["Conference"], "publicationDate": "2021-06-24", "journal":
        {"name": "Proceedings of the 19th Annual International Conference on Mobile
        Systems, Applications, and Services"}, "authors": [{"authorId": "2715408",
        "name": "Naser AlDuaij"}, {"authorId": "1700208", "name": "Jason Nieh"}]},
        {"paperId": "af687ee53dbbfc35eeec2e6e66f37587cad9ed7d", "externalIds": {"DBLP":
        "conf/asplos/LimN20", "MAG": "3011028847", "DOI": "10.1145/3373376.3378467",
        "CorpusId": 212688705}, "corpusId": 212688705, "publicationVenue": {"id":
        "d4610af5-85e0-480b-8773-5c71d92a7b99", "name": "International Conference
        on Architectural Support for Programming Languages and Operating Systems",
        "type": "conference", "alternate_names": ["ASPLOS", "Int Conf Archit Support
        Program Lang Oper Syst", "Archit Support Program Lang Oper Syst", "Architectural
        Support for Programming Languages and Operating Systems"], "url": "http://www.acm.org/sigplan/"},
        "url": "https://www.semanticscholar.org/paper/af687ee53dbbfc35eeec2e6e66f37587cad9ed7d",
        "title": "Optimizing Nested Virtualization Performance Using Direct Virtual
        Hardware", "abstract": "Nested virtualization, running virtual machines and
        hypervisors on top of other virtual machines and hypervisors, is increasingly
        important because of the need to deploy virtual machines running software
        stacks on top of virtualized cloud infrastructure. However, performance remains
        a key impediment to further adoption as application workloads can perform
        many times worse than native execution. To address this problem, we introduce
        DVH (Direct Virtual Hardware), a new approach that enables a host hypervisor,
        the hypervisor that runs directly on the hardware, to directly provide virtual
        hardware to nested virtual machines without the intervention of multiple levels
        of hypervisors. We introduce four DVH mechanisms, virtual-passthrough, virtual
        timers, virtual inter-processor interrupts, and virtual idle. DVH provides
        virtual hardware for these mechanisms that mimics the underlying hardware
        and in some cases adds new enhancements that leverage the flexibility of software
        without the need for matching physical hardware support. We have implemented
        DVH in the Linux KVM hypervisor. Our experimental results show that DVH can
        provide near native execution speeds and improve KVM performance by more than
        an order of magnitude on real application workloads.", "venue": "International
        Conference on Architectural Support for Programming Languages and Operating
        Systems", "year": 2020, "referenceCount": 52, "citationCount": 19, "influentialCitationCount":
        2, "isOpenAccess": true, "openAccessPdf": {"url": "https://dl.acm.org/doi/pdf/10.1145/3373376.3378467",
        "status": null}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
        "Book", "Conference"], "publicationDate": "2020-03-09", "journal": {"name":
        "Proceedings of the Twenty-Fifth International Conference on Architectural
        Support for Programming Languages and Operating Systems"}, "authors": [{"authorId":
        "34975877", "name": "J. Lim"}, {"authorId": "1700208", "name": "Jason Nieh"}]},
        {"paperId": "38cf86b4377c6367545ac0e11113bb19d704c3f8", "externalIds": {"MAG":
        "2976071174", "DBLP": "conf/mobisys/AlDuaijHN19a", "DOI": "10.1145/3307334.3332163",
        "CorpusId": 189926599}, "corpusId": 189926599, "publicationVenue": {"id":
        "41929b26-d887-42cf-97f1-1217a0a9e315", "name": "ACM SIGMOBILE International
        Conference on Mobile Systems, Applications, and Services", "type": "conference",
        "alternate_names": ["Int Conf Mob Syst Appl Serv", "MobiSys", "International
        Conference on Mobile Systems, Applications, and Services", "ACM SIGMOBILE
        Int Conf Mob Syst Appl Serv"]}, "url": "https://www.semanticscholar.org/paper/38cf86b4377c6367545ac0e11113bb19d704c3f8",
        "title": "Heterogeneous Multi-Mobile Computing (video)", "abstract": "As smartphones
        and tablets proliferate, there is a growing demand for multi-mobile computing
        [1, 2], the ability to combine multiple commodity mobile systems into more
        capable ones, including using multiple hardware devices such as cameras, displays,
        speakers, microphones, sensors, GPS, and input. However, the tremendous device,
        hardware, and software heterogeneity of mobile systems makes this difficult.
        In this demo, we present M2, a system for multi-mobile computing that enables
        existing unmodified mobile apps to make use of new ways of sharing and combining
        multiple devices. M2 introduces a new data-centric approach that leverages
        higher-level device abstractions and encoding/decoding hardware to efficiently
        share device data as opposed to low-level device-specific APIs.", "venue":
        "ACM SIGMOBILE International Conference on Mobile Systems, Applications, and
        Services", "year": 2019, "referenceCount": 3, "citationCount": 2, "influentialCitationCount":
        0, "isOpenAccess": true, "openAccessPdf": {"url": "https://dl.acm.org/doi/pdf/10.1145/3307334.3332163",
        "status": null}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
        "Book", "Conference"], "publicationDate": "2019-06-12", "journal": {"name":
        "Proceedings of the 17th Annual International Conference on Mobile Systems,
        Applications, and Services"}, "authors": [{"authorId": "2715408", "name":
        "Naser AlDuaij"}, {"authorId": "144288636", "name": "Alexander Van''t Hof"},
        {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId": "480846bb2752dbdbaa3382c33c82b8affb1e5437",
        "externalIds": {"MAG": "3004039831", "DBLP": "journals/internet/DouglisN19",
        "DOI": "10.1109/mic.2019.2955784", "CorpusId": 211038268}, "corpusId": 211038268,
        "publicationVenue": {"id": "2e2fed97-17e5-488e-9efa-833a387a842d", "name":
        "IEEE Internet Computing", "type": "journal", "alternate_names": ["IEEE Internet
        Comput"], "issn": "1089-7801", "url": "http://www.computer.org/internet/",
        "alternate_urls": ["https://ieeexplore.ieee.org/servlet/opac?punumber=4236"]},
        "url": "https://www.semanticscholar.org/paper/480846bb2752dbdbaa3382c33c82b8affb1e5437",
        "title": "Microservices and Containers", "abstract": "The articles in this
        special section focus on microservices and containers. These services allow
        an application to be comprised of many independently operating and scalable
        components, have become a common service paradigm. The ability to construct
        an application by provisioning these interoperating components has various
        advantages, including the isolation and independent development of tools such
        as key-value stores, authentication, logging, and many others. Containers
        are one type of system infrastructure that is commonly used to support microservices.
        With container management systems like Docker and orchestration systems like
        Kubernetes to control applications and dynamically provision their resources,
        cloud services can be extremely scalable, reliable, and reactive. However,
        other systems beyond containers can be used to support microservices, and
        many applications other than microservices benefit from containerization.",
        "venue": "IEEE Internet Computing", "year": 2019, "referenceCount": 0, "citationCount":
        24, "influentialCitationCount": 2, "isOpenAccess": true, "openAccessPdf":
        {"url": "https://ieeexplore.ieee.org/ielx7/4236/8970628/08970636.pdf", "status":
        null}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2019-11-01", "journal": {"volume": "23", "pages": "5-6", "name": "IEEE Internet
        Comput."}, "authors": [{"authorId": "1782350", "name": "F. Douglis"}, {"authorId":
        "1700208", "name": "Jason Nieh"}]}, {"paperId": "4a8d7cf7c9fa8bde3e9ab79bb0b2ab62afef074f",
        "externalIds": {"DBLP": "journals/usenix-login/KohBN19", "MAG": "2978480507",
        "CorpusId": 202640236}, "corpusId": 202640236, "publicationVenue": {"id":
        "98c61acc-a8fc-4fde-a125-33bbfd87206e", "name": "Login: The Usenix Magazine",
        "type": "journal", "alternate_names": ["login - The Usenix Magazine", "login  Usenix
        Mag", "Login Usenix Mag"], "issn": "1044-6397", "alternate_issns": ["2169-9364"],
        "url": "https://www.usenix.org/publications/login/", "alternate_urls": ["https://www.usenix.org/publications/login"]},
        "url": "https://www.semanticscholar.org/paper/4a8d7cf7c9fa8bde3e9ab79bb0b2ab62afef074f",
        "title": "Making It Easier to Encrypt Your Emails", "abstract": "Steven M.
        Bellovin is Professor of Computer Science at Columbia University and affiliate
        faculty at its law school. His research specializes in security, privacy,
        and related legal and policy issues. He co-authored Firewalls and Internet
        Security, the first book on the subject. He is a member of the National Academy
        of Engineering and received the USENIX \u201cFlame\u201d award for co-inventing
        Netnews. smb@cs.columbia.edu", "venue": "Login: The Usenix Magazine", "year":
        2019, "referenceCount": 5, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": null, "journal":
        {"volume": "44", "name": "login Usenix Mag."}, "authors": [{"authorId": "34656105",
        "name": "John S. Koh"}, {"authorId": "1751667", "name": "S. Bellovin"}, {"authorId":
        "1700208", "name": "Jason Nieh"}]}, {"paperId": "5beb9ed1dd02bcc0baa26d21a2b7568aec47901b",
        "externalIds": {"MAG": "2952763851", "DBLP": "conf/mobisys/AlDuaijHN19", "DOI":
        "10.1145/3307334.3326096", "CorpusId": 189926536}, "corpusId": 189926536,
        "publicationVenue": {"id": "41929b26-d887-42cf-97f1-1217a0a9e315", "name":
        "ACM SIGMOBILE International Conference on Mobile Systems, Applications, and
        Services", "type": "conference", "alternate_names": ["Int Conf Mob Syst Appl
        Serv", "MobiSys", "International Conference on Mobile Systems, Applications,
        and Services", "ACM SIGMOBILE Int Conf Mob Syst Appl Serv"]}, "url": "https://www.semanticscholar.org/paper/5beb9ed1dd02bcc0baa26d21a2b7568aec47901b",
        "title": "Heterogeneous Multi-Mobile Computing", "abstract": "As smartphones
        and tablets proliferate, there is a growing demand for multi-mobile computing,
        the ability to combine multiple mobile systems into more capable ones. We
        present M2, a system for multi-mobile computing that enables existing unmodified
        mobile apps to share and combine multiple devices, including cameras, displays,
        speakers, microphones, sensors, GPS, and input. M2 introduces a new data-centric
        approach that leverages higher-level device abstractions and hardware acceleration
        to efficiently share device data, not API calls. To support heterogeneous
        devices, M2 introduces device transformation, a new technique to mix and match
        different types of devices. Example transformations include combining multiple
        displays into a single larger display for better viewing, or substituting
        accelerometer for touchscreen input to provide a Nintendo Wii-like experience
        with existing mobile gaming apps. We have implemented M2 and show that it
        (1) operates across heterogeneous systems, including multiple versions of
        Android and iOS, (2) can enable unmodified Android apps to use multiple mobile
        devices in new and powerful ways, including supporting users with disabilities
        and better audio conferencing, and (3) can run apps across mobile systems
        with modest overhead and qualitative performance indistinguishable from using
        local device hardware.", "venue": "ACM SIGMOBILE International Conference
        on Mobile Systems, Applications, and Services", "year": 2019, "referenceCount":
        80, "citationCount": 14, "influentialCitationCount": 1, "isOpenAccess": true,
        "openAccessPdf": {"url": "https://dl.acm.org/doi/pdf/10.1145/3307334.3326096",
        "status": null}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
        "Book", "Conference"], "publicationDate": "2019-06-12", "journal": {"name":
        "Proceedings of the 17th Annual International Conference on Mobile Systems,
        Applications, and Services"}, "authors": [{"authorId": "2715408", "name":
        "Naser AlDuaij"}, {"authorId": "144288636", "name": "Alexander Van''t Hof"},
        {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId": "6c5c5be93b58e417220e0841ed5da62d1e8c7b5b",
        "externalIds": {"MAG": "2965541196", "DBLP": "conf/uss/LiKN19", "CorpusId":
        201136321}, "corpusId": 201136321, "publicationVenue": {"id": "54649c1d-6bcc-4232-9cd1-aa446867b8d0",
        "name": "USENIX Security Symposium", "type": "conference", "alternate_names":
        ["USENIX Secur Symp"], "url": "http://www.usenix.org/events/bytopic/security.html"},
        "url": "https://www.semanticscholar.org/paper/6c5c5be93b58e417220e0841ed5da62d1e8c7b5b",
        "title": "Protecting Cloud Virtual Machines from Hypervisor and Host Operating
        System Exploits", "abstract": "Hypervisors are widely deployed by cloud computing
        providers to support virtual machines, but their growing complexity poses
        a security risk as large codebases contain many vulnerabilities. We have created
        HypSec, a new hypervisor design for retrofitting an existing commodity hypervisor
        using microkernel principles to reduce its trusted computing base while protecting
        the confidentiality and integrity of virtual machines. HypSec partitions the
        hypervisor into an untrusted host that performs most complex hypervisor functionality
        without access to virtual machine data, and a trusted core that provides access
        control to virtual machine data and performs basic CPU and memory virtualization.
        Hardware virtualization support is used to isolate and protect the trusted
        core and execute it at a higher privilege level so it can mediate virtual
        machine exceptions and protect VM data in CPU and memory. HypSec takes an
        end-to-end approach to securing I/O to simplify its design, with applications
        increasingly using secure network connections in the cloud. We have used HypSec
        to retrofit KVM, showing how our approach can support a widely-used full-featured
        hypervisor integrated with a commodity operating system. The implementation
        has a trusted computing base of only a few thousand lines of code, many orders
        of magnitude less than KVM. We show that HypSec protects the confidentiality
        and integrity of virtual machines running unmodified guest operating systems
        while only incurring modest performance overhead for real application workloads.",
        "venue": "USENIX Security Symposium", "year": 2019, "referenceCount": 77,
        "citationCount": 20, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": null, "journal": {"pages": "1357-1374"}, "authors": [{"authorId":
        "2175344", "name": "Shih-wei Li"}, {"authorId": "34656105", "name": "John
        S. Koh"}, {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId": "7111f34fa4210b117a379eb49ed9d539a6837923",
        "externalIds": {"DBLP": "conf/eurosys/KohBN19", "MAG": "2931125715", "DOI":
        "10.1145/3302424.3303980", "CorpusId": 85519262}, "corpusId": 85519262, "publicationVenue":
        {"id": "e4f51561-5050-4b9c-87c2-c49957677fbf", "name": "European Conference
        on Computer Systems", "type": "conference", "alternate_names": ["Eur Conf
        Comput Syst", "EuroSys"], "url": "http://www.eurosys.org/"}, "url": "https://www.semanticscholar.org/paper/7111f34fa4210b117a379eb49ed9d539a6837923",
        "title": "Why Joanie Can Encrypt: Easy Email Encryption with Easy Key Management",
        "abstract": "Email privacy is of crucial importance. Existing email encryption
        approaches are comprehensive but seldom used due to their complexity and inconvenience.
        We take a new approach to simplify email encryption and improve its usability
        by implementing receiver-controlled encryption: newly received messages are
        transparently downloaded and encrypted to a locally-generated key; the original
        message is then replaced. To avoid the problem of moving a single private
        key between devices, we implement per-device key pairs: only public keys need
        be synchronized via a simple verification step. Compromising an email account
        or server only provides access to encrypted emails. We implemented this scheme
        on several platforms, showing it works with PGP and S/MIME, is compatible
        with widely used mail clients and email services including Gmail, has acceptable
        overhead, and that users consider it intuitive and easy to use.", "venue":
        "European Conference on Computer Systems", "year": 2019, "referenceCount":
        42, "citationCount": 5, "influentialCitationCount": 0, "isOpenAccess": true,
        "openAccessPdf": {"url": "https://dl.acm.org/doi/pdf/10.1145/3302424.3303980",
        "status": null}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}, {"category": "Mathematics", "source":
        "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Book", "Conference"],
        "publicationDate": "2019-03-25", "journal": {"name": "Proceedings of the Fourteenth
        EuroSys Conference 2019"}, "authors": [{"authorId": "34656105", "name": "John
        S. Koh"}, {"authorId": "1751667", "name": "S. Bellovin"}, {"authorId": "1700208",
        "name": "Jason Nieh"}]}, {"paperId": "736801135400eceded045b64b356fa038fa4a89c",
        "externalIds": {"MAG": "2932156707", "DBLP": "conf/eurosys/HofN19", "DOI":
        "10.1145/3302424.3303969", "CorpusId": 85519168}, "corpusId": 85519168, "publicationVenue":
        {"id": "e4f51561-5050-4b9c-87c2-c49957677fbf", "name": "European Conference
        on Computer Systems", "type": "conference", "alternate_names": ["Eur Conf
        Comput Syst", "EuroSys"], "url": "http://www.eurosys.org/"}, "url": "https://www.semanticscholar.org/paper/736801135400eceded045b64b356fa038fa4a89c",
        "title": "AnDrone: Virtual Drone Computing in the Cloud", "abstract": "With
        the continued proliferation of drones, unmanned aerial vehicles, additional
        uses for them are growing and the demand for their services is on the rise.
        We present AnDrone, a drone-as-a-service solution that makes drones accessible
        in the cloud. AnDrone pairs a cloud service with the first drone virtualization
        architecture. This enables a physical drone to run multiple virtual drones
        simultaneously in an isolated and secure manner at little additional cost,
        as computational costs are cheap compared to the operational and energy costs
        of putting a drone in the air. AnDrone virtualizes drones using a novel Linux
        container architecture. Android Things virtual drone containers provide a
        familiar user and development environment that can run existing Android apps.
        A real-time Linux flight controller container supports existing drone flight
        software and provides virtual drones with geofenced flight control. A device
        container transparently multiplexes access from virtual drones to a full range
        of drone hardware devices, including cameras and other sensors. Upon flight
        completion, virtual drones and their data can be uploaded to the cloud for
        offline access. We have implemented an AnDrone prototype based on Raspberry
        Pi 3 drone hardware. We demonstrate that it incurs minimal runtime performance
        and energy overhead, supports real-time virtual drone flight control, and
        runs untrusted third-party software in virtual drones in a secure manner while
        ensuring that the service provider maintains control of the drone hardware.",
        "venue": "European Conference on Computer Systems", "year": 2019, "referenceCount":
        57, "citationCount": 16, "influentialCitationCount": 1, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["Book", "JournalArticle",
        "Conference"], "publicationDate": "2019-03-25", "journal": {"name": "Proceedings
        of the Fourteenth EuroSys Conference 2019"}, "authors": [{"authorId": "144288636",
        "name": "Alexander Van''t Hof"}, {"authorId": "1700208", "name": "Jason Nieh"}]},
        {"paperId": "794f11bac9a77b553ed6ed1aac68857bafbcb7d4", "externalIds": {"CorpusId":
        197620606}, "corpusId": 197620606, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/794f11bac9a77b553ed6ed1aac68857bafbcb7d4",
        "title": "HeterogeneousMulti-Mobile Computing", "abstract": "As smartphones
        and tablets proliferate, there is a growing demand for multi-mobile computing,
        the ability to combine multiple mobile systems into more capable ones. We
        present M2, a system for multimobile computing that enables existing unmodified
        mobile apps to share and combine multiple devices, including cameras, displays,
        speakers, microphones, sensors, GPS, and input. M2 introduces a new data-centric
        approach that leverages higher-level device abstractions and hardware acceleration
        to efficiently share device data, not API calls. To support heterogeneous
        devices, M2 introduces device transformation, a new technique to mix and match
        different types of devices. Example transformations include combining multiple
        displays into a single larger display for better viewing, or substituting
        accelerometer for touchscreen input to provide a Nintendo Wii-like experience
        with existing mobile gaming apps. We have implemented M2 and show that it
        (1) operates across heterogeneous systems, including multiple versions of
        Android and iOS, (2) can enable unmodified Android apps to use multiple mobile
        devices in new and powerful ways, including supporting users with disabilities
        and better audio conferencing, and (3) can run apps across mobile systems
        with modest overhead and qualitative performance indistinguishable from using
        local device hardware.", "venue": "", "year": 2019, "referenceCount": 46,
        "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null,
        "publicationDate": null, "journal": null, "authors": [{"authorId": "2715408",
        "name": "Naser AlDuaij"}, {"authorId": "1700208", "name": "Jason Nieh"}]},
        {"paperId": "d67144e90c7efa4a656cadd0e38cf3328e7afc2b", "externalIds": {"DOI":
        "10.1145/3302424.3303969", "CorpusId": 240920309}, "corpusId": 240920309,
        "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/d67144e90c7efa4a656cadd0e38cf3328e7afc2b",
        "title": "AnDrone", "abstract": null, "venue": "Proceedings of the Fourteenth
        EuroSys Conference 2019", "year": 2019, "referenceCount": 19, "citationCount":
        1, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": null, "s2FieldsOfStudy": [], "publicationTypes": ["Conference"],
        "publicationDate": "2019-03-25", "journal": {"name": "Proceedings of the Fourteenth
        EuroSys Conference 2019"}, "authors": [{"authorId": "1423338975", "name":
        "A. van''t Hof"}, {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId":
        "24fe584525c3307d7ffdd726b9849b8bb2aba0cd", "externalIds": {"MAG": "2894169300",
        "DBLP": "journals/sigops/DallLLN18", "DOI": "10.1145/3273982.3273987", "CorpusId":
        52096878}, "corpusId": 52096878, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/24fe584525c3307d7ffdd726b9849b8bb2aba0cd",
        "title": "ARM Virtualization", "abstract": "ARM servers are becoming increasingly
        common, making server technologies such as virtualization for ARM of growing
        importance. We present the first study of ARM virtualization performance on
        server hardware, including multi-core measurements of two popular ARM and
        x86 hypervisors, KVM and Xen. We show how ARM hardware support for virtualization
        can enable much faster transitions between VMs and the hypervisor, a key hypervisor
        operation. However, current hypervisor designs, including both Type 1 hypervisors
        such as Xen and Type 2 hypervisors such as KVM, are not able to leverage this
        performance benefit for real application workloads on ARMv8.0. We discuss
        the reasons why and show that other factors related to hypervisor software
        design and implementation have a larger role in overall performance. Based
        on our measurements, we discuss software changes and new hardware features,
        the Virtualization Host Extensions (VHE), added in ARMv8.1 that bridge the
        gap and bring ARM''s faster VM-to-hypervisor transition mechanism to modern
        Type 2 hypervisors running real applications.", "venue": "OPSR", "year": 2018,
        "referenceCount": 24, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess":
        false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2018-08-28", "journal": {"volume": "52", "pages": "45-56",
        "name": "ACM SIGOPS Oper. Syst. Rev."}, "authors": [{"authorId": "38717488",
        "name": "Chris Dall"}, {"authorId": "2175344", "name": "Shih-wei Li"}, {"authorId":
        "34975877", "name": "J. Lim"}, {"authorId": "1700208", "name": "Jason Nieh"}]},
        {"paperId": "b1ad5871feec5f040d9ad098f79d6bed3cebc42c", "externalIds": {"CorpusId":
        53648215}, "corpusId": 53648215, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/b1ad5871feec5f040d9ad098f79d6bed3cebc42c",
        "title": "Easy Email Encryption with Easy Key Management CUCS-004-18", "abstract":
        "Email privacy is of crucial importance. Existing email encryption approaches
        are comprehensive but seldom used due to their complexity and inconvenience.
        We take a new approach to simplify email encryption and improve its usability
        by implementing receiver-controlled encryption: newly received messages are
        transparently downloaded and encrypted to a locally-generated key; the original
        message is then replaced. To avoid the problem of users having to move a single
        private key between devices, we implement per-device key pairs: only public
        keys need be synchronized to a single device. Compromising an email account
        or server only provides access to encrypted emails. We have implemented this
        scheme for both Android and as a standalone daemon; we show that it works
        with both PGP and S/MIME, is compatible with widely used mail clients and
        email services including Gmail and Yahoo! Mail, has acceptable overhead, and
        that users consider it intuitive and easy to use. CCS Concepts \u2022Security
        and privacy\u2192 Key management; Public key encryption; Usability in security
        and privacy; Web application security;", "venue": "", "year": 2018, "referenceCount":
        26, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "s2-fos-model"}, {"category": "Mathematics",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
        "journal": null, "authors": [{"authorId": "34656105", "name": "John S. Koh"},
        {"authorId": "1751667", "name": "S. Bellovin"}, {"authorId": "1700208", "name":
        "Jason Nieh"}]}, {"paperId": "03a97821f3f77490f1c775501762985f10cd7be8", "externalIds":
        {"MAG": "2741137506", "DBLP": "conf/usenix/DallLN17", "CorpusId": 30714302},
        "corpusId": 30714302, "publicationVenue": {"id": "9448f839-459b-45f3-8573-5eff3f032334",
        "name": "USENIX Annual Technical Conference", "type": "conference", "alternate_names":
        ["USENIX Annu Tech Conf", "USENIX", "USENIX ATC"], "url": "https://www.usenix.org/conferences/byname/131"},
        "url": "https://www.semanticscholar.org/paper/03a97821f3f77490f1c775501762985f10cd7be8",
        "title": "Optimizing the Design and Implementation of the Linux ARM Hypervisor",
        "abstract": "Modern hypervisor designs for both ARM and \u00d786 virtualization
        rely on running an operating system kernel, the hypervisor OS kernel, to support
        hypervisor functionality. While \u00d786 hypervisors effectively leverage
        architectural support to run the kernel, existing ARM hypervisors map poorly
        to the virtualization features of the ARM architecture, resulting in worse
        performance. We identify the key reason for this problem is the need to multiplex
        kernel mode state between the hypervisor and virtual machines, which each
        run their own kernel. To address this problem, we take a fundamentally different
        approach to hypervisor design that runs the hypervisor together with its OS
        kernel in a separate CPU mode from kernel mode. Using this approach, we redesign
        KVM/ARM to leverage a separate ARM CPU mode for running both the hypervisor
        and its OS kernel. We show what changes are required in Linux to implement
        this on current ARM hardware as well as how newer ARM architectural support
        can be used to support this approach without any changes to Linux other than
        to KVM/ARM itself. We show that our redesign and optimizations can result
        in an order ofmagnitude performance improvement for KVM/ARM, and can provide
        faster performance than x86 on key hypervisor operations. As a result, many
        aspects of our design have been successfully merged into mainline Linux.",
        "venue": "USENIX Annual Technical Conference", "year": 2017, "referenceCount":
        12, "citationCount": 18, "influentialCitationCount": 1, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
        "Conference"], "publicationDate": "2017-07-12", "journal": {"pages": "221-233"},
        "authors": [{"authorId": "38717488", "name": "Chris Dall"}, {"authorId": "2175344",
        "name": "Shih-wei Li"}, {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId":
        "3416a5227b1e1956acfacba812081c2686367471", "externalIds": {"MAG": "2771265143",
        "DBLP": "conf/middleware/AndrusAN17", "DOI": "10.1145/3135974.3135981", "CorpusId":
        21784151}, "corpusId": 21784151, "publicationVenue": {"id": "911e7332-8ea8-4e9d-bc20-5572a2523f92",
        "name": "International Middleware Conference", "type": "conference", "alternate_names":
        ["Middleware", "ACM/IFIP/USENIX int conf Middlew", "ACM/IFIP/USENIX international
        conference on Middleware", "Int Middlew Conf"], "url": "https://dl.acm.org/conference/middleware/proceedings"},
        "url": "https://www.semanticscholar.org/paper/3416a5227b1e1956acfacba812081c2686367471",
        "title": "Binary compatible graphics support in Android for running iOS apps",
        "abstract": "Mobile apps make extensive use of GPUs on smartphones and tablets
        to access Web content. To support pervasive Web content, we introduce three
        key OS techniques for binary graphics compatibility necessary to build a real-world
        system to run iOS and Android apps together on the same smartphone or tablet.
        First diplomat usage patterns manage resources to bridge proprietary iOS and
        Android graphics implementations. Second, thread impersonation allows a single
        thread-specific context to be shared amongst multiple threads using multiple
        iOS and Android personas. Third, dynamic library replication allows multiple,
        independent instances of the same library to be loaded in a single process
        to support iOS apps on Android while using multiple graphics API versions
        at the same time. We use these techniques to build a system prototype, and
        demonstrate that it runs widely-used iOS apps, including apps such as Safari
        that use the popular GPU-accelerated WebKit framework, using a Google Nexus
        tablet running Android.", "venue": "International Middleware Conference",
        "year": 2017, "referenceCount": 37, "citationCount": 4, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle", "Book"], "publicationDate": "2017-12-11",
        "journal": {"name": "Proceedings of the 18th ACM/IFIP/USENIX Middleware Conference"},
        "authors": [{"authorId": "145457444", "name": "Jeremy Andrus"}, {"authorId":
        "2715408", "name": "Naser AlDuaij"}, {"authorId": "1700208", "name": "Jason
        Nieh"}]}, {"paperId": "79d0d56f06beb438366a503078cf0aa4b8c94396", "externalIds":
        {"MAG": "2590596656", "DBLP": "series/synthesis/2017Bugnion", "DOI": "10.2200/S00754ED1V01Y201701CAC038",
        "CorpusId": 207319509}, "corpusId": 207319509, "publicationVenue": {"id":
        "3c9d8c2a-178a-4468-a24c-796c7c5bfd03", "name": "Synthesis Lectures on Computer
        Architecture", "type": "journal", "alternate_names": ["Synth Lect Comput Archit"],
        "issn": "1935-3235", "url": "https://www.morganclaypool.com/toc/cac/1/1"},
        "url": "https://www.semanticscholar.org/paper/79d0d56f06beb438366a503078cf0aa4b8c94396",
        "title": "Hardware and Software Support for Virtualization", "abstract": "This
        book focuses on the core question of the necessary architectural support provided
        by hardware to efficiently run virtual machines, and of the corresponding
        design of the hypervisors that run them. Virtualization is still possible
        when the instruction set architecture lacks such support, but the hypervisor
        remains more complex and must rely on additional techniques. Despite the focus
        on architectural support in current architectures, some historical perspective
        is necessary to appropriately frame the problem. The first half of the book
        provides the historical perspective of the theoretical framework developed
        four decades ago by Popek and Goldberg. It also describes earlier systems
        that enabled virtualization despite the lack of architectural support in hardware.
        As is often the case, theory defines a necessary-but not sufficient-set of
        features, and modern architectures are the result of the combination of the
        theoretical framework with insights derived from practical systems. The second
        half of the book describes state-of-the-art support for virtualization in
        both x86-64 and ARM processors. This book includes an in-depth description
        of the CPU, memory, and I/O virtualization of these two processor architectures,
        as well as case studies on the Linux/KVM, VMware, and Xen hypervisors. It
        concludes with a performance comparison of virtualization on current-generation
        x86- and ARM-based systems across multiple hypervisors.", "venue": "Synthesis
        Lectures on Computer Architecture", "year": 2017, "referenceCount": 59, "citationCount":
        50, "influentialCitationCount": 3, "isOpenAccess": true, "openAccessPdf":
        {"url": "https://link.springer.com/content/pdf/bfm:978-3-031-01753-7/1?pdf=chapter%20toc",
        "status": null}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
        "2017-02-21", "journal": {"volume": "", "name": ""}, "authors": [{"authorId":
        "1678618", "name": "Edouard Bugnion"}, {"authorId": "1700208", "name": "Jason
        Nieh"}, {"authorId": "3188958", "name": "Dan Tsafrir"}]}, {"paperId": "8b5916fcf0e655815007588caf2d007e378bc1d0",
        "externalIds": {"MAG": "2761289806", "DBLP": "conf/sosp/LimDLNZ17", "DOI":
        "10.1145/3132747.3132754", "CorpusId": 11400398}, "corpusId": 11400398, "publicationVenue":
        {"id": "6c6fcaa9-fd25-488b-8050-995227ac671c", "name": "Symposium on Operating
        Systems Principles", "type": "conference", "alternate_names": ["Symp Oper
        Syst Princ", "SOSP"], "url": "http://sosp.org/"}, "url": "https://www.semanticscholar.org/paper/8b5916fcf0e655815007588caf2d007e378bc1d0",
        "title": "NEVE: Nested Virtualization Extensions for ARM", "abstract": "Nested
        virtualization, the ability to run a virtual machine inside another virtual
        machine, is increasingly important because of the need to deploy virtual machines
        running software stacks on top of virtualized cloud infrastructure. As ARM
        servers make inroads in cloud infrastructure deployments, supporting nested
        virtualization on ARM is a key requirement, which has been met recently with
        the introduction of nested virtualization support to the ARM architecture.
        We build the first hypervisor to use ARM nested virtualization support and
        show that despite similarities between ARM and x86 nested virtualization support,
        performance on ARM is much worse than on x86. This is due to excessive traps
        to the hypervisor caused by differences in non-nested virtualization support.
        To address this problem, we introduce a novel paravirtualization technique
        to rapidly prototype architectural changes for virtualization and evaluate
        their performance impact using existing hardware. Using this technique, we
        propose Nested Virtualization Extensions for ARM (NEVE), a set of simple architectural
        changes to ARM that can be used by software to coalesce and defer traps by
        logging the results of hypervisor instructions until the results are actually
        needed by the hypervisor or virtual machines. We show that NEVE allows hypervisors
        running real application workloads to provide an order of magnitude better
        performance than current ARM nested virtualization support and up to three
        times less overhead than x86 nested virtualization. NEVE will be included
        in ARMv8.4, the next version of the ARM architecture.", "venue": "Symposium
        on Operating Systems Principles", "year": 2017, "referenceCount": 37, "citationCount":
        23, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["Book", "JournalArticle",
        "Conference"], "publicationDate": "2017-10-14", "journal": {"name": "Proceedings
        of the 26th Symposium on Operating Systems Principles"}, "authors": [{"authorId":
        "34975877", "name": "J. Lim"}, {"authorId": "38717488", "name": "Chris Dall"},
        {"authorId": "2175344", "name": "Shih-wei Li"}, {"authorId": "1700208", "name":
        "Jason Nieh"}, {"authorId": "26924262", "name": "Marc Zyngier"}]}, {"paperId":
        "33f757edceab3d51979d145b56349f39e99fc2dc", "externalIds": {"MAG": "2340733866",
        "DBLP": "conf/eurosys/AtlidakisAGMN16", "DOI": "10.1145/2901318.2901350",
        "CorpusId": 696058}, "corpusId": 696058, "publicationVenue": {"id": "e4f51561-5050-4b9c-87c2-c49957677fbf",
        "name": "European Conference on Computer Systems", "type": "conference", "alternate_names":
        ["Eur Conf Comput Syst", "EuroSys"], "url": "http://www.eurosys.org/"}, "url":
        "https://www.semanticscholar.org/paper/33f757edceab3d51979d145b56349f39e99fc2dc",
        "title": "POSIX abstractions in modern operating systems: the old, the new,
        and the missing", "abstract": "The POSIX standard, developed 25 years ago,
        comprises a set of operating system (OS) abstractions that aid application
        portability across UNIX-based OSes. While OSes and applications have evolved
        tremendously over the last 25 years, POSIX, and the basic set of abstractions
        it provides, has remained largely unchanged. Little has been done to measure
        how and to what extent traditional POSIX abstractions are being used in modern
        OSes, and whether new abstractions are taking form, dethroning traditional
        ones. We explore these questions through a study of POSIX usage in modern
        desktop and mobile OSes: Android, OS X, and Ubuntu. Our results show that
        new abstractions are taking form, replacing several prominent traditional
        abstractions in POSIX. While the changes are driven by common needs and are
        conceptually similar across the three OSes, they are not converging on any
        new standard, increasing fragmentation.", "venue": "European Conference on
        Computer Systems", "year": 2016, "referenceCount": 77, "citationCount": 40,
        "influentialCitationCount": 2, "isOpenAccess": true, "openAccessPdf": {"url":
        "http://dl.acm.org/ft_gateway.cfm?id=2901350&type=pdf", "status": null}, "fieldsOfStudy":
        ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer Science",
        "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle", "Book", "Conference"], "publicationDate":
        "2016-04-18", "journal": {"name": "Proceedings of the Eleventh European Conference
        on Computer Systems"}, "authors": [{"authorId": "2501382", "name": "Vaggelis
        Atlidakis"}, {"authorId": "145457444", "name": "Jeremy Andrus"}, {"authorId":
        "1972091", "name": "Roxana Geambasu"}, {"authorId": "7498035", "name": "Dimitris
        Mitropoulos"}, {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId":
        "8984bf438d496a6861098bae613aa838a83aff0a", "externalIds": {"DBLP": "journals/usenix-login/AtlidakisAGMN16",
        "MAG": "2907306806", "CorpusId": 30882591}, "corpusId": 30882591, "publicationVenue":
        {"id": "98c61acc-a8fc-4fde-a125-33bbfd87206e", "name": "Login: The Usenix
        Magazine", "type": "journal", "alternate_names": ["login - The Usenix Magazine",
        "login  Usenix Mag", "Login Usenix Mag"], "issn": "1044-6397", "alternate_issns":
        ["2169-9364"], "url": "https://www.usenix.org/publications/login/", "alternate_urls":
        ["https://www.usenix.org/publications/login"]}, "url": "https://www.semanticscholar.org/paper/8984bf438d496a6861098bae613aa838a83aff0a",
        "title": "POSIX Has Become Outdated", "abstract": null, "venue": "Login: The
        Usenix Magazine", "year": 2016, "referenceCount": 5, "citationCount": 2, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Engineering", "source": "s2-fos-model"}], "publicationTypes":
        ["JournalArticle"], "publicationDate": null, "journal": {"volume": "41", "name":
        "login Usenix Mag."}, "authors": [{"authorId": "2501382", "name": "Vaggelis
        Atlidakis"}, {"authorId": "145457444", "name": "Jeremy Andrus"}, {"authorId":
        "1972091", "name": "Roxana Geambasu"}, {"authorId": "7498035", "name": "Dimitris
        Mitropoulos"}, {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId":
        "ad3058c4e44a2770f4f3ed38693f0787a2ccf2f3", "externalIds": {"MAG": "2512874761",
        "DBLP": "conf/isca/DallLLNK16", "DOI": "10.1145/3007787.3001169", "CorpusId":
        1018195}, "corpusId": 1018195, "publicationVenue": {"id": "deedf64a-dd5c-4b33-b345-ff83bfb93d71",
        "name": "International Symposium on Computer Architecture", "type": "conference",
        "alternate_names": ["Int Symp Comput Archit", "ISCA"], "url": "http://www.cs.wisc.edu/~arch/www/"},
        "url": "https://www.semanticscholar.org/paper/ad3058c4e44a2770f4f3ed38693f0787a2ccf2f3",
        "title": "ARM Virtualization: Performance and Architectural Implications",
        "abstract": "ARM servers are becoming increasingly common, making server technologies
        such as virtualization for ARM of growing importance. We present the first
        study of ARM virtualization performance on server hardware, including multi-core
        measurements of two popular ARM and x86 hypervisors, KVM and Xen. We show
        how ARM hardware support for virtualization can enable much faster transitions
        between VMs and the hypervisor, a key hypervisor operation. However, current
        hypervisor designs, including both Type 1 hypervisors such as Xen and Type
        2 hypervisors such as KVM, are not able to leverage this performance benefit
        for real application workloads. We discuss the reasons why and show that other
        factors related to hypervisor software design and implementation have a larger
        role in overall performance. Based on our measurements, we discuss changes
        to ARM''s hardware virtualization support that can potentially bridge the
        gap to bring its faster VM-to-hypervisor transition mechanism to modern Type
        2 hypervisors running real applications. These changes have been incorporated
        into the latest ARM architecture.", "venue": "International Symposium on Computer
        Architecture", "year": 2016, "referenceCount": 38, "citationCount": 49, "influentialCitationCount":
        4, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2016-06-18", "journal":
        {"pages": "304-316", "name": "2016 ACM/IEEE 43rd Annual International Symposium
        on Computer Architecture (ISCA)"}, "authors": [{"authorId": "38717488", "name":
        "Chris Dall"}, {"authorId": "2175344", "name": "Shih-wei Li"}, {"authorId":
        "34975877", "name": "J. Lim"}, {"authorId": "1700208", "name": "Jason Nieh"},
        {"authorId": "3448550", "name": "G. Koloventzos"}]}, {"paperId": "2dbd0bca3fb1a57f441f1867ac0fa7dfc245ae66",
        "externalIds": {"MAG": "2098055897", "DBLP": "conf/eurosys/HofJNW15", "DOI":
        "10.1145/2741948.2741955", "CorpusId": 10659640}, "corpusId": 10659640, "publicationVenue":
        {"id": "e4f51561-5050-4b9c-87c2-c49957677fbf", "name": "European Conference
        on Computer Systems", "type": "conference", "alternate_names": ["Eur Conf
        Comput Syst", "EuroSys"], "url": "http://www.eurosys.org/"}, "url": "https://www.semanticscholar.org/paper/2dbd0bca3fb1a57f441f1867ac0fa7dfc245ae66",
        "title": "Flux: multi-surface computing in Android", "abstract": "With the
        continued proliferation of mobile devices, apps will increasingly become multi-surface,
        running seamlessly across multiple user devices (e.g., phone, tablet, etc.).
        Yet general systems support for multi-surface app is limited to (1) screencasting,
        which relies on a single master device''s computing power and battery life
        or (2) cloud backing, which is unsuitable in the face of disconnected operation
        or untrusted cloud providers. We present an alternative approach: Flux, an
        Android-based system that enables any app to become multi-surface through
        app migration. Flux overcomes device heterogeneity and residual dependencies
        through two key mechanisms. Selective Record/Adaptive Replay records just
        those device-agnostic app calls that lead to the generation of app-specific
        device-dependent state in system services and replays them on the target.
        Checkpoint/Restore in Android (CRIA) transitions an app into a state in which
        device-specific information can be safely discarded before checkpointing and
        restoring the app. Our implementation of Flux can migrate many popular, unmodified
        Android apps---including those with extensive device interactions like 3D
        accelerated graphics---across heterogeneous devices and is fast enough for
        interactive use.", "venue": "European Conference on Computer Systems", "year":
        2015, "referenceCount": 72, "citationCount": 30, "influentialCitationCount":
        4, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle", "Book", "Conference"], "publicationDate":
        "2015-04-17", "journal": {"name": "Proceedings of the Tenth European Conference
        on Computer Systems"}, "authors": [{"authorId": "144288636", "name": "Alexander
        Van''t Hof"}, {"authorId": "2704919", "name": "H. Jamjoom"}, {"authorId":
        "1700208", "name": "Jason Nieh"}, {"authorId": "30904419", "name": "Dan Williams"}]},
        {"paperId": "3438469a51e02a22ed7f92335ce5a04e7b2fdb66", "externalIds": {"DBLP":
        "conf/eurosys/ViennotLBGN15", "MAG": "1977935038", "DOI": "10.1145/2741948.2741975",
        "CorpusId": 17238455}, "corpusId": 17238455, "publicationVenue": {"id": "e4f51561-5050-4b9c-87c2-c49957677fbf",
        "name": "European Conference on Computer Systems", "type": "conference", "alternate_names":
        ["Eur Conf Comput Syst", "EuroSys"], "url": "http://www.eurosys.org/"}, "url":
        "https://www.semanticscholar.org/paper/3438469a51e02a22ed7f92335ce5a04e7b2fdb66",
        "title": "Synapse: a microservices architecture for heterogeneous-database
        web applications", "abstract": "The growing demand for data-driven features
        in today''s Web applications -- such as targeting, recommendations, or predictions
        -- has transformed those applications into complex conglomerates of services
        operating on each others'' data without a coherent, manageable architecture.
        We present Synapse, an easy-to-use, strong-semantic system for large-scale,
        data-driven Web service integration. Synapse lets independent services cleanly
        share data with each other in an isolated and scalable way. The services run
        on top of their own databases, whose layouts and engines can be completely
        different, and incorporate read-only views of each others'' shared data. Synapse
        synchronizes these views in real-time using a new scalable, consistent replication
        mechanism that leverages the high-level data models in popular MVC-based Web
        applications to replicate data across heterogeneous databases. We have developed
        Synapse on top of the popular Web framework Ruby-on-Rails. It supports data
        replication among a wide variety of SQL and NoSQL databases, including MySQL,
        Oracle, PostgreSQL, MongoDB, Cassandra, Neo4j, and Elasticsearch. We and others
        have built over a dozen microservices using Synapse with great ease, some
        of which are running in production with over 450,000 users.", "venue": "European
        Conference on Computer Systems", "year": 2015, "referenceCount": 51, "citationCount":
        39, "influentialCitationCount": 3, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["Book", "JournalArticle",
        "Conference"], "publicationDate": "2015-04-17", "journal": {"name": "Proceedings
        of the Tenth European Conference on Computer Systems"}, "authors": [{"authorId":
        "1686284", "name": "N. Viennot"}, {"authorId": "2574478", "name": "Mathias
        L\u00e9cuyer"}, {"authorId": "144023217", "name": "Jonathan Bell"}, {"authorId":
        "1972091", "name": "Roxana Geambasu"}, {"authorId": "1700208", "name": "Jason
        Nieh"}]}, {"paperId": "a9fa98baed4be38aa216722cc0f4872a4b10a99d", "externalIds":
        {"MAG": "2581741122", "DOI": "10.7916/D8G44QS8", "CorpusId": 18967805}, "corpusId":
        18967805, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/a9fa98baed4be38aa216722cc0f4872a4b10a99d",
        "title": "A Measurement Study of ARM Virtualization Performance", "abstract":
        "ARM servers are becoming increasingly common, making server technologies
        such as virtualization for ARM of growing importance. We present the first
        in-depth study of ARM virtualization performance on ARM server hardware, including
        measurements of two popular ARM and x86 hypervisors, KVM and Xen. We show
        how the ARM hardware support for virtualization can support much faster transitions
        between VMs and the hypervisor, a key hypervisor operation. However, current
        hypervisor designs, including both Type 1 hypervisors such as Xen and Type
        2 hypervisors such as KVM, are not able to leverage this performance benefit
        in practice for real application workloads. We discuss the reasons why and
        show that other factors related to hypervisor software design and implementation
        have a larger role in overall performance. Based on our measurements, we discuss
        changes to ARM\u2019s hardware virtualization support that can potentially
        bridge the gap to bring its faster VM-tohypervisor transition mechanism to
        modern Type 2 hypervisors running real applications. These changes have been
        incorporated into the latest ARM architecture.", "venue": "", "year": 2015,
        "referenceCount": 59, "citationCount": 3, "influentialCitationCount": 0, "isOpenAccess":
        false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
        null, "journal": {"volume": "", "name": ""}, "authors": [{"authorId": "38717488",
        "name": "Chris Dall"}, {"authorId": "2175344", "name": "Shih-wei Li"}, {"authorId":
        "34975877", "name": "J. Lim"}, {"authorId": "1700208", "name": "Jason Nieh"}]},
        {"paperId": "f43e4affdf8603bcbffc02049294fde979cceef9", "externalIds": {"MAG":
        "2989574817", "CorpusId": 215871718}, "corpusId": 215871718, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/f43e4affdf8603bcbffc02049294fde979cceef9",
        "title": "Synapse: New Data Integration Abstractions for Agile Web Application
        Development", "abstract": null, "venue": "", "year": 2015, "referenceCount":
        0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}], "publicationTypes":
        null, "publicationDate": "2015-04-21", "journal": {"volume": "", "name": ""},
        "authors": [{"authorId": "1686284", "name": "N. Viennot"}, {"authorId": "2574478",
        "name": "Mathias L\u00e9cuyer"}, {"authorId": "144023217", "name": "Jonathan
        Bell"}, {"authorId": "1972091", "name": "Roxana Geambasu"}, {"authorId": "1700208",
        "name": "Jason Nieh"}]}, {"paperId": "24b59c9addd0262228259b1b30e5448632756caa",
        "externalIds": {"DBLP": "conf/asplos/AndrusHADVN14", "MAG": "2162474143",
        "DOI": "10.1145/2541940.2541972", "CorpusId": 14161431}, "corpusId": 14161431,
        "publicationVenue": {"id": "d4610af5-85e0-480b-8773-5c71d92a7b99", "name":
        "International Conference on Architectural Support for Programming Languages
        and Operating Systems", "type": "conference", "alternate_names": ["ASPLOS",
        "Int Conf Archit Support Program Lang Oper Syst", "Archit Support Program
        Lang Oper Syst", "Architectural Support for Programming Languages and Operating
        Systems"], "url": "http://www.acm.org/sigplan/"}, "url": "https://www.semanticscholar.org/paper/24b59c9addd0262228259b1b30e5448632756caa",
        "title": "Cider: native execution of iOS apps on android", "abstract": "We
        present Cider, an operating system compatibility architecture that can run
        applications built for different mobile ecosystems, iOS or Android, together
        on the same smartphone or tablet. Cider enhances the domestic operating system,
        Android, of a device with kernel-managed, per-thread personas to mimic the
        application binary interface of a foreign operating system, iOS, enabling
        it to run unmodified foreign binaries. This is accomplished using a novel
        combination of binary compatibility techniques including two new mechanisms:
        compile-time code adaptation, and diplomatic functions. Compile-time code
        adaptation enables existing unmodified foreign source code to be reused in
        the domestic kernel, reducing implementation effort required to support multiple
        binary interfaces for executing domestic and foreign applications. Diplomatic
        functions leverage per-thread personas, and allow foreign applications to
        use domestic libraries to access proprietary software and hardware interfaces.
        We have built a Cider prototype, and demonstrate that it imposes modest performance
        overhead and runs unmodified iOS and Android applications together on a Google
        Nexus tablet running the latest version of Android.", "venue": "International
        Conference on Architectural Support for Programming Languages and Operating
        Systems", "year": 2014, "referenceCount": 56, "citationCount": 20, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["Book", "JournalArticle", "Conference"], "publicationDate":
        "2014-02-24", "journal": {"name": "Proceedings of the 19th international conference
        on Architectural support for programming languages and operating systems"},
        "authors": [{"authorId": "145457444", "name": "Jeremy Andrus"}, {"authorId":
        "144288636", "name": "Alexander Van''t Hof"}, {"authorId": "2715408", "name":
        "Naser AlDuaij"}, {"authorId": "38717488", "name": "Chris Dall"}, {"authorId":
        "1686284", "name": "N. Viennot"}, {"authorId": "1700208", "name": "Jason Nieh"}]},
        {"paperId": "419bcc6cde93454cf38d641990b816e3ef075b14", "externalIds": {"DBLP":
        "conf/sigcse/DallN14", "MAG": "1965706667", "DOI": "10.1145/2538862.2538894",
        "CorpusId": 7577257}, "corpusId": 7577257, "publicationVenue": {"id": "2c9ecac6-f875-4a9b-acc2-10bd9f6782df",
        "name": "Technical Symposium on Computer Science Education", "type": "conference",
        "alternate_names": ["SIGCSE", "Tech Symp Comput Sci Educ"], "url": "http://www.sigcse.org/"},
        "url": "https://www.semanticscholar.org/paper/419bcc6cde93454cf38d641990b816e3ef075b14",
        "title": "Teaching operating systems using code review", "abstract": "Learning
        about operating systems often involves modifying a large and complex code
        base. Grading student projects can be difficult and time consuming, yet students
        often do not learn from their programming errors and struggle to understand
        core operating system concepts. We present GradeBoard, a code review system
        designed to simplify grading for instructors and enable students to understand
        and learn from their errors. GradeBoard provides an easy-to-use Web interface
        that allows instructors to annotate student code submissions with grading
        comments and scores, and students to discuss the comments and scores with
        instructors. GradeBoard presents student code changes with syntax highlighting
        and lets users collapse or expand code sections to provide a desired level
        of context, making it easier to read and understand student programming project
        submissions. Comments and scores are easily identifiable by visual cues, improving
        interaction between instructors and students. We have deployed and used GradeBoard
        in a large operating systems course involving Linux kernel programming projects.
        GradeBoard provided robust, easy-to-use functionality for reviewing Linux
        kernel code changes, improved the instructional staff grading experience,
        and over 90% of students surveyed indicated that GradeBoard improved their
        understanding of the kernel programming projects better than other alternatives.",
        "venue": "Technical Symposium on Computer Science Education", "year": 2014,
        "referenceCount": 14, "citationCount": 7, "influentialCitationCount": 0, "isOpenAccess":
        true, "openAccessPdf": {"url": "http://dl.acm.org/ft_gateway.cfm?id=2538894&type=pdf",
        "status": null}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
        "Book", "Conference", "Review"], "publicationDate": "2014-03-05", "journal":
        {"name": "Proceedings of the 45th ACM technical symposium on Computer science
        education"}, "authors": [{"authorId": "38717488", "name": "Chris Dall"}, {"authorId":
        "1700208", "name": "Jason Nieh"}]}, {"paperId": "a58b4e6528a9c2698edd45ac1e16e017b82143b8",
        "externalIds": {"DBLP": "conf/sigmetrics/ViennotGN14", "MAG": "2141554582",
        "DOI": "10.1145/2591971.2592003", "CorpusId": 16225105}, "corpusId": 16225105,
        "publicationVenue": {"id": "2194778f-4fb6-471e-b2ff-5ad194635f72", "name":
        "Measurement and Modeling of Computer Systems", "type": "conference", "alternate_names":
        ["Meas Model Comput Syst", "SIGMETRICS"], "url": "http://www.acm.org/sigmetrics/"},
        "url": "https://www.semanticscholar.org/paper/a58b4e6528a9c2698edd45ac1e16e017b82143b8",
        "title": "A measurement study of google play", "abstract": "Although millions
        of users download and use third-party Android applications from the Google
        Play store, little information is known on an aggregated level about these
        applications. We have built PlayDrone, the first scalable Google Play store
        crawler, and used it to index and analyze over 1,100,000 applications in the
        Google Play store on a daily basis, the largest such index of Android applications.
        PlayDrone leverages various hacking techniques to circumvent Google''s roadblocks
        for indexing Google Play store content, and makes proprietary application
        sources available, including source code for over 880,000 free applications.
        We demonstrate the usefulness of PlayDrone in decompiling and analyzing application
        content by exploring four previously unaddressed issues: the characterization
        of Google Play application content at large scale and its evolution over time,
        library usage in applications and its impact on application portability, duplicative
        application content in Google Play, and the ineffectiveness of OAuth and related
        service authentication mechanisms resulting in malicious users being able
        to easily gain unauthorized access to user data and resources on Amazon Web
        Services and Facebook.", "venue": "Measurement and Modeling of Computer Systems",
        "year": 2014, "referenceCount": 33, "citationCount": 341, "influentialCitationCount":
        56, "isOpenAccess": true, "openAccessPdf": {"url": "http://www.nieh.net/pubs/sigmetrics2014_playdrone.pdf",
        "status": null}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2014-06-16", "journal": {"pages": "221-233"}, "authors":
        [{"authorId": "1686284", "name": "N. Viennot"}, {"authorId": "2111388730",
        "name": "Edward Garcia"}, {"authorId": "1700208", "name": "Jason Nieh"}]},
        {"paperId": "ba9115479d13f06bb448b34310c026237b65a051", "externalIds": {"DBLP":
        "conf/asplos/DallN14", "MAG": "2055184282", "DOI": "10.1145/2541940.2541946",
        "CorpusId": 14649806}, "corpusId": 14649806, "publicationVenue": {"id": "d4610af5-85e0-480b-8773-5c71d92a7b99",
        "name": "International Conference on Architectural Support for Programming
        Languages and Operating Systems", "type": "conference", "alternate_names":
        ["ASPLOS", "Int Conf Archit Support Program Lang Oper Syst", "Archit Support
        Program Lang Oper Syst", "Architectural Support for Programming Languages
        and Operating Systems"], "url": "http://www.acm.org/sigplan/"}, "url": "https://www.semanticscholar.org/paper/ba9115479d13f06bb448b34310c026237b65a051",
        "title": "KVM/ARM: the design and implementation of the linux ARM hypervisor",
        "abstract": "As ARM CPUs become increasingly common in mobile devices and
        servers, there is a growing demand for providing the benefits of virtualization
        for ARM-based devices. We present our experiences building the Linux ARM hypervisor,
        KVM/ARM, the first full system ARM virtualization solution that can run unmodified
        guest operating systems on ARM multicore hardware. KVM/ARM introduces split-mode
        virtualization, allowing a hypervisor to split its execution across CPU modes
        and be integrated into the Linux kernel. This allows KVM/ARM to leverage existing
        Linux hardware support and functionality to simplify hypervisor development
        and maintainability while utilizing recent ARM hardware virtualization extensions
        to run virtual machines with comparable performance to native execution. KVM/ARM
        has been successfully merged into the mainline Linux kernel, ensuring that
        it will gain wide adoption as the virtualization platform of choice for ARM.
        We provide the first measurements on real hardware of a complete hypervisor
        using ARM hardware virtualization support. Our results demonstrate that KVM/ARM
        has modest virtualization performance and power costs, and can achieve lower
        performance and power costs compared to x86-based Linux virtualization on
        multicore hardware.", "venue": "International Conference on Architectural
        Support for Programming Languages and Operating Systems", "year": 2014, "referenceCount":
        24, "citationCount": 205, "influentialCitationCount": 31, "isOpenAccess":
        true, "openAccessPdf": {"url": "https://dl.acm.org/doi/pdf/10.1145/2654822.2541946?download=true",
        "status": null}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
        "Book", "Conference"], "publicationDate": "2014-02-24", "journal": {"name":
        "Proceedings of the 19th international conference on Architectural support
        for programming languages and operating systems"}, "authors": [{"authorId":
        "38717488", "name": "Chris Dall"}, {"authorId": "1700208", "name": "Jason
        Nieh"}]}, {"paperId": "33623a9fec52e01e92c6ba1ae4d67b01f0c76fe5", "externalIds":
        {"MAG": "2119760639", "DBLP": "conf/asplos/ViennotNN13", "DOI": "10.1145/2451116.2451130",
        "CorpusId": 7696881}, "corpusId": 7696881, "publicationVenue": {"id": "d4610af5-85e0-480b-8773-5c71d92a7b99",
        "name": "International Conference on Architectural Support for Programming
        Languages and Operating Systems", "type": "conference", "alternate_names":
        ["ASPLOS", "Int Conf Archit Support Program Lang Oper Syst", "Archit Support
        Program Lang Oper Syst", "Architectural Support for Programming Languages
        and Operating Systems"], "url": "http://www.acm.org/sigplan/"}, "url": "https://www.semanticscholar.org/paper/33623a9fec52e01e92c6ba1ae4d67b01f0c76fe5",
        "title": "Transparent mutable replay for multicore debugging and patch validation",
        "abstract": "We present Dora, a mutable record-replay system which allows
        a recorded execution of an application to be replayed with a modified version
        of the application. This feature, not available in previous record-replay
        systems, enables powerful new functionality. In particular, Dora can help
        reproduce, diagnose, and fix software bugs by replaying a version of a recorded
        application that is recompiled with debugging information, reconfigured to
        produce verbose log output, modified to include additional print statements,
        or patched to fix a bug.\n Dora uses lightweight operating system mechanisms
        to record an application execution by capturing nondeterministic events to
        a log without imposing unnecessary timing and ordering constraints. It replays
        the log using a modified version of the application even in the presence of
        added, deleted, or modified operations that do not match events in the log.
        Dora searches for a replay that minimizes differences between the log and
        the replayed execution of the modified program. If there are no modifications,
        Dora provides deterministic replay of the unmodified program.\n We have implemented
        a Linux prototype which provides transparent mutable replay without recompiling
        or relinking applications. We show that Dora is useful for reproducing, diagnosing,
        and fixing software bugs in real-world applications, including Apache and
        MySQL. Our results show that Dora (1) captures bugs and replays them with
        applications modified or reconfigured to produce additional debugging output
        for root cause diagnosis, (2) captures exploits and replays them with patched
        applications to validate that the patches successfully eliminate vulnerabilities,
        (3) records production workloads and replays them with patched applications
        to validate patches with realistic workloads, and (4) maintains low recording
        overhead on commodity multicore hardware, making it suitable for production
        systems.", "venue": "International Conference on Architectural Support for
        Programming Languages and Operating Systems", "year": 2013, "referenceCount":
        29, "citationCount": 42, "influentialCitationCount": 5, "isOpenAccess": true,
        "openAccessPdf": {"url": "https://dl.acm.org/doi/pdf/10.1145/2490301.2451130?download=true",
        "status": null}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2013-03-16", "journal": {"pages": "127-138"}, "authors":
        [{"authorId": "1686284", "name": "N. Viennot"}, {"authorId": "2070674680",
        "name": "Siddharth Nair"}, {"authorId": "1700208", "name": "Jason Nieh"}]},
        {"paperId": "6da7c0d50b8f0cfcdc1e4075c5fc496ba0ccf717", "externalIds": {"MAG":
        "1700025863", "DOI": "10.7916/D8FN1FQS", "CorpusId": 16758590}, "corpusId":
        16758590, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/6da7c0d50b8f0cfcdc1e4075c5fc496ba0ccf717",
        "title": "KVM/ARM: Experiences Building the Linux ARM Hypervisor", "abstract":
        "As ARM CPUs become increasingly common in mobile devices and servers, there
        is a growing demand for providing the benefits of virtualization for ARMbased
        devices. We present our experiences building the Linux ARM hypervisor, KVM/ARM,
        the first full system ARM virtualization solution that can run unmodified
        guest operating systems on ARM multicore hardware. KVM/ARM introduces split-mode
        virtualization, allowing a hypervisor to split its execution across CPU modes
        to take advantage of CPU mode-specific features. This allows KVM/ARM to leverage
        Linux kernel services and functionality to simplify hypervisor development
        and maintainability while utilizing recent ARM hardware virtualization extensions
        to run application workloads in guest operating systems with comparable performance
        to native execution. KVM/ARM has been successfully merged into the mainline
        Linux 3.9 kernel, ensuring that it will gain wide adoption as the virtualization
        platform of choice for ARM. We provide the first measurements on real hardware
        of a complete hypervisor using ARM hardware virtualization support. Our results
        demonstrate that KVM/ARM has modest virtualization performance and power costs,
        and can achieve lower performance and power costs compared to x86-based Linux
        virtualization on multicore hardware.", "venue": "", "year": 2013, "referenceCount":
        27, "citationCount": 22, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
        null, "journal": {"volume": "", "name": ""}, "authors": [{"authorId": "38717488",
        "name": "Chris Dall"}, {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId":
        "a588a9ff9d7c43049dcfb9dd90a42ac3ab8a510d", "externalIds": {"MAG": "3014921216",
        "DOI": "10.1145/3263337", "CorpusId": 227049196}, "corpusId": 227049196, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/a588a9ff9d7c43049dcfb9dd90a42ac3ab8a510d",
        "title": "Session details: Invited talk", "abstract": null, "venue": "Proceedings
        of the 8th ACM SIGPLAN/SIGOPS conference on Virtual Execution Environments",
        "year": 2012, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}], "publicationTypes": ["Conference"], "publicationDate": "2012-03-03",
        "journal": {"name": "Proceedings of the 8th ACM SIGPLAN/SIGOPS conference
        on Virtual Execution Environments"}, "authors": [{"authorId": "1700208", "name":
        "Jason Nieh"}]}, {"paperId": "b7f32327cef986b3572a3b1bc625ec6c1dfd9390", "externalIds":
        {"MAG": "1980265457", "DBLP": "journals/ton/ShermanNS12", "DOI": "10.1109/TNET.2012.2185058",
        "CorpusId": 6861472}, "corpusId": 6861472, "publicationVenue": {"id": "b1aea3ab-edf0-430b-a9c2-cce5469f6b23",
        "name": "IEEE/ACM Transactions on Networking", "type": "journal", "alternate_names":
        ["IEEE ACM Trans Netw", "IEEE ACM Transactions on Networking", "IEEE/ACM Trans
        Netw"], "issn": "1063-6692", "url": "http://portal.acm.org/ton/", "alternate_urls":
        ["https://ieeexplore.ieee.org/xpl/RecentIssue.jsp?punumber=90", "https://ieeexplore.ieee.org/servlet/opac?punumber=90"]},
        "url": "https://www.semanticscholar.org/paper/b7f32327cef986b3572a3b1bc625ec6c1dfd9390",
        "title": "FairTorrent: A Deficit-Based Distributed Algorithm to Ensure Fairness
        in Peer-to-Peer Systems", "abstract": "Peer-to-peer file-sharing applications
        suffer from a fundamental problem of unfairness. Free-riders cause slower
        download times for others by contributing little or no upload bandwidth while
        consuming much download bandwidth. Previous attempts to address this fair
        bandwidth allocation problem suffer from slow peer discovery, inaccurate predictions
        of neighboring peers'' bandwidth allocations, underutilization of bandwidth,
        and complex parameter tuning. We present FairTorrent, a new deficit-based
        distributed algorithm that accurately rewards peers in accordance with their
        contribution. A FairTorrent peer simply uploads the next data block to a peer
        to whom it owes the most data as measured by a deficit counter. FairTorrent
        is resilient to exploitation by free-riders and strategic peers, is simple
        to implement, requires no bandwidth overallocation, no prediction of peers''
        rates, no centralized control, and no parameter tuning. We implemented FairTorrent
        in a BitTorrent client without modifications to the BitTorrent protocol and
        evaluated its performance against other widely used BitTorrent clients. Our
        results show that FairTorrent provides up to two orders of magnitude better
        fairness, up to five times better download times for contributing peers, and
        60%-100% better performance on average in live BitTorrent swarms.", "venue":
        "IEEE/ACM Transactions on Networking", "year": 2012, "referenceCount": 38,
        "citationCount": 17, "influentialCitationCount": 2, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2012-10-01", "journal": {"volume": "20", "pages": "1361-1374",
        "name": "IEEE/ACM Transactions on Networking"}, "authors": [{"authorId": "2074258632",
        "name": "A. Sherman"}, {"authorId": "1700208", "name": "Jason Nieh"}, {"authorId":
        "1690758", "name": "C. Stein"}]}, {"paperId": "bf9c8100d311af457c347d0ec6fcdf507fb64f85",
        "externalIds": {"DBLP": "conf/conext/ReichLBSMNR12", "MAG": "2108680538",
        "DOI": "10.1145/2413176.2413210", "CorpusId": 10814096}, "corpusId": 10814096,
        "publicationVenue": {"id": "5552b3d9-73b0-435f-8515-a135f23fcbba", "name":
        "Conference on Emerging Network Experiment and Technology", "type": "conference",
        "alternate_names": ["Conf Emerg Netw Exp Technol", "CoNEXT"], "url": "http://www.wikicfp.com/cfp/program?id=555"},
        "url": "https://www.semanticscholar.org/paper/bf9c8100d311af457c347d0ec6fcdf507fb64f85",
        "title": "VMTorrent: scalable P2P virtual machine streaming", "abstract":
        "Clouds commonly store Virtual Machine (VM) images on networked storage. This
        poses a serious potential scalability bottleneck as launching a single fresh
        VM instance requires, at minimum, several hundred MB of network reads. As
        this bottleneck occurs most severely during read-intensive launching of new
        VMs, we focus on scalably minimizing time to boot a VM and load its critical
        applications.\n While effective scalable P2P streaming techniques for Video
        on Demand (VOD) scenarios where blocks arrive in-order and at constant rate
        are available, no techniques address scalable large-executable streaming.
        VM execution is non-deterministic, divergent, variable rate, and cannot miss
        blocks. VMTORRENT introduces a novel combination of block prioritization,
        profile-based execution prefetch, on-demand fetch, and decoupling of VM image
        presentation from underlying data-stream. VMTORRENT provides the first complete
        and effective solution to this growing scalability problem that is based on
        making better use of existing capacity, instead of throwing more hardware
        at it.\n Supported by analytic modeling, we present comprehensive experimental
        evaluation of VMTORRENT on real systems at scale, demonstrating the effectiveness
        of VMTORRENT. We find that VMTORRENT supports comparable execution time to
        that achieved using local disk. VMTORRENT maintains this performance while
        scaling to 100 instances, providing up to 11x speedup over current state-of-the-art
        and 30x over traditional network storage.", "venue": "Conference on Emerging
        Network Experiment and Technology", "year": 2012, "referenceCount": 43, "citationCount":
        51, "influentialCitationCount": 3, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2012-12-10", "journal": {"pages": "289-300"}, "authors": [{"authorId": "1803287",
        "name": "Joshua Reich"}, {"authorId": "1684343", "name": "Oren Laadan"}, {"authorId":
        "2041489", "name": "E. Brosh"}, {"authorId": "2074258632", "name": "A. Sherman"},
        {"authorId": "145502289", "name": "V. Misra"}, {"authorId": "1700208", "name":
        "Jason Nieh"}, {"authorId": "1926685", "name": "D. Rubenstein"}]}, {"paperId":
        "d73fde4fae0c32e574b4950a8e0ee6d7324831d5", "externalIds": {"DBLP": "journals/tocs/DallAHLN12",
        "MAG": "2077773210", "DOI": "10.1145/2324876.2324877", "CorpusId": 9131531},
        "corpusId": 9131531, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/d73fde4fae0c32e574b4950a8e0ee6d7324831d5",
        "title": "The Design, Implementation, and Evaluation of Cells: A Virtual Smartphone
        Architecture", "abstract": "Smartphones are increasingly ubiquitous, and many
        users carry multiple phones to accommodate work, personal, and geographic
        mobility needs. We present Cells, a virtualization architecture for enabling
        multiple virtual smartphones to run simultaneously on the same physical cellphone
        in an isolated, secure manner. Cells introduces a usage model of having one
        foreground virtual phone and multiple background virtual phones. This model
        enables a new device namespace mechanism and novel device proxies that integrate
        with lightweight operating system virtualization to multiplex phone hardware
        across multiple virtual phones while providing native hardware device performance.
        Cells virtual phone features include fully accelerated 3D graphics, complete
        power management features, and full telephony functionality with separately
        assignable telephone numbers and caller ID support. We have implemented a
        prototype of Cells that supports multiple Android virtual phones on the same
        phone. Our performance results demonstrate that Cells imposes only modest
        runtime and memory overhead, works seamlessly across multiple hardware devices
        including Google Nexus 1 and Nexus S phones, and transparently runs Android
        applications at native speed without any modifications.", "venue": "TOCS",
        "year": 2012, "referenceCount": 29, "citationCount": 27, "influentialCitationCount":
        5, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2012-08-01", "journal":
        {"volume": "30", "pages": "9:1-9:31", "name": "ACM Trans. Comput. Syst."},
        "authors": [{"authorId": "38717488", "name": "Chris Dall"}, {"authorId": "145457444",
        "name": "Jeremy Andrus"}, {"authorId": "144288636", "name": "Alexander Van''t
        Hof"}, {"authorId": "1684343", "name": "Oren Laadan"}, {"authorId": "1700208",
        "name": "Jason Nieh"}]}, {"paperId": "f9a2301ba2cb93e2abb012ee9ac511cbe82169dd",
        "externalIds": {"MAG": "2160527605", "DBLP": "conf/sigcse/AndrusN12", "DOI":
        "10.1145/2157136.2157312", "CorpusId": 7316770}, "corpusId": 7316770, "publicationVenue":
        {"id": "2c9ecac6-f875-4a9b-acc2-10bd9f6782df", "name": "Technical Symposium
        on Computer Science Education", "type": "conference", "alternate_names": ["SIGCSE",
        "Tech Symp Comput Sci Educ"], "url": "http://www.sigcse.org/"}, "url": "https://www.semanticscholar.org/paper/f9a2301ba2cb93e2abb012ee9ac511cbe82169dd",
        "title": "Teaching operating systems using android", "abstract": "The computing
        landscape is shifting towards mobile devices. To learn about operating systems,
        it is increasingly important for students to gain hands-on kernel programming
        experience in these environments, which are quite different from traditional
        desktops and servers. We present our work at Columbia University to teach
        operating systems using Android, an open, commercially supported software
        platform increasingly used on mobile and embedded devices. We introduce a
        series of five Android kernel programming projects suitable for a one semester
        introductory operating systems course. Each project teaches a core operating
        system concept infused with Android or mobile device specific context, such
        as Android specific process relationships, use of sensors, and design considerations
        for resource constrained mobile devices. We also introduce an Android virtual
        laboratory based on virtual appliances, distributed version control, and live
        demonstrations which gives students hands-on Android experience, with minimal
        computing infrastructure. We have used these Android kernel programming projects
        and the Android virtual lab to teach an introductory operating systems course.
        Although this was our first time teaching the course using Android, over 80%
        of students surveyed enjoyed using Android and the majority of students preferred
        Android to traditional desktop development.", "venue": "Technical Symposium
        on Computer Science Education", "year": 2012, "referenceCount": 16, "citationCount":
        61, "influentialCitationCount": 2, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Review"],
        "publicationDate": "2012-02-29", "journal": {"pages": "613-618"}, "authors":
        [{"authorId": "145457444", "name": "Jeremy Andrus"}, {"authorId": "1700208",
        "name": "Jason Nieh"}]}, {"paperId": "fb98da66fab8a3f98294ef69875f6387704552c2",
        "externalIds": {"MAG": "2091275300", "DBLP": "conf/assets/LaadanSN12", "DOI":
        "10.1145/2384916.2384919", "CorpusId": 12300430}, "corpusId": 12300430, "publicationVenue":
        {"id": "6864fc0f-dd47-4798-a829-ac53dd78862f", "name": "International ACM
        SIGACCESS Conference on Computers and Accessibility", "type": "conference",
        "alternate_names": ["Conference on Computers and Accessibility", "Conf Comput
        Access", "Int ACM SIGACCESS Conf Comput Access", "ASSETS"], "url": "https://dl.acm.org/conference/assets"},
        "url": "https://www.semanticscholar.org/paper/fb98da66fab8a3f98294ef69875f6387704552c2",
        "title": "Capture: a desktop display-centric text recorder", "abstract": "As
        more and more information is designed for human visual consumption through
        computer displays, the need to capture and process display-centric content
        is becoming increasingly important, especially for visually impaired users.
        We present Capture, a novel display-centric text recorder that facilitates
        real-time access to onscreen text and its structure and contextual information,
        including data associated with both foreground and background windows. Capture
        provides an intelligent caching architecture that integrates with the standard
        accessibility framework available on modern operating systems to continuously
        track onscreen text and metadata. This enables fast, semantic information
        recording without any modifications to applications, window systems, or operating
        system kernels. The recorded data is useful for a variety of problem domains,
        including assistive technologies, desktop search, auditing, and predictive
        graphical user interfaces. We have implemented a Capture prototype on Linux
        with the GNOME Accessibility Toolkit. Our results on real desktop applications
        demonstrate that Capture provides low runtime overhead and much more complete
        recording of onscreen text than modern desktop screen readers used for visually
        impaired users.", "venue": "International ACM SIGACCESS Conference on Computers
        and Accessibility", "year": 2012, "referenceCount": 9, "citationCount": 3,
        "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
        "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
        Science", "source": "external"}, {"category": "Computer Science", "source":
        "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2012-10-22", "journal": {"pages": "9-16"}, "authors": [{"authorId": "1684343",
        "name": "Oren Laadan"}, {"authorId": "2053901726", "name": "Andrew Shu"},
        {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId": "388794ec80deec7754c65a4c2fb3f12eb7b3bac6",
        "externalIds": {"DBLP": "conf/sosp/LaadanVTBYN11", "MAG": "2150176148", "DOI":
        "10.1145/2043556.2043589", "CorpusId": 6921681}, "corpusId": 6921681, "publicationVenue":
        {"id": "6c6fcaa9-fd25-488b-8050-995227ac671c", "name": "Symposium on Operating
        Systems Principles", "type": "conference", "alternate_names": ["Symp Oper
        Syst Princ", "SOSP"], "url": "http://sosp.org/"}, "url": "https://www.semanticscholar.org/paper/388794ec80deec7754c65a4c2fb3f12eb7b3bac6",
        "title": "Pervasive detection of process races in deployed systems", "abstract":
        "Process races occur when multiple processes access shared operating system
        resources, such as files, without proper synchronization. We present the first
        study of real process races and the first system designed to detect them.
        Our study of hundreds of applications shows that process races are numerous,
        difficult to debug, and a real threat to reliability. To address this problem,
        we created RacePro, a system for automatically detecting these races. RacePro
        checks deployed systems in-vivo by recording live executions then deterministically
        replaying and checking them later. This approach increases checking coverage
        beyond the configurations or executions covered by software vendors or beta
        testing sites. RacePro records multiple processes, detects races in the recording
        among system calls that may concurrently access shared kernel objects, then
        tries different execution orderings of such system calls to determine which
        races are harmful and result in failures. To simplify race detection, RacePro
        models under-specified system calls based on load and store micro-operations.
        To reduce false positives and negatives, RacePro uses a replay and go-live
        mechanism to distill harmful races from benign ones. We have implemented RacePro
        in Linux, shown that it imposes only modest recording overhead, and used it
        to detect a number of previously unknown bugs in real applications caused
        by process races.", "venue": "Symposium on Operating Systems Principles",
        "year": 2011, "referenceCount": 41, "citationCount": 37, "influentialCitationCount":
        9, "isOpenAccess": true, "openAccessPdf": {"url": "http://www.nieh.net/pubs/sosp2011_racepro.pdf",
        "status": null}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["Book", "JournalArticle",
        "Conference"], "publicationDate": "2011-10-23", "journal": {"name": "Proceedings
        of the Twenty-Third ACM Symposium on Operating Systems Principles"}, "authors":
        [{"authorId": "1684343", "name": "Oren Laadan"}, {"authorId": "1686284", "name":
        "N. Viennot"}, {"authorId": "2104538", "name": "Chia-che Tsai"}, {"authorId":
        "30475763", "name": "C. Blinn"}, {"authorId": "152211006", "name": "Junfeng
        Yang"}, {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId": "3be9c5fa026b3fa887a8652a752d100b84e57451",
        "externalIds": {"MAG": "2097226537", "DBLP": "conf/sigcse/LaadanNV11", "DOI":
        "10.1145/1953163.1953250", "CorpusId": 121863}, "corpusId": 121863, "publicationVenue":
        {"id": "2c9ecac6-f875-4a9b-acc2-10bd9f6782df", "name": "Technical Symposium
        on Computer Science Education", "type": "conference", "alternate_names": ["SIGCSE",
        "Tech Symp Comput Sci Educ"], "url": "http://www.sigcse.org/"}, "url": "https://www.semanticscholar.org/paper/3be9c5fa026b3fa887a8652a752d100b84e57451",
        "title": "Structured linux kernel projects for teaching operating systems
        concepts", "abstract": "Linux has emerged as a widely-used platform for enabling
        hands-on kernel programming experience to learn about operating system concepts.
        However, developing pedagogically-effective programming projects in the context
        of a complex, production operating system can be a challenge. We present a
        structured series of five Linux kernel programming projects suitable for a
        one semester introductory operating systems course to address this issue.
        Each assignment introduces students to a core topic and major component of
        an operating system while implicitly teaching them about various aspects of
        a real-world operating system. Projects are of modest coding complexity, but
        require students to understand and leverage core components of the Linux operating
        system. The learning benefits for students from this approach include learning
        from real-world operating system code examples by expert kernel designers
        and gaining software engineering experience managing production code complexity.
        We have successfully used these structured Linux kernel projects to teach
        over a thousand students in the introductory operating systems course at Columbia
        University.", "venue": "Technical Symposium on Computer Science Education",
        "year": 2011, "referenceCount": 11, "citationCount": 17, "influentialCitationCount":
        1, "isOpenAccess": true, "openAccessPdf": {"url": "http://systems.cs.columbia.edu/files/wpid-sigcse2011-os.pdf",
        "status": null}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["Book", "JournalArticle",
        "Conference"], "publicationDate": "2011-03-09", "journal": {"name": "Proceedings
        of the 42nd ACM technical symposium on Computer science education"}, "authors":
        [{"authorId": "1684343", "name": "Oren Laadan"}, {"authorId": "1700208", "name":
        "Jason Nieh"}, {"authorId": "1686284", "name": "N. Viennot"}]}, {"paperId":
        "4bec0240809c506f45411a43e16c901c131c481d", "externalIds": {"MAG": "2104696904",
        "DOI": "10.1145/1993744.1993757", "CorpusId": 52829394}, "corpusId": 52829394,
        "publicationVenue": {"id": "2194778f-4fb6-471e-b2ff-5ad194635f72", "name":
        "Measurement and Modeling of Computer Systems", "type": "conference", "alternate_names":
        ["Meas Model Comput Syst", "SIGMETRICS"], "url": "http://www.acm.org/sigmetrics/"},
        "url": "https://www.semanticscholar.org/paper/4bec0240809c506f45411a43e16c901c131c481d",
        "title": "Record and transplay: partial checkpointing for replay debugging
        across heterogeneous systems", "abstract": "Software bugs that occur in production
        are often difficult to reproduce in the lab due to subtle differences in the
        application environment and nondeterminism. To address this problem, we present
        Transplay, a system that captures production software bugs into small per-bug
        recordings which are used to reproduce the bugs on a completely different
        operating system without access to any of the original software used in the
        production environment. Transplay introduces partial checkpointing, a new
        mechanism that efficiently captures the partial state necessary to reexecute
        just the last few moments of the application before it encountered a failure.
        The recorded state, which typically consists of a few megabytes of data, is
        used to replay the application without requiring the specific application
        binaries, libraries, support data, or the original execution environment.
        Transplay integrates with existing debuggers to provide standard debugging
        facilities to allow the user to examine the contents of variables and other
        program state at each source line of the application''s replayed execution.
        We have implemented a Transplay prototype that can record unmodified Linux
        applications and replay them on different versions of Linux as well as Windows.
        Experiments with several applications including Apache and MySQL show that
        Transplay can reproduce real bugs and be used in production with modest recording
        overhead.", "venue": "Measurement and Modeling of Computer Systems", "year":
        2011, "referenceCount": 46, "citationCount": 11, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": "2011-06-07", "journal": {"volume":
        "39", "pages": "109-120", "name": ""}, "authors": [{"authorId": "2947394",
        "name": "Dinesh Subhraveti"}, {"authorId": "1700208", "name": "Jason Nieh"}]},
        {"paperId": "60278c1f10bf1138f7f387e76e160cf88e599d2f", "externalIds": {"MAG":
        "2066383384", "DBLP": "conf/sosp/AndrusDHLN11", "DOI": "10.1145/2043556.2043574",
        "CorpusId": 7888391}, "corpusId": 7888391, "publicationVenue": {"id": "6c6fcaa9-fd25-488b-8050-995227ac671c",
        "name": "Symposium on Operating Systems Principles", "type": "conference",
        "alternate_names": ["Symp Oper Syst Princ", "SOSP"], "url": "http://sosp.org/"},
        "url": "https://www.semanticscholar.org/paper/60278c1f10bf1138f7f387e76e160cf88e599d2f",
        "title": "Cells: a virtual mobile smartphone architecture", "abstract": "Smartphones
        are increasingly ubiquitous, and many users carry multiple phones to accommodate
        work, personal, and geographic mobility needs. We present Cells, a virtualization
        architecture for enabling multiple virtual smartphones to run simultaneously
        on the same physical cellphone in an isolated, secure manner. Cells introduces
        a usage model of having one foreground virtual phone and multiple background
        virtual phones. This model enables a new device namespace mechanism and novel
        device proxies that integrate with lightweight operating system virtualization
        to multiplex phone hardware across multiple virtual phones while providing
        native hardware device performance. Cells virtual phone features include fully
        accelerated 3D graphics, complete power, management features, and full telephony
        functionality with separately assignable telephone numbers and caller ID support.
        We have implemented a prototype of Cells that supports multiple Android virtual
        phones on the same phone. Our performance results demonstrate that Cells imposes
        only modest runtime and memory overhead, works seamlessly across multiple
        hardware devices including Google Nexus 1 and Nexus S phones, and transparently
        runs Android applications at native speed without any modifications.", "venue":
        "Symposium on Operating Systems Principles", "year": 2011, "referenceCount":
        34, "citationCount": 236, "influentialCitationCount": 24, "isOpenAccess":
        false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
        "Book", "Conference"], "publicationDate": "2011-10-23", "journal": {"name":
        "Proceedings of the Twenty-Third ACM Symposium on Operating Systems Principles"},
        "authors": [{"authorId": "145457444", "name": "Jeremy Andrus"}, {"authorId":
        "38717488", "name": "Chris Dall"}, {"authorId": "144288636", "name": "Alexander
        Van''t Hof"}, {"authorId": "1684343", "name": "Oren Laadan"}, {"authorId":
        "1700208", "name": "Jason Nieh"}]}, {"paperId": "6b0cf61cc33d1b0c3f9605c5bea2f02ad8868096",
        "externalIds": {"MAG": "2611032117", "CorpusId": 67700774}, "corpusId": 67700774,
        "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/6b0cf61cc33d1b0c3f9605c5bea2f02ad8868096",
        "title": "Proceedings of the 2011 USENIX conference on USENIX annual technical
        conference", "abstract": null, "venue": "", "year": 2011, "referenceCount":
        0, "citationCount": 8, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
        "2011-06-15", "journal": {"volume": "", "name": ""}, "authors": [{"authorId":
        "1700208", "name": "Jason Nieh"}, {"authorId": "2642780", "name": "Carl A.
        Waldspurger"}]}, {"paperId": "78d339b7801f593d5739cf55dde3337bbe2de7ab", "externalIds":
        {"DBLP": "conf/lisa/PotterN11", "MAG": "1885385170", "DOI": "10.7916/D87P957Q",
        "CorpusId": 562673}, "corpusId": 562673, "publicationVenue": {"id": "df661677-e13a-4a52-a5d0-e9d919dd50cf",
        "name": "LiSA", "type": "journal", "alternate_names": ["USENIX Large Install
        Syst Adm Conf", "USENIX Large Installation Systems Administration Conference",
        "LISA"], "issn": "1340-8836", "url": "http://www.wikicfp.com/cfp/program?id=11962"},
        "url": "https://www.semanticscholar.org/paper/78d339b7801f593d5739cf55dde3337bbe2de7ab",
        "title": "Improving Virtual Appliance Management through Virtual Layered File
        Systems", "abstract": "Managing many computers is difficult. Recent virtualization
        trends exacerbate this problem by making it easy to create and deploy multiple
        virtual appliances per physical machine, each of which can be configured with
        different applications and utilities. This results in a huge scaling problem
        for large organizations as management overhead grows linearly with the number
        of appliances. \n \nTo address this problem, we introduce Strata, a system
        that combines unioning file system and package management semantics to enable
        more efficient creation, provisioning and management of virtual appliances.
        Unlike traditional systems that depend on monolithic file systems, Strata
        uses a collection of individual sotware layers that are composed together
        into the Virtual Layered File System (VLFS) to provide the traditional file
        system view. Individual layers are maintained in a central repository and
        shared across all file systems that use them. Layer changes and upgrades only
        need to be done once in the repository and are then automatically propagated
        to all virtual appliances, resulting in management overhead independent of
        the number of appliances. Our Strata Linux prototype requires only a single
        loadable kernel module providing the VLFS support and doesn''t require any
        application or source code level kernel modifications. Using this prototype,
        we demonstrate how Strata enables fast system provisioning, simplifies system
        maintenance and upgrades, speeds system recovery from security exploits, and
        incurs only modest performance overhead.", "venue": "LiSA", "year": 2011,
        "referenceCount": 25, "citationCount": 8, "influentialCitationCount": 0, "isOpenAccess":
        false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2011-12-04", "journal": {"volume": "", "pages": "3-3",
        "name": ""}, "authors": [{"authorId": "2600961", "name": "S. Potter"}, {"authorId":
        "1700208", "name": "Jason Nieh"}]}, {"paperId": "c4b0d2557ecf70a53a7255a66dd7b31599dcd73c",
        "externalIds": {"MAG": "171006538", "DBLP": "conf/hotos/LaadanTVBDN11", "CorpusId":
        10082057}, "corpusId": 10082057, "publicationVenue": {"id": "e29f3ae1-4574-4fd4-9f5b-498495cb7952",
        "name": "USENIX Workshop on Hot Topics in Operating Systems", "type": "conference",
        "alternate_names": ["USENIX Workshop Hot Top Oper Syst", "Workshop on Hot
        Topics in Operating Systems", "HotOS", "Workshop Hot Top Oper Syst"], "url":
        "http://www.wikicfp.com/cfp/program?id=1213"}, "url": "https://www.semanticscholar.org/paper/c4b0d2557ecf70a53a7255a66dd7b31599dcd73c",
        "title": "Finding Concurrency Errors in Sequential Code - OS-level, In-vivo
        Model Checking of Process Races", "abstract": "While thread races have drawn
        huge attention from the research community, little has been done for process
        races, where multiple--possibly sequential--processes access a shared resource,
        such as a file, without proper synchronization. We present a preliminary study
        of real process races and show that they are numerous, dangerous, and difficult
        to detect. To address this problem, we present the design of RACEPRO, an in-vivo
        model checking system for automatically detecting process races in deployed
        systems, along with preliminary results from a RACEPRO prototype. To the best
        of our knowledge, we are the first to study real process races, and RACEPRO
        is the first system to detect them.", "venue": "USENIX Workshop on Hot Topics
        in Operating Systems", "year": 2011, "referenceCount": 13, "citationCount":
        6, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
        "publicationDate": "2011-05-09", "journal": {"volume": "", "pages": "20-20",
        "name": ""}, "authors": [{"authorId": "1684343", "name": "Oren Laadan"}, {"authorId":
        "2104538", "name": "Chia-che Tsai"}, {"authorId": "1686284", "name": "N. Viennot"},
        {"authorId": "30475763", "name": "C. Blinn"}, {"authorId": "3332857", "name":
        "P. Du"}, {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId": "ebdbd137674e8f1d077228c6cb9be23c213295aa",
        "externalIds": {"MAG": "2098028554", "DBLP": "conf/sigmetrics/SubhravetiN11",
        "DOI": "10.1145/2007116.2007129", "CorpusId": 60773}, "corpusId": 60773, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/ebdbd137674e8f1d077228c6cb9be23c213295aa",
        "title": "Record and transplay: partial checkpointing for replay debugging
        across heterogeneous systems", "abstract": "Software bugs that occur in production
        are often difficult to reproduce in the lab due to subtle differences in the
        application environment and nondeterminism. To address this problem, we present
        Transplay, a system that captures production software bugs into small per-bug
        recordings which are used to reproduce the bugs on a completely different
        operating system without access to any of the original software used in the
        production environment. Transplay introduces partial checkpointing, a new
        mechanism that efficiently captures the partial state necessary to reexecute
        just the last few moments of the application before it encountered a failure.
        The recorded state, which typically consists of a few megabytes of data, is
        used to replay the application without requiring the specific application
        binaries, libraries, support data, or the original execution environment.
        Transplay integrates with existing debuggers to provide standard debugging
        facilities to allow the user to examine the contents of variables and other
        program state at each source line of the application''s replayed execution.
        We have implemented a Transplay prototype that can record unmodified Linux
        applications and replay them on different versions of Linux as well as Windows.
        Experiments with several applications including Apache and MySQL show that
        Transplay can reproduce real bugs and be used in production with modest recording
        overhead.", "venue": "PERV", "year": 2011, "referenceCount": 56, "citationCount":
        38, "influentialCitationCount": 3, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        null, "journal": {"pages": "109-120"}, "authors": [{"authorId": "2947394",
        "name": "Dinesh Subhraveti"}, {"authorId": "1700208", "name": "Jason Nieh"}]},
        {"paperId": "2bfe186ebeb03e4e12bde228f03739f8b650563a", "externalIds": {"CorpusId":
        50286375}, "corpusId": 50286375, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/2bfe186ebeb03e4e12bde228f03739f8b650563a",
        "title": "Lisa ''09: 23rd Large Installation System Administration Conference",
        "abstract": "First, Werner introduced an exemplary customer of Amazon\u2019s
        services\u2014\u201canimoto\u201d (http://animoto.com/), a company that developed
        an engine that automatically combines images, music, and video clips that
        you fashion into a polished production, something like a movie trailer. He
        said they are a New York-based enterprise that owns no servers. Instead, their
        product uses a four-step process (upload, analysis, rendering, and distribution)
        that employs Amazon cloud services: Amazon SQS to manage a queue of jobs,
        and Amazon EC2 to create and S3 to store content. When animoto launched a
        Facebook application for the service, they were able to immediately employ
        thousands of servers via Amazon EC2 servers to handle the influx of new users.
        He made the point that such a venture is revolutionary: you couldn\u2019t
        secure startup funding for 5000 or more servers simply to launch a free Facebook
        application. Thus, Werner describes this as a \u201cdemocratization of business\u201d:
        essentially, that the little guy can get the resources to launch something
        great.", "venue": "", "year": 2010, "referenceCount": 2, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
        "journal": null, "authors": [{"authorId": "1751667", "name": "S. Bellovin"},
        {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId": "5d39ee861cfdb90a61cc4d1d0890ff7043bca39f",
        "externalIds": {"DBLP": "conf/usenix/PotterN10", "MAG": "2133541283", "DOI":
        "10.7916/D84Q81S8", "CorpusId": 6348460}, "corpusId": 6348460, "publicationVenue":
        {"id": "9448f839-459b-45f3-8573-5eff3f032334", "name": "USENIX Annual Technical
        Conference", "type": "conference", "alternate_names": ["USENIX Annu Tech Conf",
        "USENIX", "USENIX ATC"], "url": "https://www.usenix.org/conferences/byname/131"},
        "url": "https://www.semanticscholar.org/paper/5d39ee861cfdb90a61cc4d1d0890ff7043bca39f",
        "title": "Apiary: Easy-to-Use Desktop Application Fault Containment on Commodity
        Operating Systems", "abstract": "Desktop computers are often compromised by
        the interaction of untrusted data and buggy software. To address this problem,
        we present Apiary, a system that transparently contains application faults
        while retaining the usage metaphors of a traditional desktop environment.
        Apiary accomplishes this with three key mechanisms. It isolates applications
        in containers that integrate in a controlled manner at the display and file
        system. It introduces ephemeral containers that are quickly instantiated for
        single application execution, to prevent any exploit that occurs from persisting
        and to protect user privacy. It introduces the Virtual Layered File System
        to make instantiating containers fast and space efficient, and to make managing
        many containers no more complex than a single traditional desktop. We have
        implemented Apiary on Linux without any application or operating system kernel
        changes. Our results with real applications, known exploits, and a 24-person
        user study show that Apiary has modest performance overhead, is effective
        in limiting the damage from real vulnerabilities, and is as easy for users
        to use as a traditional desktop.", "venue": "USENIX Annual Technical Conference",
        "year": 2010, "referenceCount": 54, "citationCount": 34, "influentialCitationCount":
        1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2010-06-23",
        "journal": {"volume": "", "pages": "8-8", "name": ""}, "authors": [{"authorId":
        "2600961", "name": "S. Potter"}, {"authorId": "1700208", "name": "Jason Nieh"}]},
        {"paperId": "67e720ce12edb028353688f111a747a681fef654", "externalIds": {"MAG":
        "2159179750", "CorpusId": 31372650}, "corpusId": 31372650, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/67e720ce12edb028353688f111a747a681fef654",
        "title": "Guaranteeing performance through fairness in peer-to-peer file-sharing
        and streaming systems", "abstract": "Over the past decade, Peer-to-Peer (P2P)
        file-sharing and streaming systems have evolved as a cheap and effective technology
        in distributing content to users. Guaranteeing a level of performance in P2P
        systems is, therefore, of utmost importance. However, P2P file-sharing and
        streaming applications suffer from a fundamental problem of unfairness, where
        many users have a tendency to free-ride by contributing little or no upload
        bandwidth while consuming much download bandwidth. By taking away an unfair
        share of resources, free-riders deteriorate the quality of service experienced
        by other users, by causing slower download times in P2P file-sharing networks
        and higher stream updates'' miss rates in P2P streaming networks. Previous
        attempts at addressing fair bandwidth allocation in P2P, such as BitTorrent-like
        systems, suffer from slow peer discovery, inaccurate predictions of neighboring
        peers'' bandwidth allocations, under-utilization of bandwidth, and complex
        parameter tuning. \nWe present FairTorrent, a new deficit-based distributed
        algorithm that accurately rewards peers in accordance with their contribution
        in a file-sharing P2P system. In a nutshell, a FairTorrent peer uploads the
        next data block to a peer to whom it owes the most data. FairTorrent is resilient
        to exploitation by free-riders and strategic peers, is simple to implement,
        requires no bandwidth over-allocation, no prediction of peers'' rates, no
        centralized control, and no parameter tuning. We implemented FairTorrent in
        a BitTorrent client without modifications to the BitTorrent protocol, and
        evaluated its performance against other widely-used BitTorrent clients using
        various scenarios including live BitTorrent swarms. Our results show that
        FairTorrent provides up to two orders of magnitude better fairness, up to
        five times better download performance for contributing peers, and 60\u2013100%
        better performance on average in live BitTorrent swarms. We show analytically
        that for a number of upload capacity distributions, in an n-node FairTorrent
        network, no peer is ever owed more than O(log n) data blocks with high probability.
        \nAchieving fair bandwidth allocation in a P2P streaming scenario is even
        more difficult, as it comes with an additional constraint: each stream update
        must be received before its playback deadline P2P live streaming systems require
        global resource over-provisioning to deliver adequate streaming performance.
        When there is not enough bandwidth to accommodate all users for a particular
        stream, such as due to free-riders or low-contributing peers, all users, including
        high-contributing peers, observe poor performance. We present FairStream,
        a new P2P streaming system that delivers a good quality stream to peers that
        upload data at a rate above the stream rate, even in the presence of free-riders
        or malicious users. FairStream achieves this with three mechanisms. First,
        it provides a new peer reply policy framework that enables file sharing incentive
        mechanisms to be adapted for streaming. Second, it uses this framework to
        incorporate a deficit-based peer reply policy that enables each peer to reply
        first to the neighbor to whom it owes the most data as measured by a deficit
        counter. Third, it introduces a collusion-resistant mechanism to ensure effective
        data distribution of a stream despite a large fraction of free-riders who
        do not forward received data. We prove that FairStream is resilient to free-riders
        and rewards peers with streaming performance correlated with their contributions.
        We have also implemented FairStream as a BitTorrent client and evaluated its
        performance against other popular streaming systems. Our results on PlanetLab
        show that FairStream, similar to other systems, provides good quality streaming
        performance when resources are over-provisioned, but it also provides orders
        of magnitude better streaming performance for peers uploading above the stream
        rate when resources are constrained, in the presence of free-riders and low-contributing
        peers.", "venue": "", "year": 2010, "referenceCount": 61, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
        "journal": {"volume": "", "name": ""}, "authors": [{"authorId": "1700208",
        "name": "Jason Nieh"}, {"authorId": "2074258632", "name": "A. Sherman"}]},
        {"paperId": "72657b0428f9b8f705546eb5a9147203a534d8f6", "externalIds": {"DBLP":
        "conf/sigmetrics/LaadanVN10", "MAG": "2123524055", "DOI": "10.1145/1811039.1811057",
        "CorpusId": 7012198}, "corpusId": 7012198, "publicationVenue": {"id": "2194778f-4fb6-471e-b2ff-5ad194635f72",
        "name": "Measurement and Modeling of Computer Systems", "type": "conference",
        "alternate_names": ["Meas Model Comput Syst", "SIGMETRICS"], "url": "http://www.acm.org/sigmetrics/"},
        "url": "https://www.semanticscholar.org/paper/72657b0428f9b8f705546eb5a9147203a534d8f6",
        "title": "Transparent, lightweight application execution replay on commodity
        multiprocessor operating systems", "abstract": "We present Scribe, the first
        system to provide transparent, low-overhead application record-replay and
        the ability to go live from replayed execution. Scribe introduces new lightweight
        operating system mechanisms, rendezvous and sync points, to efficiently record
        nondeterministic interactions such as related system calls, signals, and shared
        memory accesses. Rendezvous points make a partial ordering of execution based
        on system call dependencies sufficient for replay, avoiding the recording
        overhead of maintaining an exact execution ordering. Sync points convert asynchronous
        interactions that can occur at arbitrary times into synchronous events that
        are much easier to record and replay.\n We have implemented Scribe without
        changing, relinking, or recompiling applications, libraries, or operating
        system kernels, and without any specialized hardware support such as hardware
        performance counters. It works on commodity Linux operating systems, and commodity
        multi-core and multiprocessor hardware. Our results show for the first time
        that an operating system mechanism can correctly and transparently record
        and replay multi-process and multi-threaded applications on commodity multiprocessors.
        Scribe recording overhead is less than 2.5% for server applications including
        Apache and MySQL, and less than 15% for desktop applications including Firefox,
        Acrobat, OpenOffice, parallel kernel compilation, and movie playback.", "venue":
        "Measurement and Modeling of Computer Systems", "year": 2010, "referenceCount":
        32, "citationCount": 140, "influentialCitationCount": 14, "isOpenAccess":
        false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2010-06-12", "journal": {"pages": "155-166"}, "authors":
        [{"authorId": "1684343", "name": "Oren Laadan"}, {"authorId": "1686284", "name":
        "N. Viennot"}, {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId":
        "738018d8ebb9fa875bd3b5575e19a080d71a24fd", "externalIds": {"MAG": "2115959502",
        "DBLP": "conf/sigcomm/ReichLBSMNR10", "DOI": "10.1145/1851182.1851259", "CorpusId":
        9932451}, "corpusId": 9932451, "publicationVenue": {"id": "82901c74-dc2e-4d08-b633-637c7e209284",
        "name": "Conference on Applications, Technologies, Architectures, and Protocols
        for Computer Communication", "type": "conference", "alternate_names": ["Conf
        Appl Technol Archit Protoc Comput Commun", "ACM Special Interest Group on
        Data Communication", "SIGCOMM", "ACM Sp\u00e9c Interest Group Data Commun"],
        "url": "https://en.wikipedia.org/wiki/SIGCOMM"}, "url": "https://www.semanticscholar.org/paper/738018d8ebb9fa875bd3b5575e19a080d71a24fd",
        "title": "VMtorrent: virtual appliances on-demand", "abstract": "Virtual Appliances
        (VAs) are Virtual Machines (VMs) geared towards a specific set of tasks. They
        require little or no configuration, working out-of-the-box. VAs fit neatly
        into the Cloud Computing paradigm - many copies of an identical machine can
        be launched in a data center, or home/business users can grab the appliance
        they need from the cloud to run locally just for so long as required. Companies
        and projects whose sole offerings are VAs ready for either desktop or data
        center use [3, 11] attest to the growing popularity of VAs. VMware''s Appliance
        directory alone currently lists over 1400 VAs available for the VMware family
        of Virtual Machine Monitors (VMMs) [13].\n Current VA distribution generally
        requires download of the complete virtual disk image, only after which the
        VA can be run. Given that compressed VA sizes run anywhere from several hundred
        MB to a few GB, there can be significant delays from the time a user decides
        he/she wants to run a particular VA until the time that VA can be used. These
        problems are only exacerbated when demand for particular VAs spikes and server
        bandwidth resources become the distribution bottleneck.", "venue": "Conference
        on Applications, Technologies, Architectures, and Protocols for Computer Communication",
        "year": 2010, "referenceCount": 11, "citationCount": 15, "influentialCitationCount":
        1, "isOpenAccess": true, "openAccessPdf": {"url": "https://dl.acm.org/doi/pdf/10.1145/1851182.1851259",
        "status": null}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2010-08-16", "journal": {"pages": "453-454"}, "authors":
        [{"authorId": "1803287", "name": "Joshua Reich"}, {"authorId": "1684343",
        "name": "Oren Laadan"}, {"authorId": "2041489", "name": "E. Brosh"}, {"authorId":
        "2074258632", "name": "A. Sherman"}, {"authorId": "145502289", "name": "V.
        Misra"}, {"authorId": "1700208", "name": "Jason Nieh"}, {"authorId": "1926685",
        "name": "D. Rubenstein"}]}, {"paperId": "77fb4dd55ea80ebd0a295809983bf1152face2a0",
        "externalIds": {"MAG": "2251762847", "CorpusId": 12905171}, "corpusId": 12905171,
        "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/77fb4dd55ea80ebd0a295809983bf1152face2a0",
        "title": "Cpu scheduling with automatic interactivity and dependency detection",
        "abstract": "Recent trends in virtualization and server consolidation have
        expanded the number of applications with different resource requirements and
        quality-of-service demands being run on the same system. Users expect computers
        not only to run these different applications, but to be able to run them all
        at the same time. A key challenge is how to ensure that the system provides
        acceptable interactive responsiveness to users while multiplexing resources
        among a diverse collection of applications. However, identifying interactive
        processes and scheduling them promptly are not easy because the latency sensitivity
        of a process in modern computer systems may vary dynamically based on the
        user request it is processing and the user requests that depend on this process
        directly and indirectly. Most commodity operating systems either allow users
        to specify the latency sensitivity of a process or try to detect interactive
        latency-sensitive, processes based on processor resource usage and sleeping
        behavior. These are generally ineffective. \nThis dissertation introduces
        RSIO. It detects latency-sensitive processes by monitoring accesses to I/O
        channels and inferring when user interactions occur. RSIO provides a general
        mechanism for all user interactions, including direct interactions via local
        HCI devices such as mouse and keyboard, indirect interactions through middleware,
        and remote interactions through networks. It automatically and dynamically
        identifies processes involved in a user interaction and boosts their priorities
        at the time the interaction occurs to improve system response time. RSIO detects
        processes that directly handle a user interaction as well as those indirectly
        involved in processing the interaction, automatically accounting for dependencies
        and boosting their priorities accordingly. RSIO works with existing schedulers,
        processes that may mix interactive and batch activities, and requires no application
        modifications to identify periods of latency-sensitive application activity.
        \nEven when a process is detected as latency-sensitive and its priority is
        boosted, the process may still not be scheduled promptly because of a problem
        known as priority inversion, which happens when a high priority process blocks
        waiting for the response from a low priority process. Without knowing the
        dependency among the processes, the CPU scheduler may schedule a medium priority
        process to run, and thus effectively delay the execution of the high priority
        process. We have developed SWAP to address the priority inversion problems
        caused by inter-process dependencies. SWAP can automatically determine possible
        resource dependencies among processes based on process system call history.
        Because some dependencies cannot be precisely determined, SWAP associates
        confidence levels with dependency information that are dynamically adjusted
        using feedback from process blocking behavior. SWAP can schedule processes
        using this imprecise dependency information in a manner that is compatible
        with existing scheduling mechanisms and ensures that actual scheduling behavior
        corresponds to the desired scheduling policy in the presence of process dependencies.
        Our results show that SWAP can provide substantial improvements in system
        performance in scheduling processes with dependencies. \nAs CPU schedulers
        are complicated to develop and increasingly important with the introduction
        of multi-core systems, we also introduce WARP, which is a new scheduler development
        and evaluation platform which facilitated our solutions. WARP is a trace-driven
        virtualized CPU scheduler execution environment that can dramatically simplify
        and speed the development and evaluation of CPU schedulers, including SWAP
        and RSIO. It is easy to use as it can run unmodified kernel scheduling code
        in user-space and can be used with standard user-space debugging and performance
        monitoring tools. We have implemented a WARP Linux prototype. Our results
        show that it can use application traces captured from its toolkit to accurately
        reflect the scheduling behavior of the real Linux operating system. Executing
        an application trace using WARP can be two orders of magnitude faster than
        running real applications.", "venue": "", "year": 2010, "referenceCount":
        64, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
        null, "journal": {"volume": "", "name": ""}, "authors": [{"authorId": "1700208",
        "name": "Jason Nieh"}, {"authorId": "31969154", "name": "Haoqiang Zheng"}]},
        {"paperId": "80bd596d8090bd33ab7f3e6df84a6282e886eea3", "externalIds": {"DBLP":
        "conf/sigmetrics/ZhengN10", "MAG": "2151801883", "DOI": "10.1145/1811039.1811069",
        "CorpusId": 2997142}, "corpusId": 2997142, "publicationVenue": {"id": "2194778f-4fb6-471e-b2ff-5ad194635f72",
        "name": "Measurement and Modeling of Computer Systems", "type": "conference",
        "alternate_names": ["Meas Model Comput Syst", "SIGMETRICS"], "url": "http://www.acm.org/sigmetrics/"},
        "url": "https://www.semanticscholar.org/paper/80bd596d8090bd33ab7f3e6df84a6282e886eea3",
        "title": "RSIO: automatic user interaction detection and scheduling", "abstract":
        "We present RSIO, a processor scheduling framework for improving the response
        time of latency-sensitive applications by monitoring accesses to I/O channels
        and inferring when user interactions occur. RSIO automatically identifies
        processes involved in a user interaction and boosts their priorities at the
        time the interaction occurs to improve system response time. RSIO also detects
        processes indirectly involved in processing an interaction, automatically
        accounting for dependencies and boosting their priorities accordingly. RSIO
        works with existing schedulers and requires no application modifications to
        identify periods of latency-sensitive application activity. We have implemented
        RSIO in Linux and measured its effectiveness on microbenchmarks and real applications.
        Our results show that RSIO is easy to use and can provide substantial improvements
        in system performance for latency-sensitive applications.", "venue": "Measurement
        and Modeling of Computer Systems", "year": 2010, "referenceCount": 17, "citationCount":
        18, "influentialCitationCount": 2, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2010-06-12", "journal": {"pages": "263-274"}, "authors": [{"authorId": "31969154",
        "name": "Haoqiang Zheng"}, {"authorId": "1700208", "name": "Jason Nieh"}]},
        {"paperId": "8e63c7f5e88d1bd1cc7facd44611b1b2d6901469", "externalIds": {"MAG":
        "2119539455", "DBLP": "conf/sigcse/LaadanNV10", "DOI": "10.1145/1734263.1734427",
        "CorpusId": 16295654}, "corpusId": 16295654, "publicationVenue": {"id": "2c9ecac6-f875-4a9b-acc2-10bd9f6782df",
        "name": "Technical Symposium on Computer Science Education", "type": "conference",
        "alternate_names": ["SIGCSE", "Tech Symp Comput Sci Educ"], "url": "http://www.sigcse.org/"},
        "url": "https://www.semanticscholar.org/paper/8e63c7f5e88d1bd1cc7facd44611b1b2d6901469",
        "title": "Teaching operating systems using virtual appliances and distributed
        version control", "abstract": "Students learn more through hands-on project
        experience for computer science courses such as operating systems, but providing
        the infrastructure support for a large class to learn by doing can be hard.
        To address this issue, we introduce a new approach to managing and grading
        operating system homework assignments based on virtual appliances, a distributed
        version control system, and live demonstrations. Our solution is easy to deploy
        and use with students'' personal computers, and obviates the need to provide
        a computer laboratory for teaching purposes. It supports the most demanding
        course projects, such as those that involve operating system kernel development,
        and can be used by both on-campus and remote distance learning students even
        with intermittent network connectivity. Our experiences deploying and using
        this solution to teach operating systems at Columbia University show that
        it is easier to use, more flexible, and more pedagogically effective than
        other approaches.", "venue": "Technical Symposium on Computer Science Education",
        "year": 2010, "referenceCount": 9, "citationCount": 38, "influentialCitationCount":
        1, "isOpenAccess": true, "openAccessPdf": {"url": "http://www.cs.columbia.edu/~orenl/papers/sigcse2010_os.pdf",
        "status": null}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
        "Conference"], "publicationDate": "2010-03-10", "journal": {"pages": "480-484"},
        "authors": [{"authorId": "1684343", "name": "Oren Laadan"}, {"authorId": "1700208",
        "name": "Jason Nieh"}, {"authorId": "1686284", "name": "N. Viennot"}]}, {"paperId":
        "9b4df8b1d6894adf590e5a7e43c3588247ca7a7e", "externalIds": {"MAG": "1975394463",
        "DBLP": "journals/ijsc/PotterLBKN10", "DOI": "10.1142/S1793351X10001000",
        "CorpusId": 46672260}, "corpusId": 46672260, "publicationVenue": {"id": "fe4efc6e-695e-432e-8463-5dd08835dfce",
        "name": "International Journal of Semantic Computing", "type": "journal",
        "alternate_names": ["Int J Semantic Comput"]}, "url": "https://www.semanticscholar.org/paper/9b4df8b1d6894adf590e5a7e43c3588247ca7a7e",
        "title": "Mediapod: a pocket-Sized and Personalized Multimedia Desktop", "abstract":
        "We present MediaPod, a portable system that allows mobile users to maintain
        the same persistent, personalized multimedia desktop environment on any available
        computer. Regardless of which computer is being used, MediaPod provides a
        consistent multimedia desktop session, maintaining all of a user''s applications,
        documents and configuration settings. This is achieved by leveraging rapid
        improvements in capacity, cost, and size of portable storage devices. MediaPod
        provides a virtualization and checkpoint-restart mechanism that decouples
        a desktop environment and its applications from the host, enabling multimedia
        desktop sessions to be suspended to portable storage, carried around, and
        resumed from the storage device on another computer. MediaPod virtualization
        also isolates desktop sessions from the host, protecting the privacy of the
        user and preventing malicious applications from damaging the host. We have
        implemented a Linux MediaPod prototype and demonstrate its ability to quickly
        suspend and resume multimedia desktop sessions, enabling a seamless computing
        experience for mobile users as they move among computers.", "venue": "International
        Journal of Semantic Computing", "year": 2010, "referenceCount": 0, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2010-06-01", "journal": {"volume": "4", "pages": "181-202", "name": "Int.
        J. Semantic Comput."}, "authors": [{"authorId": "2600961", "name": "S. Potter"},
        {"authorId": "1684343", "name": "Oren Laadan"}, {"authorId": "2195399", "name":
        "Ricardo A. Baratto"}, {"authorId": "39677916", "name": "Leonard N. Kim"},
        {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId": "ef0baa52cd817c9f5645c196d51031e67279b90c",
        "externalIds": {"MAG": "1996928355", "DBLP": "conf/systor/LaadanN10", "DOI":
        "10.1145/1815695.1815717", "CorpusId": 10621681}, "corpusId": 10621681, "publicationVenue":
        {"id": "8f0f5460-2391-4d75-ae39-d9b233b91e0a", "name": "Annual Haifa Experimental
        Systems Conference", "type": "conference", "alternate_names": ["Haifa Experimental
        Systems Conference", "SYSTOR", "ACM Int Conf Syst Storage", "Annu Haifa Exp
        Syst Conf", "ACM International Conference on Systems and Storage", "Haifa
        Exp Syst Conf"]}, "url": "https://www.semanticscholar.org/paper/ef0baa52cd817c9f5645c196d51031e67279b90c",
        "title": "Operating system virtualization: practice and experience", "abstract":
        "Operating system (OS) virtualization can provide a number of important benefits,
        including transparent migration of applications, server consolidation, online
        OS maintenance, and enhanced system security. However, the construction of
        such a system presents a myriad of challenges, even for the most cautious
        developer, that if overlooked may result in a weak, incomplete virtualization.
        We present a detailed discussion of key implementation issues in providing
        OS virtualization in a commodity OS, including system call interposition,
        virtualization state management, and race conditions. We discuss our experiences
        in implementing such functionality across two major versions of Linux entirely
        in a loadable kernel module without any kernel modification. We present experimental
        results on both uniprocessor and multiprocessor systems that demonstrate the
        ability of our approach to provide fine-grain virtualization with very low
        overhead.", "venue": "Annual Haifa Experimental Systems Conference", "year":
        2010, "referenceCount": 39, "citationCount": 35, "influentialCitationCount":
        1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2010-05-24", "journal":
        {"volume": "", "pages": "17", "name": ""}, "authors": [{"authorId": "1684343",
        "name": "Oren Laadan"}, {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId":
        "ff295ed8975c78be41d88455493d261bdb3ee18f", "externalIds": {"CorpusId": 15630801},
        "corpusId": 15630801, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/ff295ed8975c78be41d88455493d261bdb3ee18f",
        "title": "KVM for ARM", "abstract": "As ARM CPUs grow in performance and ubiquity
        across phones, netbooks, and embedded computers, providing virtualization
        support for ARM-based devices is increasingly important. We present KVM/ARM,
        a KVM-based virtualization solution for ARM-based devices that can run virtual
        machines with nearly unmodified operating systems. Because ARM is not virtualizable,
        KVM/ARM uses lightweight paravirtualization, a script-based method to automatically
        modify the source code of an operating system kernel to allow it to run in
        a virtual machine. Lightweight paravirtualization is architecture specific,
        but operating system independent. It is minimally intrusive, completely automated,
        and requires no knowledge or understanding of the guest operating system kernel
        code. By leveraging KVM, which is an intrinsic part of the Linux kernel, KVM/ARM\u2019s
        code base can be always kept in line with new kernel releases without additional
        maintenance costs, and can be easily included in most Linux distributions.
        We have implemented a KVM/ARM prototype based on the Linux kernel used in
        Google Android, and demonstrated its ability to successfully run nearly unmodified
        Linux guest operating systems.", "venue": "", "year": 2010, "referenceCount":
        16, "citationCount": 50, "influentialCitationCount": 4, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null,
        "publicationDate": null, "journal": null, "authors": [{"authorId": "38717488",
        "name": "Chris Dall"}, {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId":
        "0f35a41f62bdb35b9ec3c64e13990a4ede1d70ae", "externalIds": {"MAG": "2141652238",
        "DBLP": "conf/ism/PotterBLKN09", "DOI": "10.1109/ISM.2009.86", "CorpusId":
        18160502}, "corpusId": 18160502, "publicationVenue": {"id": "406b6adc-1fa6-4a35-b9f2-17e0a8ad5a73",
        "name": "IEEE International Symposium on Multimedia", "type": "conference",
        "alternate_names": ["Int Conf Ind 4.0 Smart Manuf", "International Symposium
        on Multimedia", "International Conference on Industry 4.0 and Smart Manufacturing",
        "ISM", "IEEE Int Symp Multimedia", "Int Symp Multimedia"], "url": "http://www.wikicfp.com/cfp/program?id=1724"},
        "url": "https://www.semanticscholar.org/paper/0f35a41f62bdb35b9ec3c64e13990a4ede1d70ae",
        "title": "MediaPod: A Personalized Multimedia Desktop in Your Pocket", "abstract":
        "We present MediaPod, a portable system that allows mobile users to maintain
        the same persistent, personalized multimedia desktop environment on any available
        computer. Regardless of which computer is being used, MediaPod provides a
        consistent multimedia desktop session, maintaining all of a user''s applications,
        documents and configuration settings. This is achieved by leveraging rapid
        improvements in capacity, cost, and size of portable storage devices. MediaPod
        provides a virtualization and checkpoint-restart mechanism that decouples
        a desktop environment and its applications from the host, enabling multimedia
        desktop sessions to be suspended to portable storage, carried around, and
        resumed from the storage device on another computer. MediaPod virtualization
        also isolates desktop sessions from the host, protecting the privacy of the
        user and preventing malicious applications from damaging the host. We have
        implemented a Linux MediaPod prototype and demonstrate its ability to quickly
        suspend and resume multimedia desktop sessions, enabling a seamless computing
        experience for mobile users as they move among computers.", "venue": "IEEE
        International Symposium on Multimedia", "year": 2009, "referenceCount": 14,
        "citationCount": 4, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2009-12-14", "journal": {"pages": "219-226", "name": "2009
        11th IEEE International Symposium on Multimedia"}, "authors": [{"authorId":
        "2600961", "name": "S. Potter"}, {"authorId": "2195399", "name": "Ricardo
        A. Baratto"}, {"authorId": "1684343", "name": "Oren Laadan"}, {"authorId":
        "39677916", "name": "Leonard N. Kim"}, {"authorId": "1700208", "name": "Jason
        Nieh"}]}, {"paperId": "16d38d2d0ceeb3f909fea66e514fb397232888a5", "externalIds":
        {"MAG": "2912303562", "CorpusId": 34646893}, "corpusId": 34646893, "publicationVenue":
        {"id": "2194778f-4fb6-471e-b2ff-5ad194635f72", "name": "Measurement and Modeling
        of Computer Systems", "type": "conference", "alternate_names": ["Meas Model
        Comput Syst", "SIGMETRICS"], "url": "http://www.acm.org/sigmetrics/"}, "url":
        "https://www.semanticscholar.org/paper/16d38d2d0ceeb3f909fea66e514fb397232888a5",
        "title": "Proceedings of the eleventh international joint conference on Measurement
        and modeling of computer systems", "abstract": "It is our great pleasure to
        welcome you to SIGMETRICS/Performance 2009. SIGMETRICS is the flagship conference
        of the ACM special interest group for the computer systems performance evaluation
        community. Performance is the flagship conference of the IFIP working group
        on performance modeling and analysis. Every three years, the two conferences
        are held jointly, and this is the eleventh joint conference. \n \nThis year,
        we will continue with several of the innovations introduced at last year''s
        SIGMETRICS program. The main conference will again be a full three days, featuring
        27 papers, 21 posters, and three invited talks from computer science luminaries,
        both academic and industrial. We will also reprise the demo competition and
        student thesis panel that were so well received last year. We are introducing
        an industrial information seminar, to provide an opportunity for students
        and academics to hear from representatives in industrial research about performance-related
        projects and their impact on deployed products and services. \n \nSupplementing
        the main conference are four interesting workshops, ranging from the venerable
        to the avant-garde. The workshop on MAthematical performance Modeling and
        Analysis (MAMA) continues its eleventh year as a forum for talks on early
        research in the more mathematical areas of computer performance analysis.
        The workshop on Hot Topics in Metrics (HotMetrics), which had a stellar inauguration
        last year, will reprise its role in helping to identify \"big\" and \"hard\"
        problems in performance evaluation and to develop innovative approaches to
        solving them. We also introduce two new workshops this year: GreenMetrics
        will explore how improvements to or new uses of Information and Communication
        Technology (ICT) can contribute towards efforts to minimize global climate
        change, a problem of increasing importance in modern society. The Learning
        for Networking workshop will investigate the use of machine learning techniques
        to tackle the increasingly complex architecture and control features in telecommunications
        and computer networks. \n \nThis year also features a splendid series of tutorials,
        on topics ranging from social networks to data-center networks, from data-flow
        programming to packet-flow configuration, and from internet measurement to
        internet service construction.", "venue": "Measurement and Modeling of Computer
        Systems", "year": 2009, "referenceCount": 0, "citationCount": 8, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["Review"], "publicationDate": "2009-06-15", "journal":
        {"volume": "", "name": ""}, "authors": [{"authorId": "2419090", "name": "John
        R. Douceur"}, {"authorId": "34820574", "name": "A. Greenberg"}, {"authorId":
        "1774132", "name": "T. Bonald"}, {"authorId": "1700208", "name": "Jason Nieh"}]},
        {"paperId": "1aa77b746e2b7dbb128bffe564ebb02e49b9ce5b", "externalIds": {"DBLP":
        "journals/pervasive/FarkasNN09", "MAG": "2029261337", "DOI": "10.1109/MPRV.2009.74",
        "CorpusId": 32780842}, "corpusId": 32780842, "publicationVenue": {"id": "e64588fe-6806-47bc-8dda-8f13250dbedb",
        "name": "IEEE pervasive computing", "type": "journal", "alternate_names":
        ["IEEE pervasive comput", "IEEE Pervasive Computing", "IEEE Pervasive Comput"],
        "issn": "1536-1268", "alternate_issns": ["1558-2590"], "url": "http://ieeexplore.ieee.org/servlet/opac?punumber=7756"},
        "url": "https://www.semanticscholar.org/paper/1aa77b746e2b7dbb128bffe564ebb02e49b9ce5b",
        "title": "Guest Editors'' Introduction: Virtual Machines", "abstract": "A
        system virtual machine is a software implementation of a real computer that
        can execute unmodified applications and an operating system. This issue contains
        articles and interviews that explore virtual machine use in pervasive computing.",
        "venue": "IEEE pervasive computing", "year": 2009, "referenceCount": 0, "citationCount":
        2, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2009-10-01", "journal": {"volume": "8", "pages": "6-7", "name": "IEEE Pervasive
        Comput."}, "authors": [{"authorId": "40458921", "name": "K. Farkas"}, {"authorId":
        "31434019", "name": "C. Narayanaswami"}, {"authorId": "1700208", "name": "Jason
        Nieh"}]}, {"paperId": "38a8e32cce656049487137aca0f6248f7339a643", "externalIds":
        {"MAG": "2151555965", "DBLP": "conf/isw/StavrouBKN09", "DOI": "10.1007/978-3-642-04474-8_16",
        "CorpusId": 15037534}, "corpusId": 15037534, "publicationVenue": {"id": "f16aa5de-bdcc-43be-9a80-3079a0600682",
        "name": "Information Security Conference", "type": "conference", "alternate_names":
        ["Insight Student Conference", "Insight Stud Conf", "Inf Secur Conf", "IEEE
        International Smart Cities Conference", "Int Supercomput Conf", "ISC", "International
        Supercomputing Conference", "IEEE Int Smart City Conf"], "url": "http://www.wikicfp.com/cfp/program?id=1679"},
        "url": "https://www.semanticscholar.org/paper/38a8e32cce656049487137aca0f6248f7339a643",
        "title": "A2M: Access-Assured Mobile Desktop Computing", "abstract": null,
        "venue": "Information Security Conference", "year": 2009, "referenceCount":
        39, "citationCount": 3, "influentialCitationCount": 1, "isOpenAccess": true,
        "openAccessPdf": {"url": "https://academiccommons.columbia.edu/doi/10.7916/D8CV4T2D/download",
        "status": null}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2009-09-04", "journal": {"pages": "186-201"}, "authors":
        [{"authorId": "1709571", "name": "A. Stavrou"}, {"authorId": "150272481",
        "name": "R. Barrato"}, {"authorId": "1720824", "name": "A. Keromytis"}, {"authorId":
        "1700208", "name": "Jason Nieh"}]}, {"paperId": "47ce1b01dd8eb15a9fadf5004ba8c0a80ca6e36d",
        "externalIds": {"DOI": "10.1145/3263020", "CorpusId": 52182748}, "corpusId":
        52182748, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/47ce1b01dd8eb15a9fadf5004ba8c0a80ca6e36d",
        "title": "Session details: SIGMETRICS/Performance 2009 posters", "abstract":
        null, "venue": "", "year": 2009, "referenceCount": 0, "citationCount": 0,
        "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
        "https://dl.acm.org/doi/pdf/10.1145/3263020?download=true", "status": null},
        "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "2009-10-16",
        "journal": {"volume": "37", "name": "ACM SIGMETRICS Performance Evaluation
        Review"}, "authors": [{"authorId": "1774132", "name": "T. Bonald"}, {"authorId":
        "1700208", "name": "Jason Nieh"}]}, {"paperId": "691fd792034ffa74a93738eebf8bbe5d1d7c416c",
        "externalIds": {"MAG": "2139174838", "DBLP": "conf/conext/ShermanNS09", "DOI":
        "10.1145/1658939.1658955", "CorpusId": 12323372}, "corpusId": 12323372, "publicationVenue":
        {"id": "5552b3d9-73b0-435f-8515-a135f23fcbba", "name": "Conference on Emerging
        Network Experiment and Technology", "type": "conference", "alternate_names":
        ["Conf Emerg Netw Exp Technol", "CoNEXT"], "url": "http://www.wikicfp.com/cfp/program?id=555"},
        "url": "https://www.semanticscholar.org/paper/691fd792034ffa74a93738eebf8bbe5d1d7c416c",
        "title": "FairTorrent: bringing fairness to peer-to-peer systems", "abstract":
        "Peer-to-Peer file-sharing applications suffer from a fundamental problem
        of unfairness. Free-riders cause slower download times for others by contributing
        little or no upload bandwidth while consuming much download bandwidth. Previous
        attempts to address this fair bandwidth allocation problem suffer from slow
        peer discovery, inaccurate predictions of neighboring peers'' bandwidth allocations,
        underutilization of bandwidth, and complex parameter tuning. We present FairTorrent,
        a new deficit-based distributed algorithm that accurately rewards peers in
        accordance with their contribution. A FairTorrent peer simply uploads the
        next data block to a peer to whom it owes the most data as measured by a deficit
        counter. FairTorrent is resilient to exploitation by free-riders and strategic
        peers, is simple to implement, requires no bandwidth over-allocation, no prediction
        of peers'' rates, no centralized control, and no parameter tuning. We implemented
        FairTorrent in a BitTorrent client without modifications to the BitTorrent
        protocol, and evaluated its performance against other widely-used BitTorrent
        clients. Our results show that FairTorrent provides up to two orders of magnitude
        better fairness, up to five times better download times for contributing peers,
        and 60% to 100% better performance on average in live BitTorrent swarms.",
        "venue": "Conference on Emerging Network Experiment and Technology", "year":
        2009, "referenceCount": 39, "citationCount": 39, "influentialCitationCount":
        4, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2009-12-01", "journal":
        {"pages": "133-144"}, "authors": [{"authorId": "2074258632", "name": "A. Sherman"},
        {"authorId": "1700208", "name": "Jason Nieh"}, {"authorId": "1690758", "name":
        "C. Stein"}]}, {"paperId": "69e8214ef4a374299f3ce1abddb7aeddc79514fb", "externalIds":
        {"MAG": "2160149718", "DOI": "10.1109/UBICOMM.2009.61", "CorpusId": 9180960},
        "corpusId": 9180960, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/69e8214ef4a374299f3ce1abddb7aeddc79514fb",
        "title": "GamePod: Persistent Gaming Sessions on Pocketable Storage Devices",
        "abstract": "We present GamePod, a portable system that enables mobile users
        to use the same persistent, gaming environment on any available computer.
        No matter what computer is being used, GamePod provides a consistent gaming
        environment, maintaining all of a user''s games, including active game state.
        This is achieved by leveraging rapid improvements in capacity, cost, and size
        of portable storage devices. GamePod provides a middleware layer that enables
        virtualization and checkpoint/restart functionality that decouples the gaming
        environment from a host machine. This enables gaming sessions to be suspended
        to portable storage, carried around, and resumed from the storage device on
        another computer. GamePod''s middleware layer also isolates gaming sessions
        from the host, protecting the host by preventing malicious executable content
        from damaging the host. We have implemented a Linux GamePod prototype and
        demonstrate its ability to quickly suspend and resume gaming sessions, enabling
        a seamless gaming experience for mobile users as they move among computers.",
        "venue": "2009 Third International Conference on Mobile Ubiquitous Computing,
        Systems, Services and Technologies", "year": 2009, "referenceCount": 9, "citationCount":
        2, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}, {"category": "Economics", "source": "s2-fos-model"}],
        "publicationTypes": ["Conference"], "publicationDate": "2009-10-11", "journal":
        {"pages": "269-276", "name": "2009 Third International Conference on Mobile
        Ubiquitous Computing, Systems, Services and Technologies"}, "authors": [{"authorId":
        "2600961", "name": "S. Potter"}, {"authorId": "2195399", "name": "Ricardo
        A. Baratto"}, {"authorId": "1684343", "name": "Oren Laadan"}, {"authorId":
        "1700208", "name": "Jason Nieh"}]}, {"paperId": "8e65b20e39f645aae298680e107013329f2740c4",
        "externalIds": {"MAG": "149607458", "DOI": "10.2172/966698", "CorpusId": 58709499},
        "corpusId": 58709499, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/8e65b20e39f645aae298680e107013329f2740c4",
        "title": "Final Report: Migration Mechanisms for Large-scale Parallel Applications",
        "abstract": "Process migration is the ability to transfer a process from one
        machine to another. It is a useful facility in distributed computing environments,
        especially as computing devices become more pervasive and Internet access
        becomes more ubiquitous. The potential benefits of process migration, among
        others, are fault resilience by migrating processes off of faulty hosts, data
        access locality by migrating processes closer to the data, better system response
        time by migrating processes closer to users, dynamic load balancing by migrating
        processes to less loaded hosts, and improved service availability and administration
        by migrating processes before host maintenance so that applications can continue
        to run with minimal downtime. Although process migration provides substantial
        potential benefits and many approaches have been considered, achieving transparent
        process migration functionality has been difficult in practice. To address
        this problem, our work has designed, implemented, and evaluated new and powerful
        transparent process checkpoint-restart and migration mechanisms for desktop,
        server, and parallel applications that operate across heterogeneous cluster
        and mobile computing environments. A key aspect of this work has been to introduce
        lightweight operating system virtualization to provide processes with private,
        virtual namespaces that decouple and isolate processes from dependencies on
        the host operating system instance. This decouplingmore\u00a0\u00bb enables
        processes to be transparently checkpointed and migrated without modifying,
        recompiling, or relinking applications or the operating system. Building on
        this lightweight operating system virtualization approach, we have developed
        novel technologies that enable (1) coordinated, consistent checkpoint-restart
        and migration of multiple processes, (2) fast checkpointing of process and
        file system state to enable restart of multiple parallel execution environments
        and time travel, (3) process migration across heterogeneous software environments,
        (4) network checkpoint-restart and migration of distributed and parallel applications,
        (5) a utility computing infrastructure for mobile desktop cloud computing
        based on process checkpoint-restart and migration functionality, (6) a process
        migration security architecture for protecting applications and infrastructure
        from denial-of-service attacks, and (7) a checkpoint-restart mobile computing
        system using portable storage devices.\u00ab\u00a0less", "venue": "", "year":
        2009, "referenceCount": 13, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": true, "openAccessPdf": {"url": "https://www.osti.gov/servlets/purl/966698",
        "status": null}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
        "2009-10-30", "journal": {"volume": "", "name": ""}, "authors": [{"authorId":
        "1700208", "name": "Jason Nieh"}]}, {"paperId": "b5d5921662913507e9085291efa1e306b11a542e",
        "externalIds": {"DBLP": "conf/ispass/ZhengN09", "MAG": "2133312402", "DOI":
        "10.1109/ISPASS.2009.4919642", "CorpusId": 12450518}, "corpusId": 12450518,
        "publicationVenue": {"id": "b8327dec-5d24-41b4-95ee-1fb7bf8f5f05", "name":
        "IEEE International Symposium on Performance Analysis of Systems and Software",
        "type": "conference", "alternate_names": ["Int Symp Perform Anal Syst Softw",
        "International Symposium on Performance Analysis of Systems and Software",
        "IEEE Int Symp Perform Anal Syst Softw", "ISPASS"], "url": "http://ispass.org/"},
        "url": "https://www.semanticscholar.org/paper/b5d5921662913507e9085291efa1e306b11a542e",
        "title": "WARP: Enabling fast CPU scheduler development and evaluation", "abstract":
        "Developing CPU scheduling algorithms and understanding their impact in practice
        can be difficult and time consuming due to the need to modify and test operating
        system kernel code and measure the resulting performance on a consistent workload
        of real applications. To address this problem, we have developed WARP, a trace-driven
        virtualized scheduler execution environment that can dramatically simplify
        and speed the development of CPU schedulers. WARP is easy to use as it can
        run unmodified kernel scheduling code and can be used with standard user-space
        debugging and performance monitoring tools. It accomplishes this by virtualizing
        operating system and hardware events to decouple kernel scheduling code from
        its native operating system and hardware environment. A simple kernel tracing
        toolkit can be used with WARP to capture traces of all CPU scheduling related
        events from a real system. WARP can then replay these traces in its virtualized
        environment with the same timing characteristics as in the real system. Traces
        can be used with different schedulers to provide accurate comparisons of scheduling
        performance for a given application workload. We have implemented a WARP Linux
        prototype. Our results show that WARP can use application traces captured
        from its toolkit to accurately reflect the scheduling behavior of the real
        Linux operating system. Furthermore, testing scheduler behavior using WARP
        with application traces can be two orders of magnitude faster than running
        the applications using Linux.", "venue": "IEEE International Symposium on
        Performance Analysis of Systems and Software", "year": 2009, "referenceCount":
        28, "citationCount": 3, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2009-04-26", "journal": {"pages": "101-112", "name": "2009
        IEEE International Symposium on Performance Analysis of Systems and Software"},
        "authors": [{"authorId": "31969154", "name": "Haoqiang Zheng"}, {"authorId":
        "1700208", "name": "Jason Nieh"}]}, {"paperId": "d5116f7cc5ec69502d02459ccf83ba6427067c1c",
        "externalIds": {"DBLP": "conf/isw/ShermanSNKS09", "MAG": "1485602485", "DOI":
        "10.1007/978-3-642-04474-8_36", "CorpusId": 982432}, "corpusId": 982432, "publicationVenue":
        {"id": "f16aa5de-bdcc-43be-9a80-3079a0600682", "name": "Information Security
        Conference", "type": "conference", "alternate_names": ["Insight Student Conference",
        "Insight Stud Conf", "Inf Secur Conf", "IEEE International Smart Cities Conference",
        "Int Supercomput Conf", "ISC", "International Supercomputing Conference",
        "IEEE Int Smart City Conf"], "url": "http://www.wikicfp.com/cfp/program?id=1679"},
        "url": "https://www.semanticscholar.org/paper/d5116f7cc5ec69502d02459ccf83ba6427067c1c",
        "title": "Adding Trust to P2P Distribution of Paid Content", "abstract": null,
        "venue": "Information Security Conference", "year": 2009, "referenceCount":
        24, "citationCount": 8, "influentialCitationCount": 1, "isOpenAccess": true,
        "openAccessPdf": {"url": "https://academiccommons.columbia.edu/doi/10.7916/D8HM5JR8/download",
        "status": null}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2009-09-04", "journal": {"pages": "459-474"}, "authors":
        [{"authorId": "2074258632", "name": "A. Sherman"}, {"authorId": "1709571",
        "name": "A. Stavrou"}, {"authorId": "1700208", "name": "Jason Nieh"}, {"authorId":
        "1720824", "name": "A. Keromytis"}, {"authorId": "1690758", "name": "C. Stein"}]},
        {"paperId": "d7e88f2dcbdae94addf108bd67f09f02126512e1", "externalIds": {"MAG":
        "200884758", "DBLP": "conf/lisa/PotterBN09", "DOI": "10.7916/D8HQ45MK", "CorpusId":
        489658}, "corpusId": 489658, "publicationVenue": {"id": "df661677-e13a-4a52-a5d0-e9d919dd50cf",
        "name": "LiSA", "type": "journal", "alternate_names": ["USENIX Large Install
        Syst Adm Conf", "USENIX Large Installation Systems Administration Conference",
        "LISA"], "issn": "1340-8836", "url": "http://www.wikicfp.com/cfp/program?id=11962"},
        "url": "https://www.semanticscholar.org/paper/d7e88f2dcbdae94addf108bd67f09f02126512e1",
        "title": "Two-Person Control Administation: Preventing Administation Faults
        through Duplication", "abstract": "Modern computing systems are complex and
        difficult to administer, making them more prone to system administration faults.
        Faults can occur simply due to mistakes in the process of administering a
        complex system. These mistakes can make the system insecure or unavailable.
        Faults can also occur due to a malicious act of the system administrator.
        Systems provide little protection against system administrators who install
        a backdoor or otherwise hide their actions. To prevent these types of system
        administration faults, we created ISE-T (I See Everything Twice), a system
        that applies the two-person control model to system administration. ISE-T
        requires two separate system administrators to perform each administration
        task. ISE-T then compares the results of the two administrators'' actions
        for equivalence. ISE-T only applies the results of the actions to the real
        system if they are equivalent. This provides a higher level of assurance that
        administration tasks are completed in a manner that will not introduce faults
        into the system. While the two-person control model is expensive, it is a
        natural fit for many financial, government, and military systems that require
        higher levels of assurance. We implemented a prototype ISE-T system for Linux
        using virtual machines and a unioning file system. Using this system, we conducted
        a real user study to test its ability to capture changes performed by seperate
        system administrators and compare them for equivalence. Our results show that
        ISE-T is effective at determining equivalence for many common administration
        tasks, even when administrators perform those tasks in different ways.", "venue":
        "LiSA", "year": 2009, "referenceCount": 31, "citationCount": 6, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science", "Engineering"], "s2FieldsOfStudy": [{"category": "Computer Science",
        "source": "external"}, {"category": "Engineering", "source": "external"},
        {"category": "Political Science", "source": "s2-fos-model"}, {"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2009-11-01", "journal": {"pages": "15-27"}, "authors":
        [{"authorId": "2600961", "name": "S. Potter"}, {"authorId": "1751667", "name":
        "S. Bellovin"}, {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId":
        "f7226ce7103c263d9c1ec2310019125aa1572369", "externalIds": {"DBLP": "conf/asplos/SidiroglouLPVNK09",
        "MAG": "2152475836", "DOI": "10.1145/1508244.1508250", "CorpusId": 710568},
        "corpusId": 710568, "publicationVenue": {"id": "d4610af5-85e0-480b-8773-5c71d92a7b99",
        "name": "International Conference on Architectural Support for Programming
        Languages and Operating Systems", "type": "conference", "alternate_names":
        ["ASPLOS", "Int Conf Archit Support Program Lang Oper Syst", "Archit Support
        Program Lang Oper Syst", "Architectural Support for Programming Languages
        and Operating Systems"], "url": "http://www.acm.org/sigplan/"}, "url": "https://www.semanticscholar.org/paper/f7226ce7103c263d9c1ec2310019125aa1572369",
        "title": "ASSURE: automatic software self-healing using rescue points", "abstract":
        "Software failures in server applications are a significant problem for preserving
        system availability. We present ASSURE, a system that introduces rescue points
        that recover software from unknown faults while maintaining both system integrity
        and availability, by mimicking system behavior under known error conditions.
        Rescue points are locations in existing application code for handling a given
        set of programmer-anticipated failures, which are automatically repurposed
        and tested for safely enabling fault recovery from a larger class of (unanticipated)
        faults. When a fault occurs at an arbitrary location in the program, ASSURE
        restores execution to an appropriate rescue point and induces the program
        to recover execution by virtualizing the program''s existing error-handling
        facilities. Rescue points are identified using fuzzing, implemented using
        a fast coordinated checkpoint-restart mechanism that handles multi-process
        and multi-threaded applications, and, after testing, are injected into production
        code using binary patching. We have implemented an ASSURE Linux prototype
        that operates without application source code and without base operating system
        kernel changes. Our experimental results on a set of real-world server applications
        and bugs show that ASSURE enabled recovery for all of the bugs tested with
        fast recovery times, has modest performance overhead, and provides automatic
        self-healing orders of magnitude faster than current human-driven patch deployment
        methods.", "venue": "International Conference on Architectural Support for
        Programming Languages and Operating Systems", "year": 2009, "referenceCount":
        31, "citationCount": 192, "influentialCitationCount": 9, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
        "Conference"], "publicationDate": "2009-02-28", "journal": {"pages": "37-48"},
        "authors": [{"authorId": "1993785", "name": "Stelios Sidiroglou"}, {"authorId":
        "1684343", "name": "Oren Laadan"}, {"authorId": "36447797", "name": "C. Perez"},
        {"authorId": "1686284", "name": "N. Viennot"}, {"authorId": "1700208", "name":
        "Jason Nieh"}, {"authorId": "1720824", "name": "A. Keromytis"}]}, {"paperId":
        "4733864fbd53f569ed1d4dac7fa7301d764334d1", "externalIds": {"MAG": "1522737065",
        "DOI": "10.7916/D85X2HTM", "CorpusId": 15320586}, "corpusId": 15320586, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/4733864fbd53f569ed1d4dac7fa7301d764334d1",
        "title": "Automatic User Interaction Detection and Scheduling with RSIO",
        "abstract": "Response time is one of the most important factors for the overall
        usability of a computer system. We present RSIO, a processor scheduling framework
        for improving the response time of latency-sensitive applications by monitoring
        accesses to I/O channels and inferring when user interactions occur. RSIO
        provides a general mechanism for all user interactions, including direct interactions
        via local HCI devices such as mouse and keyboard, indirect interactions through
        middleware, and remote interactions through networks. It automatically and
        dynamically identifies processes involved in a user interaction and boosts
        their priorities at the time the interaction occurs to improve system response
        time. RSIO detects processes that directly handle a user interaction as well
        as those indirectly involved in processing the interaction, automatically
        accounting for dependencies and boosting their priorities accordingly. RSIO
        works with existing schedulers, processes that may mix interactive and batch
        activities, and requires no application modifications to identify periods
        of latency-sensitive application activity. We have implemented RSIO in Linux
        and measured its effectiveness on microbenchmarks and real applications. Our
        results show that RSIO is easy to use and can provide substantial improvements
        in system performance for latency-sensitive applications.", "venue": "", "year":
        2008, "referenceCount": 19, "citationCount": 1, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": null, "journal": {"volume": "",
        "name": ""}, "authors": [{"authorId": "31969154", "name": "Haoqiang Zheng"},
        {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId": "8498a23215226060b06e8b694e359a32f4128695",
        "externalIds": {"MAG": "2126607654", "DOI": "10.1089/tmj.2007.0066", "CorpusId":
        7269686, "PubMed": "18570565"}, "corpusId": 7269686, "publicationVenue": {"id":
        "6c423cfc-55ea-4c2a-9cb8-47978588379f", "name": "Telemedicine journal and
        e-health", "type": "journal", "alternate_names": ["Telemed j e-health", "Telemed
        J E-health", "Telemedicine Journal and E-health"], "issn": "1530-5627", "url":
        "https://www.liebertpub.com/loi/tmj", "alternate_urls": ["http://www.liebertpub.com/tmj"]},
        "url": "https://www.semanticscholar.org/paper/8498a23215226060b06e8b694e359a32f4128695",
        "title": "The REmote Patient Education in a Telemedicine Environment Architecture
        (REPETE).", "abstract": "The objective of the study was to develop and implement
        an architecture for remote training that can be used in the narrowband home
        telemedicine environment. A remote training architecture, the REmote Patient
        Education in a Telemedicine Environment (REPETE) architecture, using a remote
        control protocol (RCP) was developed. A set of design criteria was specified.
        The developed architecture was integrated into the IDEATel home telemedicine
        unit (HTU) and evaluated against these design criteria using a combination
        of technical and expert evaluations. Technical evaluation of the architecture
        demonstrated that remote cursor movements and positioning displayed on the
        HTU were smooth and effectively real-time. The trainers were able to observe
        within approximately 2 seconds lag what the patient sees on their HTU screen.
        Evaluation of the architecture by experts was favorable. Responses to a Likert
        scale questionnaire regarding audio quality and remote control performance
        indicated that the expert evaluators thought that the audio quality and remote
        control performance were adequate for remote training. All evaluators strongly
        agreed that the system would be useful for training patients. The REPETE architecture
        supports basic training needs over a narrowband dial-up connection. We were
        able to maintain an audio chat simultaneously with performing a remote training
        session, while maintaining both acceptable audio quality and remote control
        performance. The RCP provides a mechanism to provide training without requiring
        a trainer to go to the patient''s home and effectively supports deictic referencing
        to on screen objects.", "venue": "Telemedicine journal and e-health", "year":
        2008, "referenceCount": 11, "citationCount": 4, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science", "Medicine"], "s2FieldsOfStudy": [{"category": "Computer Science",
        "source": "external"}, {"category": "Medicine", "source": "external"}, {"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2008-05-01", "journal": {"volume": "14 4", "pages": "\n          355-61\n        ",
        "name": "Telemedicine journal and e-health : the official journal of the American
        Telemedicine Association"}, "authors": [{"authorId": "145812029", "name":
        "A. Lai"}, {"authorId": "1690334", "name": "J. Starren"}, {"authorId": "1723376",
        "name": "D. Kaufman"}, {"authorId": "2075038", "name": "Eneida A. Mendon\u00e7a"},
        {"authorId": "3060307", "name": "W. Palmas"}, {"authorId": "1700208", "name":
        "Jason Nieh"}, {"authorId": "143665417", "name": "S. Shea"}]}, {"paperId":
        "9540e5232a206ac6fb66d90d975e088b2356ac64", "externalIds": {"MAG": "1606030412",
        "DOI": "10.7916/D8M333M3", "CorpusId": 6858904}, "corpusId": 6858904, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/9540e5232a206ac6fb66d90d975e088b2356ac64",
        "title": "Mitigating the Effect of Free-Riders in BitTorrent using Trusted
        Agents", "abstract": "Even though Peer-to-Peer (P2P) systems present a cost-effective
        and scalable solution to content distribution, most entertainment, media and
        software, content providers continue to rely on expensive, centralized solutions
        such as Content Delivery Networks. One of the main reasons is that the current
        P2P systems cannot guarantee reasonable performance as they depend on the
        willingness of users to contribute bandwidth. Moreover, even systems like
        BitTorrent, which employ a tit-for-tat protocol to encourage fair bandwidth
        exchange between users, are prone to free-riding (i.e. peers that do not upload).
        Our experiments on PlanetLab extend previous research [14, 12, 11] demonstrating
        that such selfish behavior can seriously degrade the performance of regular
        users in many more scenarios beyond simple free-riding: we observed an overhead
        of upto 430% for 80% of free-riding identities easily generated by a small
        set of selfish users. To mitigate the effects of selfish users, we propose
        a new P2P architecture that classifies peers with the help of a small number
        of trusted nodes that we call Trusted Auditors (TAs). TAs participate in P2P
        download like regular clients and detect free-riding identities by observing
        their neighbors\u2019 behavior. Using TAs, we can separate compliant users
        into a separate service pool resulting in better performance. Furthermore,
        we show that TAs are more effective ensuring the performance of the system
        than a mere increase in bandwidth capacity: for 80% of freeriding identities
        a single-TA system has a 6% download time overhead while without the TA and
        three times the bandwidth capacity we measure a 100% overhead.", "venue":
        "", "year": 2008, "referenceCount": 13, "citationCount": 3, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": null, "journal": {"volume": "",
        "name": ""}, "authors": [{"authorId": "2074258632", "name": "A. Sherman"},
        {"authorId": "1709571", "name": "A. Stavrou"}, {"authorId": "1700208", "name":
        "Jason Nieh"}, {"authorId": "1690758", "name": "C. Stein"}]}, {"paperId":
        "b533831773ccadaaf4d92fdc2328064891ef7b4a", "externalIds": {"MAG": "2139035750",
        "CorpusId": 62071067}, "corpusId": 62071067, "publicationVenue": {"id": "73f7fe95-b68b-468f-b7ba-3013ca879e50",
        "name": "Conference on Computer and Communications Security", "type": "conference",
        "alternate_names": ["Int Workshop Cogn Cell Syst", "CCS", "Comput Commun Secur",
        "CcS", "International Symposium on Community-centric Systems", "International
        Workshop on Cognitive Cellular Systems", "Conf Comput Commun Secur", "Comb
        Comput Sci", "Int Symp Community-centric Syst", "Combinatorics and Computer
        Science", "Circuits, Signals, and Systems", "Computer and Communications Security",
        "Circuit Signal Syst"], "url": "https://dl.acm.org/conference/ccs"}, "url":
        "https://www.semanticscholar.org/paper/b533831773ccadaaf4d92fdc2328064891ef7b4a",
        "title": "Proceedings of the 1st ACM workshop on Virtual machine security",
        "abstract": "Welcome to the 1st Workshop on Virtual Machine Security (VMSec)!
        \n \nIn these proceedings, you will find the 7 papers presented at VMSec Workshop,
        held on October 31st at George Mason University in conjunction with the ACM
        Conference on Computer & Communications Security. This workshop aims to bring
        together leading researchers and practitioners in the fields of virtualization
        and security to present the latest work on these topics. This year we had
        20 submissions and we decided to accept six (6) full papers and one (1) short
        paper. A program committee of 11 experts reviewed and discussed the papers.
        Each paper received at least 3 reviews from the PC members with most of the
        papers having 4 reviews in total. Some of the papers were very controversial
        and were discussed in detail by the PC members after the end of the review
        process. The final decisions were made based on those discussions. \n \nVMSec
        is the first workshop to deal exclusively with virtual machine security. Virtualization
        has seen an explosion in growth in deployment, implementations, and applications.
        In addition, it seems that virtualization holds unique properties that make
        it attractive for security including isolation, compartmentalization, live
        state capture, and replay. In the past, virtualization has been used to study
        malicious software as well as to prevent malicious software infection. We
        believe that the large-scale use of virtualization offers new opportunities
        and challenges regarding security. We hope that this workshop will provoke
        fruitful discussions for researchers and practitioners, from both industry
        and academia.", "venue": "Conference on Computer and Communications Security",
        "year": 2008, "referenceCount": 0, "citationCount": 6, "influentialCitationCount":
        1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["Review"], "publicationDate": "2008-10-27", "journal":
        {"volume": "", "name": ""}, "authors": [{"authorId": "1700208", "name": "Jason
        Nieh"}, {"authorId": "1709571", "name": "A. Stavrou"}]}, {"paperId": "d64c4eb79f76bcf77d313c4be1605b00be3d6db3",
        "externalIds": {"DBLP": "conf/ccs/2008vmsec", "MAG": "318284521", "DOI": "10.1145/1456482",
        "CorpusId": 34741411}, "corpusId": 34741411, "publicationVenue": null, "url":
        "https://www.semanticscholar.org/paper/d64c4eb79f76bcf77d313c4be1605b00be3d6db3",
        "title": "Proceedings of the 1st ACM Workshop on Virtual Machine Security,
        VMSec 2008, Alexandria, VA, USA, October 27, 2008", "abstract": null, "venue":
        "VMSec", "year": 2008, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": null, "journal": {"volume": "",
        "name": ""}, "authors": [{"authorId": "1700208", "name": "Jason Nieh"}, {"authorId":
        "1709571", "name": "A. Stavrou"}]}, {"paperId": "e59a3f312a3f3381cc489146221e79a44ac53324",
        "externalIds": {"MAG": "1571441856", "DOI": "10.7916/D82B94BN", "CorpusId":
        2392600}, "corpusId": 2392600, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/e59a3f312a3f3381cc489146221e79a44ac53324",
        "title": "Deux: Autonomic Testing System for Operating System Upgrades", "abstract":
        "Operating system upgrades and patches sometimes break applications that worked
        fine on the older version. We present an autonomic approach to testing of
        OS updates while minimizing downtime, usable without local regression suites
        or IT expertise. Deux utilizes a dual-layer virtual machine architecture,
        with lightweight application process checkpoint and resume across OS versions,
        enabling simultaneous execution of the same applications on both OS versions
        in different VMs. Inputs provided by ordinary users to the production old
        version are also fed to the new version. The old OS acts as a pseudo-oracle
        for the update, and application state is automatically re-cloned to continue
        testing after any output discrepancies (intercepted at system call level)
        all transparently to users. If all differences are deemed inconsequential,
        then the VM roles are switched with the application state already in place.
        Our empirical evaluation with both LAMP and standalone applications demonstrates
        Deux\u2019s efficiency and effectiveness.", "venue": "", "year": 2008, "referenceCount":
        34, "citationCount": 1, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
        null, "journal": {"volume": "", "name": ""}, "authors": [{"authorId": "3123859",
        "name": "Leon Wu"}, {"authorId": "1694056", "name": "G. Kaiser"}, {"authorId":
        "1700208", "name": "Jason Nieh"}, {"authorId": "1824613", "name": "Christian
        Murphy"}]}, {"paperId": "18efc6ae1f845e710b256bdcc39ffd1fa6a79661", "externalIds":
        {"MAG": "2124910854", "DBLP": "conf/sosp/LaadanBPPN07", "DOI": "10.1145/1294261.1294289",
        "CorpusId": 16971078}, "corpusId": 16971078, "publicationVenue": {"id": "6c6fcaa9-fd25-488b-8050-995227ac671c",
        "name": "Symposium on Operating Systems Principles", "type": "conference",
        "alternate_names": ["Symp Oper Syst Princ", "SOSP"], "url": "http://sosp.org/"},
        "url": "https://www.semanticscholar.org/paper/18efc6ae1f845e710b256bdcc39ffd1fa6a79661",
        "title": "DejaView: a personal virtual computer recorder", "abstract": "As
        users interact with the world and their peers through their computers, it
        is becoming important to archive and later search the information that they
        have viewed. We present DejaView, a personal virtual computer recorder that
        provides a complete record of a desktop computing experience that a user can
        playback, browse, search, and revive seamlessly. DejaView records visual output,
        checkpoints corresponding application and file system state, and captures
        displayed text with contextual information to index the record. A user can
        then browse and search the record for any visual information that has been
        displayed on the desktop, and revive and interact with the desktop computing
        state corresponding to any point in the record. DejaView combines display,
        operating system, and file system virtualization to provide its functionality
        transparently without any modifications to applications, window systems, or
        operating system kernels. We have implemented DejaView and evaluated its performance
        on real-world desktop applications. Our results demonstrate that DejaView
        can provide continuous low-overhead recording without any user noticeable
        performance degradation, and allows browsing, search and playback of records
        fast enough for interactive use.", "venue": "Symposium on Operating Systems
        Principles", "year": 2007, "referenceCount": 42, "citationCount": 59, "influentialCitationCount":
        1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2007-10-14",
        "journal": {"pages": "279-292"}, "authors": [{"authorId": "1684343", "name":
        "Oren Laadan"}, {"authorId": "2195399", "name": "Ricardo A. Baratto"}, {"authorId":
        "1969471", "name": "Dan B. Phung"}, {"authorId": "2600961", "name": "S. Potter"},
        {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId": "3ec5430347717ff2f02f435cdcf951f35cd1479a",
        "externalIds": {"MAG": "1527076549", "DBLP": "conf/usenix/Nieh07", "CorpusId":
        12712857}, "corpusId": 12712857, "publicationVenue": {"id": "9448f839-459b-45f3-8573-5eff3f032334",
        "name": "USENIX Annual Technical Conference", "type": "conference", "alternate_names":
        ["USENIX Annu Tech Conf", "USENIX", "USENIX ATC"], "url": "https://www.usenix.org/conferences/byname/131"},
        "url": "https://www.semanticscholar.org/paper/3ec5430347717ff2f02f435cdcf951f35cd1479a",
        "title": "Transparent Checkpoint-Restart of Multiple Processes on Commodity
        Operating Systems", "abstract": "The ability to checkpoint a running application
        and restart it later can provide many useful benefits including fault recovery,
        advanced resources sharing, dynamic load balancing and improved service availability.
        However, applications often involve multiple processes which have dependencies
        through the operating system. We present a transparent mechanism for commodity
        operating systems that can checkpoint multiple processes in a consistent state
        so that they can be restarted correctly at a later time. We introduce an efficient
        algorithm for recording process relationships and correctly saving and restoring
        shared state in a manner that leverages existing operating system kernel functionality.
        We have implemented our system as a loadable kernel module and user-space
        utilities in Linux. We demonstrate its ability on real-world applications
        to provide transparent checkpoint-restart functionality without modifying,
        recompiling, or relinking applications, libraries, or the operating system
        kernel. Our results show checkpoint and restart times 3 to 55 times faster
        than OpenVZ and 5 to 1100 times faster than Xen.", "venue": "USENIX Annual
        Technical Conference", "year": 2007, "referenceCount": 27, "citationCount":
        100, "influentialCitationCount": 3, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
        "publicationDate": "2007-06-17", "journal": {"pages": "323-336"}, "authors":
        [{"authorId": "1684343", "name": "Oren Laadan"}, {"authorId": "1700208", "name":
        "Jason Nieh"}]}, {"paperId": "49262e1e7c0b40d588505a6a6ceb87ace81d0772", "externalIds":
        {"MAG": "115731752", "CorpusId": 9044371}, "corpusId": 9044371, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/49262e1e7c0b40d588505a6a6ceb87ace81d0772",
        "title": "Multimedia on Multiprocessors: Where\u2019s the OS When You Really
        Need It?", "abstract": "Due to the limitations of current operating systems
        in supporting multimedia applications, much work has been done to provide
        resource management mechanisms to address this problem. As processor cycles
        are often the most oversubscribed and critical resource, most of this work
        has focused on uniprocessor scheduling. However, hardware platforms are moving
        to multiprocessor systems, and little work has been done to address the problem
        of supporting multimedia applications in a multiprocessor context. This paper
        proposes a new multiprocessor scheduler designed to meet the requirements
        of multimedia applications. We present an overview of the scheduling algorithm,
        describe its implementation in a commercial operating system, and discuss
        directions for future work.", "venue": "", "year": 2007, "referenceCount":
        22, "citationCount": 4, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["Review"], "publicationDate":
        null, "journal": {"volume": "", "name": ""}, "authors": [{"authorId": "1700208",
        "name": "Jason Nieh"}, {"authorId": "39682108", "name": "M. Lam"}]}, {"paperId":
        "69d17c87450c07e79ae45eb946857ce93353cf8f", "externalIds": {"MAG": "1582075119",
        "DOI": "10.7916/D8KD25SK", "CorpusId": 1437802}, "corpusId": 1437802, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/69d17c87450c07e79ae45eb946857ce93353cf8f",
        "title": "Can P2P Replace Direct Download for Content Distribution", "abstract":
        "While peer-to-peer (P2P) file-sharing is a powerful and cost-effective content
        distribution model, most paid-for digital-content providers (CPs) rely on
        direct download to deliver their content. CPs such as Apple iTunes that command
        a large base of paying users are hesitant to use a P2P model that could easily
        degrade their user base into yet another free file-sharing community. We present
        TP2, a system that makes P2P file sharing a viable delivery mechanism for
        paid digital content by providing the same security properties as the currently
        used direct-download model. TP2 introduces the novel notion of trusted auditors
        (TAs) \u2013 P2P peers that are controlled by the system operator. TAs monitor
        the behavior of other peers and help detect and prevent formation of illegal
        file-sharing clusters among the CP\u2019s user base. TAs both complement and
        exploit the strong authentication and authorization mechanisms that are used
        in TP2 to control access to content. It is important to note that TP2 does
        not attempt to solve the out-of-band file-sharing or DRM problems, which also
        exist in the direct-download systems currently in use. We analyze TP2 by modeling
        it as a novel game between misbehaving users who try to form unauthorized
        file-sharing clusters and TAs who curb the growth of such clusters. Our analysis
        shows that a small fraction of TAs is sufficient to protect the P2P system
        against unauthorized file sharing. In a system with as many as 60% of misbehaving
        users, even a small fraction of TAs can detect 99% of unauthorized cluster
        formation. We developed a simple economic model to show that even with such
        a large fraction of malicious nodes, TP2 can improve CP\u2019s profits (which
        could translate to user savings) by 62 to 122%, even while assuming conservative
        estimates of content and bandwidth costs. We implemented TP2 as a layer on
        top of BitTorrent and demonstrated experimentally using PlanetLab that our
        system provides trusted P2P file sharing with negligible performance overhead.",
        "venue": "", "year": 2007, "referenceCount": 18, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": null, "journal": {"volume": "",
        "name": ""}, "authors": [{"authorId": "2074258632", "name": "A. Sherman"},
        {"authorId": "1709571", "name": "A. Stavrou"}, {"authorId": "1700208", "name":
        "Jason Nieh"}, {"authorId": "1690758", "name": "C. Stein"}, {"authorId": "1720824",
        "name": "A. Keromytis"}]}, {"paperId": "8ca3c3eecfd92d3b5cf5a77f6a5051404d12ef9e",
        "externalIds": {"DBLP": "conf/sp/SidiroglouLKN07", "MAG": "2163994161", "DOI":
        "10.1109/SP.2007.38", "CorpusId": 15428751}, "corpusId": 15428751, "publicationVenue":
        {"id": "29b9c461-963e-4d11-b2ab-92c182243942", "name": "IEEE Symposium on
        Security and Privacy", "type": "conference", "alternate_names": ["S&P", "IEEE
        Symp Secur Priv"], "url": "http://www.ieee-security.org/"}, "url": "https://www.semanticscholar.org/paper/8ca3c3eecfd92d3b5cf5a77f6a5051404d12ef9e",
        "title": "Using Rescue Points to Navigate Software Recovery", "abstract":
        "We present a new technique that enables software recovery in legacy applications
        by retrofitting exception-handling capabilities, error virtualization using
        rescue points. We introduce the idea of \"rescue points\" as program locations
        to which an application can recover its execution in the presence of failures.
        The use of rescue points reduces the chance of unanticipated execution paths
        thereby making recovery more robust by mimicking system behavior under controlled
        error conditions. These controlled error conditions can be thought of as a
        set erroneous inputs, like the ones used by most quality-assurance teams during
        software development, designed to stress-test an application. To discover
        rescue points applications are profiled and monitored during tests that bombard
        the program with bad/random inputs. The intuition is that by monitoring application
        behavior during these runs, we gain insight into how programmer-tested program
        points are used to propagate faults gracefully.", "venue": "IEEE Symposium
        on Security and Privacy", "year": 2007, "referenceCount": 24, "citationCount":
        33, "influentialCitationCount": 1, "isOpenAccess": true, "openAccessPdf":
        {"url": "https://academiccommons.columbia.edu/doi/10.7916/D8DN4FC4/download",
        "status": null}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2007-05-20", "journal": {"pages": "273-280", "name": "2007
        IEEE Symposium on Security and Privacy (SP ''07)"}, "authors": [{"authorId":
        "1993785", "name": "Stelios Sidiroglou"}, {"authorId": "1684343", "name":
        "Oren Laadan"}, {"authorId": "1720824", "name": "A. Keromytis"}, {"authorId":
        "1700208", "name": "Jason Nieh"}]}, {"paperId": "c6f723b51cf6291288cc4566d6df58ccb7665f85",
        "externalIds": {"MAG": "32551876", "CorpusId": 7109719, "PubMed": "18694118"},
        "corpusId": 7109719, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/c6f723b51cf6291288cc4566d6df58ccb7665f85",
        "title": "REPETE2: A next generation home telemedicine architecture.", "abstract":
        "As the availability of home broadband increases, there is an increasing need
        for a broadband-based home telemedicine architecture. A home tele-medicine
        architecture supporting broadband and remote training is presented.", "venue":
        "AMIA ... Annual Symposium proceedings. AMIA Symposium", "year": 2007, "referenceCount":
        7, "citationCount": 7, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science", "Medicine"],
        "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
        {"category": "Medicine", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2007-10-11", "journal": {"pages": "\n          1020\n        ", "name": "AMIA
        ... Annual Symposium proceedings. AMIA Symposium"}, "authors": [{"authorId":
        "145812029", "name": "A. Lai"}, {"authorId": "1700208", "name": "Jason Nieh"},
        {"authorId": "1690334", "name": "J. Starren"}]}, {"paperId": "e0f1f6b08def2b7e74c5269c6fe8cc00f38bc61d",
        "externalIds": {"MAG": "1480711899", "DOI": "10.7916/D8TX3P7B", "CorpusId":
        17262854}, "corpusId": 17262854, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/e0f1f6b08def2b7e74c5269c6fe8cc00f38bc61d",
        "title": "Aequitas: A Trusted P2P System for Paid Content Delivery", "abstract":
        "P2P file-sharing has been recognized as a powerful and efficient distribution
        model due to its ability to leverage users\u2019 upload bandwidth. However,
        companies that sell digital content on-line are hesitant to rely on P2P models
        for paid content distribution due to the free file-sharing inherent in P2P
        models. In this paper we present Aequitas, a P2P system in which users share
        paid content anonymously via a layer of intermediate nodes. We argue that
        with the extra anonymity in Aequitas, vendors could leverage P2P bandwidth
        while effectively maintaining the same level of trust towards their customers
        as in traditional models of paid content distribution. As a result, a content
        provider could reduce its infrastructure costs and subsequently lower the
        costs for the end-users. The intermediate nodes are incentivized to contribute
        their bandwidth via electronic micropayments. We also introduce techniques
        that prevent the intermediate nodes from learning the content of the files
        they help transmit. In this paper we present the design of our system, an
        analysis of its properties and an implementation and experimental evaluation.
        We quantify the value of the intermediate nodes, both in terms of efficiency
        and their effect on anonoymity. We argue in support of the economic and technological
        merits of the system.", "venue": "", "year": 2007, "referenceCount": 25, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Engineering"], "s2FieldsOfStudy": [{"category": "Engineering",
        "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": null, "journal": {"volume": "",
        "name": ""}, "authors": [{"authorId": "2074258632", "name": "A. Sherman"},
        {"authorId": "2056727440", "name": "Japinder Singh Chawla"}, {"authorId":
        "1700208", "name": "Jason Nieh"}, {"authorId": "1690758", "name": "C. Stein"},
        {"authorId": "2060304782", "name": "Justin Sarma"}]}, {"paperId": "e12037d5aeb225ef51a78cdce69fcd279231411f",
        "externalIds": {"MAG": "1590423655", "DBLP": "conf/lisa/PotterNS07", "CorpusId":
        18517163}, "corpusId": 18517163, "publicationVenue": {"id": "df661677-e13a-4a52-a5d0-e9d919dd50cf",
        "name": "LiSA", "type": "journal", "alternate_names": ["USENIX Large Install
        Syst Adm Conf", "USENIX Large Installation Systems Administration Conference",
        "LISA"], "issn": "1340-8836", "url": "http://www.wikicfp.com/cfp/program?id=11962"},
        "url": "https://www.semanticscholar.org/paper/e12037d5aeb225ef51a78cdce69fcd279231411f",
        "title": "Secure Isolation of Untrusted Legacy Applications", "abstract":
        "Existing applications often contain security holes that are not patched until
        after the system has already been compromised. Even when software updates
        are available, applying them often results in system services being unavailable
        for some time. This can force administrators to leave system services in an
        insecure state for extended periods. To address these system security issues,
        we have developed the PeaPod virtualization layer. The PeaPod virtualization
        layer provides a group of processes and associated users with two virtualization
        abstractions, pods and peas. A pod provides an isolated virtualized environment
        that is decoupled from the underlying operating system instance. A pea provides
        an easy-to-use least privilege model for fine grain isolation amongst application
        components that need to interact with one another. As a result, the system
        easily enables the creation of lightweight environments for privileged program
        execution that can help with intrusion prevention and containment. Our measurements
        on real world desktop and server applications demonstrate that the PeaPod
        virtualization layer imposes little overhead and enables secure isolation
        of untrusted applications.", "venue": "LiSA", "year": 2007, "referenceCount":
        32, "citationCount": 16, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2007-11-01", "journal": {"pages": "117-130"}, "authors":
        [{"authorId": "2600961", "name": "S. Potter"}, {"authorId": "1700208", "name":
        "Jason Nieh"}, {"authorId": "46337582", "name": "Matt Selsky"}]}, {"paperId":
        "e252cdda5cae631f7b9510a76e5ff69aebc2d967", "externalIds": {"MAG": "1770984322",
        "DOI": "10.7916/D8BZ6DX4", "CorpusId": 61022762}, "corpusId": 61022762, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/e252cdda5cae631f7b9510a76e5ff69aebc2d967",
        "title": "Improving Virtual Appliances through Virtual Layered File Systems",
        "abstract": "The problem of managing computers is growing in complexity due
        to the increasing amount of physical and virtual computers that one has to
        administer as well as the varying roles that those computers fill. As each
        machine is effectively fully independent, the amount of work an administrator
        does scales linearly with the amount of machines. In order to solve this problem,
        we introduce Strata, a system that enables new ways of managing these many
        distinct installations. Strata enables many systems to be easily managed by
        introducing a virtual layered file system that composes individual software
        layers together into a single file system view. By providing the ability to
        share layers between installations, Strata eases the creation of independent
        systems and opens up new ways to use computers. We have implemented Strata
        on Linux without requiring any application or operating system kernel changes.
        Our measurements on real world applications demonstrate that Strata imposes
        little overhead.", "venue": "", "year": 2007, "referenceCount": 15, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
        "journal": {"volume": "", "name": ""}, "authors": [{"authorId": "2600961",
        "name": "S. Potter"}, {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId":
        "0e3f0e1278b314a2f5e23ef06c71c0e295e32b48", "externalIds": {"DBLP": "conf/podc/CapritaNS06",
        "MAG": "2106144697", "DOI": "10.1145/1146381.1146396", "CorpusId": 525172},
        "corpusId": 525172, "publicationVenue": {"id": "cce4d150-8211-4378-a9ef-a234ec19414c",
        "name": "ACM SIGACT-SIGOPS Symposium on Principles of Distributed Computing",
        "type": "conference", "alternate_names": ["PODC", "Princ Distrib Comput",
        "Principles of Distributed Computing", "ACM SIGACT-SIGOPS Symp Princ Distrib
        Comput"], "url": "http://www.podc.org/"}, "url": "https://www.semanticscholar.org/paper/0e3f0e1278b314a2f5e23ef06c71c0e295e32b48",
        "title": "Grouped distributed queues: distributed queue, proportional share
        multiprocessor scheduling", "abstract": "We present Grouped Distributed Queues
        (GDQ), the first proportional share scheduler for multiprocessor systems that
        scales well with a large number of processors and processes. GDQ uses a distributed
        queue architecture, and achieves accurate proportional fairness scheduling
        with only O(1) scheduling overhead. GDQ takes a novel approach to distributed
        queuing: instead of creating per-processor queues that need to be constantly
        balanced to achieve any measure of proportional sharing fairness, GDQ uses
        a simple grouping strategy to organize processes into groups based on similar
        processor time allocation rights, and then assigns processors to groups based
        on aggregate group shares. Group membership of processes is static, and fairness
        is achieved by dynamically migrating processors among groups. The set of processors
        working on a group use simple, low-overhead round-robin queues, while processor
        reallocation among groups is achieved using a new multiprocessor adaptation
        of Weighted Fair Queuing. By commoditizing processors and decoupling their
        allocation from process scheduling, GDQ provides, with only constant scheduling
        overhead, fairness within a constant of the ideal generalized processor sharing
        model for process weights with a fixed upper bound. We have implemented GDQ
        in Linux and measured its performance. Our experimental results show that
        GDQ has low overhead and scales well with the number of processors and processes.",
        "venue": "ACM SIGACT-SIGOPS Symposium on Principles of Distributed Computing",
        "year": 2006, "referenceCount": 20, "citationCount": 20, "influentialCitationCount":
        2, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2006-07-23", "journal":
        {"pages": "72-81"}, "authors": [{"authorId": "2827435", "name": "Bogdan Caprita"},
        {"authorId": "1700208", "name": "Jason Nieh"}, {"authorId": "1690758", "name":
        "C. Stein"}]}, {"paperId": "2dee1dc33195afc5c293f8176ae8473ba31826d8", "externalIds":
        {"MAG": "1654600904", "DOI": "10.7916/D8G167PV", "CorpusId": 742387}, "corpusId":
        742387, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/2dee1dc33195afc5c293f8176ae8473ba31826d8",
        "title": "Feasibility of Voice over IP on the Internet", "abstract": "VoIP
        (Voice over IP) services are using the Internet infrastructure to enable new
        forms of communication and collaboration. A growing number of VoIP service
        providers such as Skype, Vonage, Broadvoice, as well as many cable services
        are using the Internet to offer telephone services at much lower costs. However,
        VoIP services rely on the user\u2019s Internet connection, and this can often
        translate into lower quality communication. Overlay networks offer a potential
        solution to this problem by improving the default Internet routing and overcome
        failures. To assess the feasibility of using overlays to improve VoIP on the
        Internet, we have conducted a detailed experimental study to evaluate the
        benefits of using an overlay on PlanetLab nodes for improving voice communication
        connectivity and performance around the world. Our measurements demonstrate
        that an overlay architecture can significantly improve VoIP communication
        across most regions and provide their greatest benefit for locations with
        poorer default Internet connectivity. We explore overlay topologies and show
        that a small number of well-connected intermediate nodes is sufficient to
        improve VoIP performance. We show that there is significant variation over
        time in the best overlay routing paths and argue for the need for adaptive
        routing to account for this variation to deliver the best performance.", "venue":
        "", "year": 2006, "referenceCount": 21, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Business", "source": "s2-fos-model"}, {"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null,
        "publicationDate": null, "journal": {"volume": "", "name": ""}, "authors":
        [{"authorId": "2074258632", "name": "A. Sherman"}, {"authorId": "1700208",
        "name": "Jason Nieh"}, {"authorId": "1703537", "name": "Y. Freund"}]}, {"paperId":
        "3630c510be519563ba598c3ecbf6942954abcc72", "externalIds": {"MAG": "2187233280",
        "CorpusId": 61908344}, "corpusId": 61908344, "publicationVenue": null, "url":
        "https://www.semanticscholar.org/paper/3630c510be519563ba598c3ecbf6942954abcc72",
        "title": "Measuring and managing the remote client perceived response time
        for web transactions using server-side techniques", "abstract": "As businesses
        continue to grow their dependence on the World Wide Web, it is increasingly
        vital for them to accurately measure and manage response time of their Web
        services. This dissertation shows that it is possible to determine the remote
        client perceived response time for Web transactions using only server-side
        techniques and that doing so is useful and essential for the management of
        latency based service level agreements. \nFirst, we present Certes, a novel
        modeling algorithm, that accurately estimates connection establishment latencies
        as perceived by the remote clients, even in the presence of admission control
        drops. We present a non-linear optimization that models this effect and then
        we present an O(c) time and space online approximation algorithm. Second,
        we present ksniffer, an intelligent traffic monitor which accurately determines
        the pageview response times experienced by a remote client without any changes
        to existing systems or Web content. Novel algorithms for inferring the remote
        client perceived response time on a per pageview basis are presented which
        take into account network loss, RTT, and incomplete information. Third, we
        present Remote Latency-based Management (RLM), a system that controls the
        latencies experienced by the remote client by manipulating the packet traffic
        into and out of the Web server complex. RLM tracks the progress of each pageview
        download in real-time, as each embedded object is requested, making fine grained
        decisions on the processing of each request as it pertains to the overall
        pageview latency. RLM introduces fast SYN and SYN/ACID retransmission and
        embedded object rewrite and removal techniques to control the latency perceived
        by the remote client. \nWe have implemented these mechanisms in Linux and
        demonstrated their effectiveness across a wide-range of realistic workloads.
        Our experimental results demonstrate for the first time that server-side response
        time measurements can be done in real-time at giga-bit traffic rates to within
        5This is an order of magnitude better than common application-level techniques
        run at the Web server. Our results also demonstrate for the first time how
        both the mean and the shape of the per pageview client perceived response
        time distribution can be dynamically controlled at the server complex.", "venue":
        "", "year": 2006, "referenceCount": 115, "citationCount": 1, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": null, "journal": {"volume": "",
        "name": ""}, "authors": [{"authorId": "1700208", "name": "Jason Nieh"}, {"authorId":
        "1828237", "name": "D. Olshefski"}]}, {"paperId": "69a3aa909aec09f6a33631a266ac4b696c4664b5",
        "externalIds": {"MAG": "2108817692", "DBLP": "conf/www/KimBN06", "DOI": "10.1145/1135777.1135803",
        "CorpusId": 16869674}, "corpusId": 16869674, "publicationVenue": {"id": "e07422f9-c065-40c3-a37b-75e98dce79fe",
        "name": "The Web Conference", "type": "conference", "alternate_names": ["Web
        Conf", "WWW"], "url": "http://www.iw3c2.org/"}, "url": "https://www.semanticscholar.org/paper/69a3aa909aec09f6a33631a266ac4b696c4664b5",
        "title": "pTHINC: a thin-client architecture for mobile wireless web", "abstract":
        "Although web applications are gaining popularity on mobile wireless PDAs,
        web browsers on these systems can be quite slow and often lack adequate functionality
        to access many web sites. We have developed pTHINC, a PDA thin-client solution
        that leverages more powerful servers to run full-function web browsers and
        other application logic, then sends simple screen updates to the PDA for display.
        pTHINC uses server-side screen scaling to provide high-fidelity display and
        seamless mobility across a broad range of different clients and screen sizes,
        including both portrait and landscape viewing modes. pTHINC also leverages
        existing PDA control buttons to improve system usability and maximize available
        screen resolution for application display. We have implemented pTHINC on Windows
        Mobile and evaluated its performance on mobile wireless devices. Our results
        compared to local PDA web browsers and other thin-client approaches demonstrate
        that pTHINC provides superior web browsing performance and is the only PDA
        thin client that effectively supports crucial browser helper applications
        such as video playback.", "venue": "The Web Conference", "year": 2006, "referenceCount":
        15, "citationCount": 59, "influentialCitationCount": 1, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2006-05-23", "journal": {"pages": "143-152"}, "authors":
        [{"authorId": "2109221314", "name": "Joeng Kim"}, {"authorId": "2195399",
        "name": "Ricardo A. Baratto"}, {"authorId": "1700208", "name": "Jason Nieh"}]},
        {"paperId": "9bd7e19452c102069042971617e0b7a10aeef8ce", "externalIds": {"DBLP":
        "conf/sigmetrics/OlshefskiN06", "MAG": "2135478232", "DOI": "10.1145/1140277.1140305",
        "CorpusId": 8771748}, "corpusId": 8771748, "publicationVenue": null, "url":
        "https://www.semanticscholar.org/paper/9bd7e19452c102069042971617e0b7a10aeef8ce",
        "title": "Understanding the management of client perceived response time",
        "abstract": "Understanding and managing the response time of web services
        is of key importance as dependence on the World Wide Web continues to grow.
        We present Remote Latency-based Management (RLM), a novel server-side approach
        for managing pageview response times as perceived by remote clients, in real-time.
        RLM passively monitors server-side network traffic, accurately tracks the
        progress of page downloads and their response times in real-time, and dynamically
        adapts connection setup behavior and web page content as needed to meet response
        time goals. To manage client perceived pageview response times, RLM builds
        a novel event node model to guide the use of several techniques for manipulating
        the packet traffic in and out of a web server complex, including fast SYN
        and SYN/ACK retransmission, and embedded object removal and rewrite. RLM operates
        as a stand-alone appliance that simply sits in front of a web server complex,
        without any changes to existing web clients, servers, or applications. We
        have implemented RLM on an inexpensive, commodity, Linux-based PC and present
        experimental results that demonstrate its effectiveness in managing client
        perceived pageview response times on transactional e-commerce web workloads.",
        "venue": "SIGMETRICS ''06/Performance ''06", "year": 2006, "referenceCount":
        38, "citationCount": 39, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2006-06-26", "journal": {"pages": "240-251"}, "authors":
        [{"authorId": "1828237", "name": "D. Olshefski"}, {"authorId": "1700208",
        "name": "Jason Nieh"}]}, {"paperId": "add36c24029f050c751cb7f030de802e89795d09",
        "externalIds": {"MAG": "2149245215", "DBLP": "conf/compsac/PotterN06", "DOI":
        "10.1109/COMPSAC.2006.52", "CorpusId": 12289280}, "corpusId": 12289280, "publicationVenue":
        {"id": "e574da12-4e4c-4b78-a203-ae3719c0c4f7", "name": "Annual International
        Computer Software and Applications Conference", "type": "conference", "alternate_names":
        ["Comput Softw Appl Conf", "Annu Int Comput Softw Appl Conf", "COMPSAC Work",
        "Computer Software and Applications Conference", "COMPSAC Workshops", "COMPSAC"],
        "url": "http://www.wikicfp.com/cfp/program?id=548"}, "url": "https://www.semanticscholar.org/paper/add36c24029f050c751cb7f030de802e89795d09",
        "title": "Highly Reliable Mobile Desktop Computing in Your Pocket", "abstract":
        "We present DeskPod, a portable system that provides a highly reliable desktop
        computing environment for mobile users by leveraging rapid improvements in
        capacity, cost, and size of portable storage devices. DeskPod enables a user''s
        live computing environment to be suspended to portable storage, carried around,
        easily copied for fault-resilience, and resumed from the storage device to
        provide the user with the same persistent, personalized computing environment
        on another computer DeskPod achieves this by providing a virtualization and
        checkpoint/restart mechanism that decouples a desktop computing environment
        from any single hardware device so that it can be stored and executed anywhere,
        improving desktop computing reliability by eliminating a potential single
        point of failure. We have implemented a Linux DeskPod prototype and demonstrate
        its ability to quickly suspend and resume desktop sessions, enabling a seamless
        mobile experience", "venue": "Annual International Computer Software and Applications
        Conference", "year": 2006, "referenceCount": 11, "citationCount": 9, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2006-09-17",
        "journal": {"volume": "1", "pages": "247-254", "name": "30th Annual International
        Computer Software and Applications Conference (COMPSAC''06)"}, "authors":
        [{"authorId": "2600961", "name": "S. Potter"}, {"authorId": "1700208", "name":
        "Jason Nieh"}]}, {"paperId": "aeb049d0a1869827523689a7b8ccddff43aaec0c", "externalIds":
        {"MAG": "2089115820", "DBLP": "journals/tocs/LaiN06", "DOI": "10.1145/1132026.1132029",
        "CorpusId": 14480194}, "corpusId": 14480194, "publicationVenue": null, "url":
        "https://www.semanticscholar.org/paper/aeb049d0a1869827523689a7b8ccddff43aaec0c",
        "title": "On the performance of wide-area thin-client computing", "abstract":
        "While many application service providers have proposed using thin-client
        computing to deliver computational services over the Internet, little work
        has been done to evaluate the effectiveness of thin-client computing in a
        wide-area network. To assess the potential of thin-client computing in the
        context of future commodity high-bandwidth Internet access, we have used a
        novel, noninvasive slow-motion benchmarking technique to evaluate the performance
        of several popular thin-client computing platforms in delivering computational
        services cross-country over Internet2. Our results show that using thin-client
        computing in a wide-area network environment can deliver acceptable performance
        over Internet2, even when client and server are located thousands of miles
        apart on opposite ends of the country. However, performance varies widely
        among thin-client platforms and not all platforms are suitable for this environment.
        While many thin-client systems are touted as being bandwidth efficient, we
        show that network latency is often the key factor in limiting wide-area thin-client
        performance. Furthermore, we show that the same techniques used to improve
        bandwidth efficiency often result in worse overall performance in wide-area
        networks. We characterize and analyze the different design choices in the
        various thin-client platforms and explain which of these choices should be
        selected for supporting wide-area computing services.", "venue": "TOCS", "year":
        2006, "referenceCount": 53, "citationCount": 121, "influentialCitationCount":
        9, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2006-05-01", "journal":
        {"volume": "24", "pages": "175-209", "name": "ACM Trans. Comput. Syst."},
        "authors": [{"authorId": "145812029", "name": "A. Lai"}, {"authorId": "1700208",
        "name": "Jason Nieh"}]}, {"paperId": "beae55a7523354a298c84f3aeac1c99affa8156e",
        "externalIds": {"DBLP": "conf/IEEEscc/KimBN06", "MAG": "2100533386", "DOI":
        "10.1109/SCC.2006.18", "CorpusId": 9737510}, "corpusId": 9737510, "publicationVenue":
        {"id": "b198f59e-0da6-4b35-b995-a02322b9dada", "name": "IEEE International
        Conference on Services Computing", "type": "conference", "alternate_names":
        ["International Conference on Services Computing [Services Society]", "International
        Conference on Services Computing", "IEEE Int Conf Serv Comput", "Int Conf
        Serv Comput [services Soc", "SCC", "Int Conf Serv Comput", "IEEE SCC"], "url":
        "https://ieeexplore.ieee.org/xpl/conhome/1001209/all-proceedings"}, "url":
        "https://www.semanticscholar.org/paper/beae55a7523354a298c84f3aeac1c99affa8156e",
        "title": "An Application Streaming Service for Mobile Handheld Devices", "abstract":
        "Mobile handheld devices such as PDAs and smartphones are increasingly being
        used by service providers to deliver application functionality similar to
        that found in traditional desktop computing environments. However, these handheld
        applications can be quite slow and often lack important functionality compared
        to their desktop counterparts. We have developed PASSPORT, (PDA application
        streaming service portal) a thin-client solution that leverages more powerful
        servers to run full-function desktop applications and then simply stream screen
        updates to the PDA for display. PASSPORT uses server-side screen scaling to
        provide high-fidelity display and seamless mobility across a broad range of
        different clients and screen sizes, including both portrait and landscape
        viewing modes. PASSPORT also leverages existing PDA control buttons to improve
        system usability and maximize available screen resolution for application
        display. We have implemented PASSPORT on Windows PDAs and demonstrate that
        it can provide superior application performance and functionality compared
        to the traditional approach of running applications directly on handheld devices",
        "venue": "IEEE International Conference on Services Computing", "year": 2006,
        "referenceCount": 12, "citationCount": 14, "influentialCitationCount": 0,
        "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2006-09-18",
        "journal": {"pages": "323-326", "name": "2006 IEEE International Conference
        on Services Computing (SCC''06)"}, "authors": [{"authorId": "2109221314",
        "name": "Joeng Kim"}, {"authorId": "2195399", "name": "Ricardo A. Baratto"},
        {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId": "fa5f774097555dd29f7cbb8b47003e239b1d9375",
        "externalIds": {"MAG": "1569482730", "DOI": "10.7916/D8B85H1F", "CorpusId":
        8639963}, "corpusId": 8639963, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/fa5f774097555dd29f7cbb8b47003e239b1d9375",
        "title": "A Case for P2P Delivery of Paid Content", "abstract": "P2P file
        sharing provides a powerful content distribution model by leveraging users\u2019
        computing and bandwidth resources. However, companies have been reluctant
        to rely on P2P systems for paid content distribution due to their inability
        to limit the exploitation of these systems for free file sharing. We present
        TP2, a system that combines the more cost-effective and scalable distribution
        capabilities of P2P systems with a level of trust and control over content
        distribution similar to direct download content delivery networks. TP2 uses
        two key mechanisms that can be layered on top of existing P2P systems. First,
        it provides strong authentication to prevent free file sharing in the system.
        Second, it introduces a new notion of trusted auditors to detect and limit
        malicious attempts to gain information about participants in the system to
        facilitate additional out-of-band free file sharing. We analyze TP2 by modeling
        it as a novel game between malicious users who try to form free file sharing
        clusters and trusted auditors who curb the growth of such clusters. Our analysis
        shows that a small fraction of trusted auditors is sufficient to protect the
        P2P system against unauthorized file sharing. Using a simple economic model,
        we further show that TP2 provides a more cost-effective content distribution
        solution, resulting in higher profits for a content provider even in the presence
        of a large percentage of malicious users. Finally, we implemented TP2 on top
        of BitTorrent and use PlanetLab to show that our system can provide trusted
        P2P file sharing with negligible performance overhead.", "venue": "", "year":
        2006, "referenceCount": 11, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Engineering"],
        "s2FieldsOfStudy": [{"category": "Engineering", "source": "external"}, {"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null,
        "publicationDate": null, "journal": {"volume": "", "name": ""}, "authors":
        [{"authorId": "2074258632", "name": "A. Sherman"}, {"authorId": "1709571",
        "name": "A. Stavrou"}, {"authorId": "1700208", "name": "Jason Nieh"}, {"authorId":
        "1690758", "name": "C. Stein"}, {"authorId": "1720824", "name": "A. Keromytis"}]},
        {"paperId": "104c67cd413008b4370d4cca320db096dc426339", "externalIds": {"MAG":
        "1567657247", "DBLP": "conf/ndss/StavrouKNMR05", "DOI": "10.7916/D8ZW1W9V",
        "CorpusId": 11627960}, "corpusId": 11627960, "publicationVenue": {"id": "e6904c24-9546-4135-8344-e3999e375558",
        "name": "Network and Distributed System Security Symposium", "type": "conference",
        "alternate_names": ["Netw Distrib Syst Secur Symp", "NDSS"], "url": "http://www.isoc.org/"},
        "url": "https://www.semanticscholar.org/paper/104c67cd413008b4370d4cca320db096dc426339",
        "title": "MOVE: An End-to-End Solution to Network Denial of Service", "abstract":
        "We present a solution to the denial of service (DoS) problem that does not
        rely on network infrastructure support, conforming to the end-to-end (e2e)
        design principle. Our approach is to combine an overlay network, which allows
        us to treat authorized traffic preferentially, with a lightweight process-migration
        environment that allows us to move services easily between different parts
        of a distributed system. Functionality residing on a part of the system that
        is subjected to a DoS attack migrates to an unaffected location. The overlay
        network ensures that traffic from legitimate users, who are authenticated
        before they are allowed to access the service, is routed to the new location.
        We demonstrate the feasibility and effectiveness of our approach by measuring
        the performance of an experimental prototype against a series of attacks using
        PlanetLab, a distributed experimental testbed. Our preliminary results show
        that the end-toend latency remains at acceptable levels during regular operation,
        increasing only by a factor of 2 to 3, even for large overlays. When a process
        migrates due to a DoS attack, the disruption of service for the end user is
        in the order of a few seconds, depending on the network proximity of the servers
        involved in the migration.", "venue": "Network and Distributed System Security
        Symposium", "year": 2005, "referenceCount": 60, "citationCount": 61, "influentialCitationCount":
        2, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": null,
        "journal": {"volume": "", "pages": "81-96", "name": ""}, "authors": [{"authorId":
        "1709571", "name": "A. Stavrou"}, {"authorId": "1720824", "name": "A. Keromytis"},
        {"authorId": "1700208", "name": "Jason Nieh"}, {"authorId": "145502289", "name":
        "V. Misra"}, {"authorId": "1926685", "name": "D. Rubenstein"}]}, {"paperId":
        "13624d2ca68720ac1a5d1ef3df597c352f146fb9", "externalIds": {"MAG": "2698342436",
        "DBLP": "conf/ancs/CapritaNC05", "DOI": "10.1145/1095890.1095896", "CorpusId":
        6124282}, "corpusId": 6124282, "publicationVenue": {"id": "d004c406-1bed-49fd-a0b1-e46b928f0754",
        "name": "Symposium on Architectures for Networking and Communications Systems",
        "type": "conference", "alternate_names": ["Symp Archit Netw Commun Syst",
        "Architectures for Networking and Communications Systems", "ANCS", "Archit
        Netw Commun Syst"], "url": "http://www.wikicfp.com/cfp/program?id=171"}, "url":
        "https://www.semanticscholar.org/paper/13624d2ca68720ac1a5d1ef3df597c352f146fb9",
        "title": "Group round robin", "abstract": "We present group round-robin (GRR)
        scheduling, a hybrid fair packet scheduling framework based on a grouping
        strategy that narrows down the traditional trade-off between fairness and
        computational complexity. GRR combines its grouping strategy with a specialized
        round-robin scheduling algorithm that utilizes the properties of GRR groups
        to schedule flows within groups in a manner that provides O(1) bounds on fairness
        with only O(1) time complexity. Under the practical assumption that GRR employs
        a small constant number of groups, we apply GRR to popular fair queuing scheduling
        algorithms and show how GRR can be used to achieve constant bounds on fairness
        and time complexity for these algorithms. We also present and prove new results
        on the fairness bounds for several of these fair queuing algorithms using
        a consistent fairness measure. We analyze the behavior of GRR and present
        experimental results that demonstrate how GRR can be combined with existing
        scheduling algorithms to provide much lower scheduling overhead and more than
        an order of magnitude better scheduling accuracy in practice than scheduling
        algorithms without GRR.", "venue": "Symposium on Architectures for Networking
        and Communications Systems", "year": 2005, "referenceCount": 33, "citationCount":
        17, "influentialCitationCount": 1, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2005-10-01", "journal": {"pages": "29-40", "name": "2005 Symposium on Architectures
        for Networking and Communications Systems (ANCS)"}, "authors": [{"authorId":
        "2827435", "name": "Bogdan Caprita"}, {"authorId": "1700208", "name": "Jason
        Nieh"}, {"authorId": "2502738", "name": "W. C. Chan"}]}, {"paperId": "359928dfca1eb50ea392a266c6425bca9a9874db",
        "externalIds": {"DBLP": "conf/cluster/LaadanPN05", "MAG": "2117508157", "DOI":
        "10.1109/CLUSTR.2005.347039", "CorpusId": 13328931}, "corpusId": 13328931,
        "publicationVenue": {"id": "0be0e7dd-a7b1-46dc-abb3-5226ed0e2289", "name":
        "IEEE International Conference on Cluster Computing", "type": "conference",
        "alternate_names": ["Int Conf Clust Comput", "IEEE Int Conf Clust Comput",
        "International Conference on Cluster Computing", "CLUSTER"], "url": "http://www.clustercomp.org/"},
        "url": "https://www.semanticscholar.org/paper/359928dfca1eb50ea392a266c6425bca9a9874db",
        "title": "Transparent Checkpoint-Restart of Distributed Applications on Commodity
        Clusters", "abstract": "We have created ZapC, a novel system for transparent
        coordinated checkpoint-restart of distributed network applications on commodity
        clusters. ZapC provides a thin visualization layer on top of the operating
        system that decouples a distributed application from dependencies on the cluster
        nodes on which it is executing. This decoupling enables ZapC to checkpoint
        an entire distributed application across all nodes in a coordinated manner
        such that it can he restarted from the checkpoint on a different set of cluster
        nodes at a later time. ZapC checkpoint-restart operations execute in parallel
        across different cluster nodes, providing faster checkpoint-restart performance.
        ZapC uniquely supports network state in a transport protocol independent manner,
        including correctly saving and restoring socket and protocol state for both
        TCP and UDP connections. We have implemented a ZapC Linux prototype and demonstrate
        that it provides low visualization overhead and fast checkpoint-restart times
        for distributed network applications without any application, library, kernel,
        or network protocol modifications", "venue": "IEEE International Conference
        on Cluster Computing", "year": 2005, "referenceCount": 34, "citationCount":
        47, "influentialCitationCount": 3, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
        "publicationDate": "2005-09-01", "journal": {"pages": "1-13", "name": "2005
        IEEE International Conference on Cluster Computing"}, "authors": [{"authorId":
        "1684343", "name": "Oren Laadan"}, {"authorId": "1969471", "name": "Dan B.
        Phung"}, {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId": "369699cb9e83032b6de03deb02a1029dee4ae030",
        "externalIds": {"DOI": "10.1145/1047344.1047508", "CorpusId": 58006306}, "corpusId":
        58006306, "publicationVenue": {"id": "2c9ecac6-f875-4a9b-acc2-10bd9f6782df",
        "name": "Technical Symposium on Computer Science Education", "type": "conference",
        "alternate_names": ["SIGCSE", "Tech Symp Comput Sci Educ"], "url": "http://www.sigcse.org/"},
        "url": "https://www.semanticscholar.org/paper/369699cb9e83032b6de03deb02a1029dee4ae030",
        "title": "Experiences teaching operating systems using virtual platforms and
        linux", "abstract": "Operating system courses teach students much more when
        they provide hands-on kernel-level project experience with a real operating
        system. However, enabling a large class of students to do kernel development
        can be difficult. To address this problem, we created a virtual kernel development
        environment in which operating systems can be developed, debugged, and rebooted
        in a shared computer facility without affecting other users. Using virtual
        machines and remote display technology, our virtual kernel development laboratory
        enables even distance learning students at remote locations to participate
        in kernel development projects with on-campus students. We have successfully
        deployed and used our virtual kernel development environment together with
        the open-source Linux kernel to provide kernel-level project experiences for
        over nine hundred students in the introductory operating system course at
        Columbia University.", "venue": "Technical Symposium on Computer Science Education",
        "year": 2005, "referenceCount": 0, "citationCount": 1, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
        null, "publicationDate": null, "journal": null, "authors": [{"authorId": "1700208",
        "name": "Jason Nieh"}, {"authorId": "2596531", "name": "Chris Vaill"}]}, {"paperId":
        "465c79de132a7179d8a0098908d0cc66b3be9494", "externalIds": {"DBLP": "conf/icac/PotterN05",
        "MAG": "1566130198", "DOI": "10.1109/ICAC.2005.16", "CorpusId": 957028}, "corpusId":
        957028, "publicationVenue": {"id": "28a83bf1-b6e5-416f-8c5a-fdc53e54f3a1",
        "name": "International Conference on Automation and Computing", "type": "conference",
        "alternate_names": ["IEEE International Conference on Autonomic Computing",
        "IEEE Int Conf Auton Comput", "Int Conf Autom Comput", "ICAC", "International
        Conference on Autonomic Computing", "Int Conf Auton Comput"], "url": "http://www.wikicfp.com/cfp/program?id=1269",
        "alternate_urls": ["https://acsos.github.io/"]}, "url": "https://www.semanticscholar.org/paper/465c79de132a7179d8a0098908d0cc66b3be9494",
        "title": "AutoPod: Unscheduled System Updates with Zero Data Loss", "abstract":
        "Patching, upgrading, and maintaining operating system software is a growing
        management complexity problem that can result in unacceptable system downtime.
        We introduce AutoPod, a system that enables unscheduled operating system updates
        while preserving application service availability. AutoPod provides a group
        of processes and associated users with an isolated machine-independent virtualized
        environment that is decoupled from the underlying operating system instance.
        This virtualized environment is integrated with a novel checkpoint-restart
        mechanism which allows processes to be suspended, resumed, and migrated across
        operating system kernel versions with different security and maintenance patches.
        AutoPod incorporates a system status service to determine when operating system
        patches need to be applied to the current host, then automatically migrates
        application services to another host to preserve their availability while
        the current host is updated and rebooted", "venue": "International Conference
        on Automation and Computing", "year": 2005, "referenceCount": 4, "citationCount":
        20, "influentialCitationCount": 1, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
        "publicationDate": "2005-06-13", "journal": {"pages": "367-368", "name": "Second
        International Conference on Autonomic Computing (ICAC''05)"}, "authors": [{"authorId":
        "2600961", "name": "S. Potter"}, {"authorId": "1700208", "name": "Jason Nieh"}]},
        {"paperId": "967a4a1d8bf1ef13051c6aa75d4c2348fe60b7d2", "externalIds": {"DBLP":
        "conf/sigcse/NiehV05", "MAG": "1996063432", "DOI": "10.1145/1131322.1131323",
        "CorpusId": 8765207}, "corpusId": 8765207, "publicationVenue": null, "url":
        "https://www.semanticscholar.org/paper/967a4a1d8bf1ef13051c6aa75d4c2348fe60b7d2",
        "title": "Experiences teaching operating systems using virtual platforms and
        Linux", "abstract": "Operating system courses teach students much more when
        they provide hands-on kernel-level project experience with a real operating
        system. However, enabling a large class of students to do kernel development
        can be difficult. To address this problem, we created a virtual kernel development
        environment in which operating systems can be developed, debugged, and rebooted
        in a shared computer facility without affecting other users. Using virtual
        machines and remote display technology, our virtual kernel development laboratory
        enables even distance learning students at remote locations to participate
        in kernel development projects with on-campus students. We have successfully
        deployed and used our virtual kernel development environment together with
        the open-source Linux kernel to provide kernel-level project experiences for
        over nine hundred students in the introductory operating system course at
        Columbia University.", "venue": "OPSR", "year": 2005, "referenceCount": 10,
        "citationCount": 71, "influentialCitationCount": 1, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2005-02-23", "journal": {"pages": "520-524"}, "authors":
        [{"authorId": "1700208", "name": "Jason Nieh"}, {"authorId": "2596531", "name":
        "Chris Vaill"}]}, {"paperId": "98c65de3be218534fdf7a3eb9a1a936c3a5f147a",
        "externalIds": {"MAG": "2185895087", "DOI": "10.1007/0-387-27727-7_15", "CorpusId":
        58477759}, "corpusId": 58477759, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/98c65de3be218534fdf7a3eb9a1a936c3a5f147a",
        "title": "Web Content Delivery Using Thin-Client Computing", "abstract": null,
        "venue": "", "year": 2005, "referenceCount": 22, "citationCount": 3, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": null, "journal": {"volume": "",
        "pages": "325-345", "name": ""}, "authors": [{"authorId": "145812029", "name":
        "A. Lai"}, {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId": "c66d9503817cacab0238d71b73adacb17f9d82bd",
        "externalIds": {"DBLP": "journals/usenix-login/PotterN05", "MAG": "615071635",
        "CorpusId": 57661900}, "corpusId": 57661900, "publicationVenue": {"id": "98c61acc-a8fc-4fde-a125-33bbfd87206e",
        "name": "Login: The Usenix Magazine", "type": "journal", "alternate_names":
        ["login - The Usenix Magazine", "login  Usenix Mag", "Login Usenix Mag"],
        "issn": "1044-6397", "alternate_issns": ["2169-9364"], "url": "https://www.usenix.org/publications/login/",
        "alternate_urls": ["https://www.usenix.org/publications/login"]}, "url": "https://www.semanticscholar.org/paper/c66d9503817cacab0238d71b73adacb17f9d82bd",
        "title": "Breaking the Ties That Bind: Application Isolation and Migration",
        "abstract": null, "venue": "Login: The Usenix Magazine", "year": 2005, "referenceCount":
        0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}], "publicationTypes":
        ["JournalArticle"], "publicationDate": null, "journal": {"volume": "30", "name":
        "login Usenix Mag."}, "authors": [{"authorId": "2600961", "name": "S. Potter"},
        {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId": "c9791a4fa39452810f67e84fed3727f7ac3cd13f",
        "externalIds": {"MAG": "1496123721", "DOI": "10.7916/D89S21CV", "CorpusId":
        9753588}, "corpusId": 9753588, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/c9791a4fa39452810f67e84fed3727f7ac3cd13f",
        "title": "FlowPuter: A Cluster Architecture Unifying Switch, Server and Storage
        Processing", "abstract": "We present a novel cluster architecture that unifies
        switch, server and storage processing to achieve a level of price-performance
        and simplicity of application development not achievable with current architectures.
        Our architecture takes advantage of the increasing disparity between storage
        capacity, network switching on the one hand, and processing power of modern
        processors and architectures on the other. We propose the use of Network Processors
        (NPUs), which can apply simple classify/act/forward operations on data packets
        at wire speeds, to split processing of operations such as complex database
        queries across a network. We quantify the theoretical benefits of such an
        architecture over traditional server-cluster approaches using warehouse database
        queries as a motivating application. We also discuss the challenges such an
        architecture presents to programming language design and implementation, performance
        analysis, and security.", "venue": "", "year": 2005, "referenceCount": 20,
        "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
        null, "journal": {"volume": "", "name": ""}, "authors": [{"authorId": "1715952",
        "name": "A. Aho"}, {"authorId": "1720824", "name": "A. Keromytis"}, {"authorId":
        "145502289", "name": "V. Misra"}, {"authorId": "1700208", "name": "Jason Nieh"},
        {"authorId": "144812095", "name": "K. A. Ross"}, {"authorId": "1729751", "name":
        "Y. Yemini"}]}, {"paperId": "d4101710a4aa68e904d056147806d4a745867eec", "externalIds":
        {"DBLP": "conf/lisa/PotterN05", "MAG": "75318940", "CorpusId": 10530296},
        "corpusId": 10530296, "publicationVenue": {"id": "df661677-e13a-4a52-a5d0-e9d919dd50cf",
        "name": "LiSA", "type": "journal", "alternate_names": ["USENIX Large Install
        Syst Adm Conf", "USENIX Large Installation Systems Administration Conference",
        "LISA"], "issn": "1340-8836", "url": "http://www.wikicfp.com/cfp/program?id=11962"},
        "url": "https://www.semanticscholar.org/paper/d4101710a4aa68e904d056147806d4a745867eec",
        "title": "Reducing Downtime Due to System Maintenance and Upgrades (Awarded
        Best Student Paper!)", "abstract": "Patching, upgrading, and maintaining operating
        system software is a growing management complexity problem that can result
        in unacceptable system downtime. We introduce AutoPod, a system that enables
        unscheduled operating system updates while preserving application service
        availability. AutoPod provides a group of processes and associated users with
        an isolated machine-independent virtualized environment that is decoupled
        from the underlying operating system instance. This virtualized environment
        is integrated with a novel checkpoint-restart mechanism which allows processes
        to be suspended, resumed, and migrated across operating system kernel versions
        with different security and maintenance patches. \n \nAutoPod incorporates
        a system status service to determine when operating system patches need to
        be applied to the current host, then automatically migrates application services
        to another host to preserve their availability while the current host is updated
        and rebooted. We have implemented AutoPod on Linux without requiring any application
        or operating system kernel changes. Our measurements on real world desktop
        and server applications demonstrate that AutoPod imposes little overhead and
        provides sub-second suspend and resume times that can be an order of magnitude
        faster than starting applications after a system reboot. AutoPod enables systems
        to autonomically stay updated with relevant maintenance and security patches,
        while ensuring no loss of data and minimizing service disruption.", "venue":
        "LiSA", "year": 2005, "referenceCount": 31, "citationCount": 41, "influentialCitationCount":
        2, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science", "Engineering"], "s2FieldsOfStudy": [{"category": "Computer Science",
        "source": "external"}, {"category": "Engineering", "source": "external"},
        {"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
        ["JournalArticle"], "publicationDate": "2005-12-04", "journal": {"pages":
        "47-62"}, "authors": [{"authorId": "2600961", "name": "S. Potter"}, {"authorId":
        "1700208", "name": "Jason Nieh"}]}, {"paperId": "f260606d743bcf066eaf7a3c99c41fc10d39a822",
        "externalIds": {"MAG": "2163744006", "DBLP": "conf/usenix/CapritaCNSZ05",
        "DOI": "10.7916/D8M61T4S", "CorpusId": 6945875}, "corpusId": 6945875, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/f260606d743bcf066eaf7a3c99c41fc10d39a822",
        "title": "Group Ratio Round-Robin: O(1) Proportional Share Scheduling for
        Uniprocessor and Multiprocessor Systems", "abstract": "We present Group Ratio
        Round-Robin (GR3), the first proportional share scheduler that combines accurate
        proportional fairness scheduling behavior with O(1) scheduling overhead on
        both uniprocessor and multiprocessor systems. GR3 uses a simple grouping strategy
        to organize clients into groups of similar processor allocations which can
        be more easily scheduled. Using this strategy, GR3 combines the benefits of
        low overhead round-robin execution with a novel ratio-based scheduling algorithm.
        GR3 introduces a novel frontlog mechanism and weight readjustment algorithm
        to operate effectively on multiprocessors. GR3 provides fairness within a
        constant factor of the ideal generalized processor sharing model for client
        weights with a fixed upper bound and preserves its fairness properties on
        multiprocessor systems. We have implemented GR3 in Linux and measured its
        performance. Our experimental results show that GR3 provides much lower scheduling
        overhead and much better scheduling accuracy than other schedulers commonly
        used in research and practice.", "venue": "USENIX Annual Technical Conference,
        General Track", "year": 2005, "referenceCount": 41, "citationCount": 75, "influentialCitationCount":
        4, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2005-04-10",
        "journal": {"pages": "337-352"}, "authors": [{"authorId": "2827435", "name":
        "Bogdan Caprita"}, {"authorId": "2502738", "name": "W. C. Chan"}, {"authorId":
        "1700208", "name": "Jason Nieh"}, {"authorId": "1690758", "name": "C. Stein"},
        {"authorId": "31969154", "name": "Haoqiang Zheng"}]}, {"paperId": "f522222a16bddbe7a9ec0029f93e589e89712597",
        "externalIds": {"DBLP": "conf/www/PotterN05", "MAG": "2122287582", "DOI":
        "10.1145/1060745.1060833", "CorpusId": 15921969}, "corpusId": 15921969, "publicationVenue":
        {"id": "e07422f9-c065-40c3-a37b-75e98dce79fe", "name": "The Web Conference",
        "type": "conference", "alternate_names": ["Web Conf", "WWW"], "url": "http://www.iw3c2.org/"},
        "url": "https://www.semanticscholar.org/paper/f522222a16bddbe7a9ec0029f93e589e89712597",
        "title": "WebPod: persistent Web browsing sessions with pocketable storage
        devices", "abstract": "We present WebPod, a portable system that enables mobile
        users to use the same persistent, personalized web browsing session on any
        Internet-enabled device. No matter what computer is being used, WebPod provides
        a consistent browsing session, maintaining all of a user''s plugins, bookmarks,
        browser web content, open browser windows, and browser configuration options
        and preferences. This is achieved by leveraging rapid improvements in capacity,
        cost, and size of portable storage devices. WebPod provides a virtualization
        and checkpoint/restart mechanism that decouples the browsing environment from
        the host, enabling web browsing sessions to be suspended to portable storage,
        carried around, and resumed from the storage device on another computer. WebPod
        virtualization also isolates web browsing sessions from the host, protecting
        the browsing privacy of the user and preventing malicious web content from
        damaging the host. We have implemented a Linux WebPod prototype and demonstrate
        its ability to quickly suspend and resume web browsing sessions, enabling
        a seamless web browsing experience for mobile users as they move among computers.",
        "venue": "The Web Conference", "year": 2005, "referenceCount": 26, "citationCount":
        16, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2005-05-10", "journal": {"pages": "603-612"}, "authors": [{"authorId": "2600961",
        "name": "S. Potter"}, {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId":
        "fb7a756e451eb24ef74fba423bffb9b606fc44f8", "externalIds": {"MAG": "2126527025",
        "DBLP": "conf/sosp/BarattoKN05", "DOI": "10.1145/1095810.1095837", "CorpusId":
        723321}, "corpusId": 723321, "publicationVenue": {"id": "6c6fcaa9-fd25-488b-8050-995227ac671c",
        "name": "Symposium on Operating Systems Principles", "type": "conference",
        "alternate_names": ["Symp Oper Syst Princ", "SOSP"], "url": "http://sosp.org/"},
        "url": "https://www.semanticscholar.org/paper/fb7a756e451eb24ef74fba423bffb9b606fc44f8",
        "title": "THINC: a virtual display architecture for thin-client computing",
        "abstract": "Rapid improvements in network bandwidth, cost, and ubiquity combined
        with the security hazards and high total cost of ownership of personal computers
        have created a growing market for thin-client computing. We introduce THINC,
        a virtual display architecture for high-performance thin-client computing
        in both LAN and WAN environments. THINC virtualizes the display at the device
        driver interface to transparently intercept application display commands and
        translate them into a few simple low-level commands that can be easily supported
        by widely used client hardware. THINC''s translation mechanism efficiently
        leverages display semantic information through novel optimizations such as
        offscreen drawing awareness, native video support, and server-side screen
        scaling. This is integrated with an update delivery architecture that uses
        shortest command first scheduling and non-blocking operation. THINC leverages
        existing display system functionality and works seamlessly with unmodified
        applications, window systems, and operating systems.We have implemented THINC
        in an X/Linux environment and compared its performance against widely used
        commercial approaches, including Citrix MetaFrame, Microsoft RDP, GoToMyPC,
        X, NX, VNC, and Sun Ray. Our experimental results on web and audio/video applications
        demonstrate that THINC can provide up to 4.8 times faster web browsing performance
        and two orders of magnitude better audio/video performance. THINC is the only
        thin client capable of transparently playing full-screen video and audio at
        full frame rate in both LAN and WAN environments. Our results also show for
        the first time that thin clients can even provide good performance using remote
        clients located in other countries around the world.", "venue": "Symposium
        on Operating Systems Principles", "year": 2005, "referenceCount": 34, "citationCount":
        167, "influentialCitationCount": 11, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2005-10-23", "journal": {"pages": "277-290"}, "authors": [{"authorId": "2195399",
        "name": "Ricardo A. Baratto"}, {"authorId": "39677916", "name": "Leonard N.
        Kim"}, {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId": "007d530ea71264fd36323ebcadf8ecafe20ac578",
        "externalIds": {"MAG": "2159253693", "DBLP": "conf/nsdi/ZhengN04", "DOI":
        "10.7916/D8N58V8M", "CorpusId": 5320482}, "corpusId": 5320482, "publicationVenue":
        {"id": "38e1b942-a62d-4d74-8e5d-677db6ed425f", "name": "Symposium on Networked
        Systems Design and Implementation", "type": "conference", "alternate_names":
        ["NSDI", "Symp Networked Syst Des Implement", "Networked Systems Design and
        Implementation", "Networked Syst Des Implement"]}, "url": "https://www.semanticscholar.org/paper/007d530ea71264fd36323ebcadf8ecafe20ac578",
        "title": "SWAP: A Scheduler with Automatic Process Dependency Detection",
        "abstract": "We have developed SWAP, a system that automatically detects process
        dependencies and accounts for such dependencies in scheduling. SWAP uses system
        call history to determine possible resource dependencies among processes in
        an automatic and fully transparent fashion. Because some dependencies cannot
        be precisely determined, SWAP associates confidence levels with dependency
        information that are dynamically adjusted using feedback from process blocking
        behavior. SWAP can schedule processes using this imprecise dependency information
        in a manner that is compatible with existing scheduling mechanisms and ensures
        that actual scheduling behavior corresponds to the desired scheduling policy
        in the presence of process dependencies. We have implemented SWAP in Linux
        and measured its effectiveness on microbenchmarks and real applications. Our
        results show that SWAP has low overhead, effectively solves the priority inversion
        problem and can provide substantial improvements in system performance in
        scheduling processes with dependencies.", "venue": "Symposium on Networked
        Systems Design and Implementation", "year": 2004, "referenceCount": 37, "citationCount":
        22, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
        "publicationDate": "2004-03-29", "journal": {"pages": "183-196"}, "authors":
        [{"authorId": "31969154", "name": "Haoqiang Zheng"}, {"authorId": "1700208",
        "name": "Jason Nieh"}]}, {"paperId": "1a2ff6a4c321174d26eacbd63c8b67f48077077c",
        "externalIds": {"DBLP": "conf/www/LaiNBNSV04", "MAG": "1980331645", "DOI":
        "10.1145/988672.988692", "CorpusId": 16075300}, "corpusId": 16075300, "publicationVenue":
        {"id": "e07422f9-c065-40c3-a37b-75e98dce79fe", "name": "The Web Conference",
        "type": "conference", "alternate_names": ["Web Conf", "WWW"], "url": "http://www.iw3c2.org/"},
        "url": "https://www.semanticscholar.org/paper/1a2ff6a4c321174d26eacbd63c8b67f48077077c",
        "title": "Improving web browsing performance on wireless pdas using thin-client
        computing", "abstract": "Web applications are becoming increasingly popular
        for mobile wireless PDAs. However, web browsing on these systems can be quite
        slow. An alternative approach is handheld thin-client computing, in which
        the web browser and associated application logic run on a server, which then
        sends simple screen updates to thePDA for display. To assess the viability
        of this thin-client approach, we compare the web browsing performance of thin
        clients against fat clients that run the web browser locally on a PDA. Our
        results show that thin clients can provide better web browsing performance
        compared to fat clients, both in terms of speed and ability to correctly display
        web content. Surprisingly, thin clients are faster even when having to send
        more data over the network. We characterize and analyze different design choices
        in various thin-client systems and explain why these approaches can yield
        superior web browsing performance on mobile wireless PDAs.", "venue": "The
        Web Conference", "year": 2004, "referenceCount": 34, "citationCount": 25,
        "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
        "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
        Science", "source": "external"}, {"category": "Computer Science", "source":
        "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2004-05-17", "journal": {"pages": "143-154"}, "authors": [{"authorId": "145812029",
        "name": "A. Lai"}, {"authorId": "1700208", "name": "Jason Nieh"}, {"authorId":
        "3271357", "name": "Bhagyashree Bohra"}, {"authorId": "2401727", "name": "Vijayarka
        Nandikonda"}, {"authorId": "1942475", "name": "Abhishek P. Surana"}, {"authorId":
        "2326750", "name": "Suchita Varshneya"}]}, {"paperId": "1df1ac4b7641771f0d543e184c151d29cf32260a",
        "externalIds": {"MAG": "179248534", "CorpusId": 11768780}, "corpusId": 11768780,
        "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/1df1ac4b7641771f0d543e184c151d29cf32260a",
        "title": "Move: mobility with persistent network connections", "abstract":
        "The combined force behind ubiquitous mobile computing and storage devices
        and universal network access has created a unique era of mobile network computing,
        in which computation units ranging from a single process to an entire host
        can move while communicating with each other across the network. A key problem
        therefore is how to preserve the ongoing network communication between two
        computation units when they move from one place to another; because current
        network infrastructure and protocols are designed to support stationary communication
        endpoints only. \nWe have developed MOVE, a fine-grain end-to-end connection
        migration architecture, to address the problem. The most distinguishing characteristic
        of MOVE is that MOVE achieves, in a single system, several essential goals
        of a mobile communication architecture including: (1)\u00a0entirely end system
        only without any infrastructure demand, transport protocol independence, and
        backward compatibility; (2)\u00a0fine-grain connection migration and unlimited
        mobility scope; (3)\u00a0secure migration with both handoff and suspension/resumption
        support; and (4)\u00a0very low performance overhead both before and after
        migration. \nWe first analyze the key technical problems of end-to-end network
        communication caused by mobility: state inconsistency, conflict, and synchronization;
        and we develop a simple and elegant namespace abstraction called CELL to resolve
        these problems. CELL provides a virtual, private, and labeled namespace for
        individual connection states so that they can be transparently migrated anywhere
        free of the problems mentioned above. We then develop a unique handoff signaling
        protocol called H2O, which can handoff a connection securely in a single one-way
        end-to-end trip with minimal impact on the connection characteristics perceived
        by the transport protocols. H2O achieves this by combining the simple connection
        redirection mechanism afforded by the CELL abstraction with a low-overhead
        security mechanism, which is based on Diffie-Hellman protocol but computes
        session keys only at migration time. We finally integrate MOVE seamlessly
        with a process migration mechanism to fully exploit MOVE''s fine-grain connection
        migration capability and enable support for new application scenarios. For
        example, we show how the integration can provide high service availability
        in proxy-based server clusters by allowing server applications and their persistent
        connections to be migrated during a server maintenance to avoid service disruption.
        (Abstract shortened by UMI.)", "venue": "", "year": 2004, "referenceCount":
        102, "citationCount": 16, "influentialCitationCount": 1, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
        null, "journal": {"volume": "", "name": ""}, "authors": [{"authorId": "1700208",
        "name": "Jason Nieh"}, {"authorId": "1758428", "name": "Gong Su"}]}, {"paperId":
        "1ececfd1b84eb9ec52b350a84a959dec164d1372", "externalIds": {"MAG": "1542636450",
        "DOI": "10.7916/D87W6M1B", "CorpusId": 12106366}, "corpusId": 12106366, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/1ececfd1b84eb9ec52b350a84a959dec164d1372",
        "title": "THINC: A Remote Display Architecture for Thin-Client Computing",
        "abstract": "Rapid improvements in network bandwidth, cost, and ubiquity combined
        with the security hazards and high total cost of ownership of personal computers
        have created a growing market for thin-client computing. We introduce THINC,
        a remote display system architecture for high-performance thin-client computing
        in both LAN and WAN environments. THINC transparently maps high-level application
        display calls to a few simple low-level commands which can be implemented
        easily and efficiently. THINC introduces a number of novel latency-sensitive
        optimization techniques, including offscreen drawing awareness, command buffering
        and scheduling, nonblocking display operation, native video support, and serverside
        screen scaling. We have implemented THINC in an XFree86/Linux environment
        and compared its performance with other popular approaches, including Citrix
        MetaFrame, Microsoft Terminal Services, SunRay, VNC, and X. Our experimental
        results on web and video applications demonstrate that THINC can be as much
        as five times faster than traditional thin-client systems in high latency
        network environments and is capable of playing full-screen video at full frame
        rate.", "venue": "", "year": 2004, "referenceCount": 36, "citationCount":
        31, "influentialCitationCount": 2, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
        "journal": {"volume": "", "name": ""}, "authors": [{"authorId": "2195399",
        "name": "Ricardo A. Baratto"}, {"authorId": "1700208", "name": "Jason Nieh"},
        {"authorId": "39677916", "name": "Leonard N. Kim"}]}, {"paperId": "4c9b80f671743318448e3f17af57a43bb81b7ecb",
        "externalIds": {"MAG": "2137611219", "DOI": "10.7916/D8BK1K46", "CorpusId":
        73011324}, "corpusId": 73011324, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/4c9b80f671743318448e3f17af57a43bb81b7ecb",
        "title": "Remote display performance for wireless healthcare computing.",
        "abstract": "Organizations are beginning to recognize that health care providers
        are highly mobile and optimal care requires providing access to a large and
        dynamic body of information wherever the provider and patient are. Remote
        display protocols (RDP) are one way that organizations are using to deliver
        healthcare applications to mobile users. While many organizations have begun
        to use RDPs to deliver real-time access to health care information to clinicians,
        little formal work has been done to evaluate the performance or the effectiveness
        of thin-client computing with health care applications. This study examines
        the performance of wireless thin-client tablets with two web-based clinical
        applications, a text-centric, graphics-poor EMR and a graphic-rich image analysis
        program. The study compares the performance of two popular RDP implementations,
        Citrix and Microsoft Remote Desktop, with the performance of a traditional
        web browser in a wireless environment. For both applications, the RDPs demonstrated
        both higher speed and reduced bandwidth requirements than the web browser.",
        "venue": "", "year": 2004, "referenceCount": 11, "citationCount": 2, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Medicine"],
        "s2FieldsOfStudy": [{"category": "Medicine", "source": "external"}, {"category":
        "Computer Science", "source": "s2-fos-model"}, {"category": "Medicine", "source":
        "s2-fos-model"}], "publicationTypes": null, "publicationDate": null, "journal":
        {"volume": "107", "pages": "1438-1442", "name": "Studies in health technology
        and informatics"}, "authors": [{"authorId": "145812029", "name": "A. Lai"},
        {"authorId": "1700208", "name": "Jason Nieh"}, {"authorId": "1742373", "name":
        "A. Laine"}, {"authorId": "1690334", "name": "J. Starren"}]}, {"paperId":
        "4fec3da202175274700f119b453d8174cd987df9", "externalIds": {"DOI": "10.1145/3249249",
        "CorpusId": 255893873}, "corpusId": 255893873, "publicationVenue": null, "url":
        "https://www.semanticscholar.org/paper/4fec3da202175274700f119b453d8174cd987df9",
        "title": "Session details: Optimizing encoding", "abstract": null, "venue":
        "Proceedings of the 13th international conference on World Wide Web", "year":
        2004, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
        ["Conference"], "publicationDate": "2004-05-17", "journal": {"name": "Proceedings
        of the 13th international conference on World Wide Web"}, "authors": [{"authorId":
        "1700208", "name": "Jason Nieh"}]}, {"paperId": "5afd1c7147cb182d9841cb67ffd9e572206f837d",
        "externalIds": {"MAG": "2100860375", "DBLP": "journals/tocs/OlshefskiNA04",
        "DOI": "10.1145/966785.966787", "CorpusId": 13652126}, "corpusId": 13652126,
        "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/5afd1c7147cb182d9841cb67ffd9e572206f837d",
        "title": "Using certes to infer client response time at the web server", "abstract":
        "As businesses continue to grow their World Wide Web presence, it is becoming
        increasingly vital for them to have quantitative measures of the mean client
        perceived response times of their web services. We present Certes (CliEnt
        Response Time Estimated by the Server), an online server-based mechanism that
        allows web servers to estimate mean client perceived response time, as if
        measured at the client. Certes is based on a model of TCP that quantifies
        the effect that connection drops have on mean client perceived response time
        by using three simple server-side measurements: connection drop rate, connection
        accept rate and connection completion rate. The mechanism does not require
        modifications to HTTP servers or web pages, does not rely on probing or third
        party sampling, and does not require client-side modifications or scripting.
        Certes can be used to estimate response times for any web content, not just
        HTML. We have implemented Certes and compared its response time estimates
        with those obtained with detailed client instrumentation. Our results demonstrate
        that Certes provides accurate server-based estimates of mean client response
        times in HTTP 1.0/1.1 environments, even with rapidly changing workloads.
        Certes runs online in constant time with very low overhead. It can be used
        at websites and server farms to verify compliance with service level objectives.",
        "venue": "TOCS", "year": 2004, "referenceCount": 41, "citationCount": 18,
        "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf": null,
        "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
        Science", "source": "external"}, {"category": "Computer Science", "source":
        "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2004-02-01", "journal": {"volume": "22", "pages": "49-93", "name": "ACM Trans.
        Comput. Syst."}, "authors": [{"authorId": "1828237", "name": "D. Olshefski"},
        {"authorId": "1700208", "name": "Jason Nieh"}, {"authorId": "36390931", "name":
        "D. Agrawal"}]}, {"paperId": "66e91238ed494600f18b79b94aa45acfc5650e71", "externalIds":
        {"DBLP": "conf/osdi/OlshefskiNN04", "MAG": "2156223332", "CorpusId": 5707196},
        "corpusId": 5707196, "publicationVenue": {"id": "86c43745-31d9-4c1a-b33f-ce3aa0042dbb",
        "name": "USENIX Symposium on Operating Systems Design and Implementation",
        "type": "conference", "alternate_names": ["Oper Syst Des Implement", "Operating
        Systems Design and Implementation", "OSDI", "USENIX Symp Oper Syst Des Implement"]},
        "url": "https://www.semanticscholar.org/paper/66e91238ed494600f18b79b94aa45acfc5650e71",
        "title": "ksniffer: Determining the Remote Client Perceived Response Time
        from Live Packet Streams", "abstract": "As dependence on the World Wide Web
        continues to grow, so does the need for businesses to have quantitative measures
        of the client perceived response times of their Web services. We present ksniffer,
        a kernel-based traffic monitor capable of determining pageview response times
        as perceived by remote clients, in real-time at gigabit traffic rates. ksniffer
        is based on novel, online mechanisms that take a \"look once, then drop\"
        approach to packet analysis to reconstruct TCP connections and learn client
        pageview activity. These mechanisms are designed to operate accurately with
        live network traffic even in the presence of packet loss and delay, and can
        be efficiently implemented in kernel space. This enables ksniffer to perform
        analysis that exceeds the functionality of current traffic analyzers while
        doing so at high bandwidth rates. ksniffer requires only to passively monitor
        network traffic and can be integrated with systems that perform server management
        to achieve specified response time goals. Our experimental results demonstrate
        that ksniffer can run on an inexpensive, commodity, Linux-based PC and provide
        online pageview response time measurements, across a wide range of operating
        conditions, that are within five percent of the response times measured at
        the client by detailed instrumentation.", "venue": "USENIX Symposium on Operating
        Systems Design and Implementation", "year": 2004, "referenceCount": 27, "citationCount":
        23, "influentialCitationCount": 1, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
        "publicationDate": "2004-12-06", "journal": {"pages": "333-346"}, "authors":
        [{"authorId": "1828237", "name": "D. Olshefski"}, {"authorId": "1700208",
        "name": "Jason Nieh"}, {"authorId": "1771229", "name": "E. Nahum"}]}, {"paperId":
        "6e1f042567fe5fc13a99d55e280838a186261a52", "externalIds": {"MAG": "2167274633",
        "DBLP": "conf/mobicom/BarattoPSN04", "DOI": "10.1145/1023720.1023722", "CorpusId":
        1421002}, "corpusId": 1421002, "publicationVenue": {"id": "5440268e-4691-4fc0-8d0e-dcd6df18e77f",
        "name": "ACM/IEEE International Conference on Mobile Computing and Networking",
        "type": "conference", "alternate_names": ["MOBICOM", "MobiCom", "ACM/IEEE
        Int Conf Mob Comput Netw"], "url": "http://www.acm.org/sigs/sigmobile/"},
        "url": "https://www.semanticscholar.org/paper/6e1f042567fe5fc13a99d55e280838a186261a52",
        "title": "MobiDesk: mobile virtual desktop computing", "abstract": "We present
        MobiDesk, a mobile virtual desktop computing hosting infrastructure that leverages
        continued improvements in network speed, cost, and ubiquity to address the
        complexity, cost, and mobility limitations of today''s personal computing
        infrastructure. MobiDesk transparently virtualizes a user''s computing session
        by abstracting underlying system resources in three key areas: display, operating
        system, and network. It provides a thin virtualization layer that decouples
        a user''s computing session from any particular end-user device, and moves
        all application logic to hosting providers. The virtualization layer decouples
        a user''s computing session from the underlying operating system and server
        instance, enabling high-availability service by transparently migrating sessions
        from one server to another during server maintenance or upgrades. We have
        implemented a prototype in Linux that works with existing unmodified applications
        and operating system kernels. Our experimental results demonstrate that MobiDesk
        has very low virtualization overhead, can provide a full featured desktop
        experience including full-motion video support, and is able to migrate users''
        sessions efficiently and reliably for high-availability, while maintaining
        existing network connections.", "venue": "ACM/IEEE International Conference
        on Mobile Computing and Networking", "year": 2004, "referenceCount": 49, "citationCount":
        117, "influentialCitationCount": 2, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2004-09-26", "journal": {"pages": "1-15"}, "authors": [{"authorId": "2195399",
        "name": "Ricardo A. Baratto"}, {"authorId": "2600961", "name": "S. Potter"},
        {"authorId": "1758428", "name": "Gong Su"}, {"authorId": "1700208", "name":
        "Jason Nieh"}]}, {"paperId": "b69ebc745a52b19db476a823b0625234d59f7b24", "externalIds":
        {"MAG": "2115614221", "CorpusId": 807083}, "corpusId": 807083, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/b69ebc745a52b19db476a823b0625234d59f7b24",
        "title": "Improving Web Browsing on Wireless PDAs Using Thin-Client Computing",
        "abstract": "Web applications are becoming increasingly popular for mobile
        wireless PDAs. However, web browsing on these systems can be quite slow. An
        alternative approach is handheld thin-client computing, in which the web browser
        and associated application logic run on a server, which then sends simple
        screen updates to the PDA for display. To assess the viability of this thin-client
        approach, we compare the web browsing performance of thin clients against
        fat clients that run the web browser locally on a PDA. Our results show that
        thin clients can provide better web browsing performance compared to fat clients,
        both in terms of speed and ability to correctly display web content. Surprisingly,
        thin clients are faster even when having to send more data over the network.
        We characterize and analyze different design choices in various thin-client
        systems and explain why these approaches can yield superior web browsing performance
        on mobile wireless PDAs.", "venue": "", "year": 2004, "referenceCount": 34,
        "citationCount": 16, "influentialCitationCount": 2, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
        null, "journal": {"volume": "", "name": ""}, "authors": [{"authorId": "145812029",
        "name": "A. Lai"}, {"authorId": "1700208", "name": "Jason Nieh"}, {"authorId":
        "3271357", "name": "Bhagyashree Bohra"}, {"authorId": "2401727", "name": "Vijayarka
        Nandikonda"}, {"authorId": "1942475", "name": "Abhishek P. Surana"}, {"authorId":
        "2326750", "name": "Suchita Varshneya"}]}, {"paperId": "d47995e4ce282c8a90e6ff7a32d1bf091ed63636",
        "externalIds": {"DBLP": "conf/medinfo/LaiNLS04", "DOI": "10.3233/978-1-60750-949-3-1438",
        "CorpusId": 14508525, "PubMed": "15361053"}, "corpusId": 14508525, "publicationVenue":
        {"id": "74ac5df9-f803-4de9-91f3-ec5f69bc0c8c", "name": "Medinfo", "alternate_names":
        ["Medinfo"], "issn": "1314-0345", "url": "https://www.medinfo.bg/"}, "url":
        "https://www.semanticscholar.org/paper/d47995e4ce282c8a90e6ff7a32d1bf091ed63636",
        "title": "Remote Display Performance for Wireless Healthcare Computing", "abstract":
        "Organizations are beginning to recognize that health care providers are highly
        mobile and optimal care requires providing access to a large and dynamic body
        of information wherever the provider and patient are. Remote display protocols
        (RDP) are one way that organizations are using to deliver healthcare applications
        to mobile users. While many organizations have begun to use RDPs to deliver
        real-time access to health care information to clinicians, little formal work
        has been done to evaluate the performance or the effectiveness of thin-client
        computing with health care applications. This study examines the performance
        of wireless thin-client tablets with two web-based clinical applications,
        a text-centric, graphics-poor EMR and a graphic-rich image analysis program.
        The study compares the performance of two popular RDP implementations, Citrix
        and Microsoft Remote Desktop, with the performance of a traditional web browser
        in a wireless environment. For both applications, the RDPs demonstrated both
        higher speed and reduced bandwidth requirements than the web browser.", "venue":
        "Medinfo", "year": 2004, "referenceCount": 21, "citationCount": 1, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science", "Medicine"], "s2FieldsOfStudy": [{"category": "Computer Science",
        "source": "external"}, {"category": "Medicine", "source": "external"}, {"category":
        "Computer Science", "source": "s2-fos-model"}, {"category": "Medicine", "source":
        "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Study"], "publicationDate":
        null, "journal": {"volume": "107 Pt 2", "pages": "\n          1438-42\n        ",
        "name": "Studies in health technology and informatics"}, "authors": [{"authorId":
        "145812029", "name": "A. Lai"}, {"authorId": "1700208", "name": "Jason Nieh"},
        {"authorId": "1742373", "name": "A. Laine"}, {"authorId": "1690334", "name":
        "J. Starren"}]}, {"paperId": "ef4123d33009283697b7043f88ae30af1942e901", "externalIds":
        {"CorpusId": 54079393}, "corpusId": 54079393, "publicationVenue": null, "url":
        "https://www.semanticscholar.org/paper/ef4123d33009283697b7043f88ae30af1942e901",
        "title": "USENIX Association Proceedings of the First Symposium on Networked
        Systems Design and Implementation", "abstract": "We have developed SWAP, a
        system that automatically detects process dependencies and accounts for such
        dependencies in scheduling. SWAP uses system call history to determine possible
        resource dependencies among processes in an automatic and fully transparent
        fashion. Because some dependencies cannot be precisely determined, SWAP associates
        confidence levels with dependency information that are dynamically adjusted
        using feedback from process blocking behavior. SWAP can schedule processes
        using this imprecise dependency information in a manner that is compatible
        with existing scheduling mechanisms and ensures that actual scheduling behavior
        corresponds to the desired scheduling policy in the presence of process dependencies.
        We have implemented SWAP in Linux and measured its effectiveness on microbenchmarks
        and real applications. Our results show that SWAP has low overhead, effectively
        solves the priority inversion problem and can provide substantial improvements
        in system performance in scheduling processes with dependencies.", "venue":
        "", "year": 2004, "referenceCount": 20, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
        null, "publicationDate": null, "journal": null, "authors": [{"authorId": "31969154",
        "name": "Haoqiang Zheng"}, {"authorId": "1700208", "name": "Jason Nieh"}]},
        {"paperId": "faac81887d6d7db83eda5e43b24c45d9261ef6a9", "externalIds": {"DBLP":
        "conf/mss/ZadokOSWMN04", "MAG": "2132644419", "CorpusId": 321745}, "corpusId":
        321745, "publicationVenue": {"id": "8c921262-07af-4f42-b8f9-b4bcd8aaeb81",
        "name": "IEEE Conference on Mass Storage Systems and Technologies", "type":
        "conference", "alternate_names": ["MSST", "IEEE Conf Mass Storage Syst Technol"],
        "url": "http://storageconference.us/"}, "url": "https://www.semanticscholar.org/paper/faac81887d6d7db83eda5e43b24c45d9261ef6a9",
        "title": "Reducing Storage Management Costs via Informed User-Based Policies",
        "abstract": "Storage consumption continues to grow rapidly, especially with
        the popularity of multimedia files. Storage hardware costs represent a small
        fraction of overall management costs, which include frequent maintenance and
        backups. Our key approach to reducing total storage management costs is to
        reduce actual storage consumption. We achieve this in two ways. First, we
        classify files into categories of importance. Based on these categories, files
        can be backed up with various frequencies, or even not at all. Second, the
        system may also reclaim space based on a file\u2019s importance (e.g., transparently
        compress old files). Our system provides a rich set of policies. We allow
        users to tailor their disk usage policies, offloading some of the management
        burdens from the system and its administrators. We have implemented the system
        and evaluated it. Performance overheads under normal use are negligible. We
        report space savings on modern systems ranging from 25% to 76%, which result
        in extending storage lifetimes by 72%.", "venue": "IEEE Conference on Mass
        Storage Systems and Technologies", "year": 2004, "referenceCount": 41, "citationCount":
        26, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Engineering", "Computer Science"], "s2FieldsOfStudy":
        [{"category": "Engineering", "source": "external"}, {"category": "Computer
        Science", "source": "external"}, {"category": "Computer Science", "source":
        "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        null, "journal": {"pages": "193-197"}, "authors": [{"authorId": "1708491",
        "name": "E. Zadok"}, {"authorId": "2066110527", "name": "Jeffrey Osborn"},
        {"authorId": "2278327", "name": "Ariye Shater"}, {"authorId": "144146970",
        "name": "Charles P. Wright"}, {"authorId": "1403595152", "name": "Kiran-Kumar
        Muniswamy-Reddy"}, {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId":
        "fbdefe8a250c2589c779a8496bb06955ae90c7c2", "externalIds": {"MAG": "1937732912",
        "DOI": "10.7916/D851464Q", "CorpusId": 8468534}, "corpusId": 8468534, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/fbdefe8a250c2589c779a8496bb06955ae90c7c2",
        "title": "Secure Isolation and Migration of Untrusted Legacy Applications",
        "abstract": "Existing applications often contain security holes that are not
        patched until after the system has already been compromised. Even when software
        updates are applied to address security issues, they often result in system
        services being unavailable for some time. To address these system security
        and availability issues, we have developed peas and pods. A pea provides a
        least privilege environment that can restrict processes to the minimal subset
        of system resources needed to run. This mechanism enables the creation of
        environments for privileged program execution that can help with intrusion
        prevention and containment. A pod provides a group of processes and associated
        users with a consistent, machine-independent virtualized environment. Pods
        are coupled with a novel checkpoint-restart mechanism which allows processes
        to be migrated across minor operating system kernel versions with different
        security patches. This mechanism allows system administrators the flexibility
        to patch their operating systems immediately without worrying over potential
        loss of data or needing to schedule system downtime. We have implemented peas
        and pods in Linux without requiring any application or operating system kernel
        changes. Our measurements on real world desktop and server applications demonstrate
        that peas and pods impose little overhead and enable secure isolation and
        migration of untrusted applications.", "venue": "", "year": 2004, "referenceCount":
        45, "citationCount": 11, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Engineering"], "s2FieldsOfStudy":
        [{"category": "Engineering", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
        null, "journal": {"volume": "", "name": ""}, "authors": [{"authorId": "2600961",
        "name": "S. Potter"}, {"authorId": "1700208", "name": "Jason Nieh"}, {"authorId":
        "2947394", "name": "Dinesh Subhraveti"}]}, {"paperId": "55bd56ec8241880b92972cbb2b59e2136a4cc745",
        "externalIds": {"DBLP": "conf/amia/LaiNLS03", "MAG": "2108522423", "CorpusId":
        5500422, "PubMed": "14728410"}, "corpusId": 5500422, "publicationVenue": {"id":
        "c9e16b3c-2fdf-4b4c-82bf-5cdf3d3435b7", "name": "American Medical Informatics
        Association Annual Symposium", "type": "conference", "alternate_names": ["Conference
        of American Medical Informatics Association", "Am Med Informatics Assoc Annu
        Symp", "Conf Am Med Informatics Assoc", "AMIA"], "url": "https://knowledge.amia.org/"},
        "url": "https://www.semanticscholar.org/paper/55bd56ec8241880b92972cbb2b59e2136a4cc745",
        "title": "Thin Client Performance for Remote 3-D Image Display", "abstract":
        "Several trends in biomedical computing are converging in a way that will
        require new approaches to telehealth image display. Image viewing is becoming
        an \"anytime, anywhere\" activity. In addition, organizations are beginning
        to recognize that healthcare providers are highly mobile and optimal care
        requires providing information wherever the provider and patient are. Thin-client
        computing is one way to support image viewing this complex environment. However
        little is known about the behavior of thin client systems in supporting image
        transfer in modern heterogeneous networks. Our results show that using thin-clients
        can deliver acceptable performance over conditions commonly seen in wireless
        networks if newer protocols optimized for these conditions are used.", "venue":
        "American Medical Informatics Association Annual Symposium", "year": 2003,
        "referenceCount": 4, "citationCount": 2, "influentialCitationCount": 0, "isOpenAccess":
        false, "openAccessPdf": null, "fieldsOfStudy": ["Computer Science", "Medicine"],
        "s2FieldsOfStudy": [{"category": "Computer Science", "source": "external"},
        {"category": "Medicine", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Study"],
        "publicationDate": null, "journal": {"pages": "\n          904\n        ",
        "name": "AMIA ... Annual Symposium proceedings. AMIA Symposium"}, "authors":
        [{"authorId": "145812029", "name": "A. Lai"}, {"authorId": "1700208", "name":
        "Jason Nieh"}, {"authorId": "1742373", "name": "A. Laine"}, {"authorId": "1690334",
        "name": "J. Starren"}]}, {"paperId": "5bdbd4c2457d0610ead68d064bc26e60654903d6",
        "externalIds": {"DBLP": "conf/www/YangNKMS03", "MAG": "2131792114", "DOI":
        "10.1145/775152.775163", "CorpusId": 12088095}, "corpusId": 12088095, "publicationVenue":
        {"id": "e07422f9-c065-40c3-a37b-75e98dce79fe", "name": "The Web Conference",
        "type": "conference", "alternate_names": ["Web Conf", "WWW"], "url": "http://www.iw3c2.org/"},
        "url": "https://www.semanticscholar.org/paper/5bdbd4c2457d0610ead68d064bc26e60654903d6",
        "title": "Web browsing performance of wireless thin-client computing", "abstract":
        "Web applications are becoming increasingly popular for mobile wireless systems.
        However, wireless networks can have high packet loss rates, which can degrade
        web browsing performance on wireless systems. An alternative approach is wireless
        thin-client computing, in which the web browser runs on a remote thin server
        with a more reliable wired connection to the Internet. A mobile client then
        maintains a connection to the thin server to receive display updates over
        the lossy wireless network. To assess the viability of this thin-client approach,
        we compare the web browsing performance of thin clients against fat clients
        that run the web browser locally in lossy wireless networks. Our results show
        that thin clients can operate quite effectively over lossy networks. Compared
        to fat clients running web browsers locally, our results show surprisingly
        that thin clients can be faster and more resilient on web applications over
        lossy wireless LANs despite having to send more data over the network. We
        characterize and analyze different design choices in various thin-client systems
        and explain why these approaches can yield superior web browsing performance
        in lossy wireless networks.", "venue": "The Web Conference", "year": 2003,
        "referenceCount": 35, "citationCount": 28, "influentialCitationCount": 0,
        "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle"], "publicationDate": "2003-05-20", "journal":
        {"pages": "68-79"}, "authors": [{"authorId": "123362989", "name": "S. J. Yang"},
        {"authorId": "1700208", "name": "Jason Nieh"}, {"authorId": "2149955", "name":
        "S. Krishnappa"}, {"authorId": "1962793", "name": "Aparna Mohla"}, {"authorId":
        "2470632", "name": "M. Sajjadpour"}]}, {"paperId": "669675ece7a64db4305d9c68aac860db7ebd5e4b",
        "externalIds": {"MAG": "2163507572", "DBLP": "conf/ccs/KeromytisPGKMNR03",
        "DOI": "10.1145/1036921.1036923", "CorpusId": 7030754}, "corpusId": 7030754,
        "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/669675ece7a64db4305d9c68aac860db7ebd5e4b",
        "title": "A holistic approach to service survivability", "abstract": "We present
        SABER (Survivability Architecture: Block, Evade, React), a proposed survivability
        architecture that blocks, evades and reacts to a variety of attacks by using
        several security and survivability mechanisms in an automated and coordinated
        fashion. Contrary to the ad hoc manner in which contemporary survivable systems
        are built-using isolated, independent security mechanisms such as firewalls,
        intrusion detection systems and software sandboxes-SABER integrates several
        different technologies in an attempt to provide a unified framework for responding
        to the wide range of attacks malicious insiders and outsiders can launch.\n
        This coordinated multi-layer approach will be capable of defending against
        attacks targeted at various levels of the network stack, such as congestion-based
        DoS attacks, software-based DoS or code-injection attacks, and others. Our
        fundamental insight is that while multiple lines of defense are useful, most
        conventional, uncoordinated approaches fail to exploit the full range of available
        responses to incidents. By coordinating the response, the ability to survive
        successful security breaches increases substantially.\n We discuss the key
        components of SABER, how they will be integrated together, and how we can
        leverage on the promising results of the individual components to improve
        survivability in a variety of coordinated attack scenarios. SABER is currently
        in the prototyping stages, with several interesting open research topics.",
        "venue": "SSRS ''03", "year": 2003, "referenceCount": 87, "citationCount":
        57, "influentialCitationCount": 3, "isOpenAccess": true, "openAccessPdf":
        {"url": "https://academiccommons.columbia.edu/doi/10.7916/D8F197XT/download",
        "status": null}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2003-10-31", "journal": {"pages": "11-22"}, "authors":
        [{"authorId": "1720824", "name": "A. Keromytis"}, {"authorId": "2365246",
        "name": "Janak J. Parekh"}, {"authorId": "35587727", "name": "Philip Gross"},
        {"authorId": "1694056", "name": "G. Kaiser"}, {"authorId": "145502289", "name":
        "V. Misra"}, {"authorId": "1700208", "name": "Jason Nieh"}, {"authorId": "1926685",
        "name": "D. Rubenstein"}, {"authorId": "1807433", "name": "S. Stolfo"}]},
        {"paperId": "8b4a9d18780900a420ff432761e8880cc6a7da13", "externalIds": {"MAG":
        "1577158317", "DOI": "10.7916/D85B09CP", "CorpusId": 13081456}, "corpusId":
        13081456, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/8b4a9d18780900a420ff432761e8880cc6a7da13",
        "title": "Group Ratio Round-Robin: An O(1) Proportional Share Scheduler",
        "abstract": "Proportional share resource management provides a flexible and
        useful abstraction for multiplexing time-shared resources. We present Group
        Ratio Round-Robin (GR), a proportional share scheduler that combines accurate
        proportional fairness scheduling behavior with O(1) scheduling overhead. GR
        uses a novel client grouping strategy to organize clients into groups of similar
        processor allocations which can be more easily scheduled. Using this grouping
        strategy, GR combines the benefits of low overhead round-robin execution with
        a novel ratio-based scheduling algorithm. We analyze the behavior of GR and
        show that it can provide fairness within a constant factor of the ideal generalized
        processor sharing model for client weights with a fixed upper bound. GR can
        be easily implemented using simple data structures. We have implemented GR
        in Linux and measured its performance against other schedulers commonly used
        in research and practice, including the standard Linux scheduler, Weighted
        Fair Queueing, Virtual-Time Round-Robin, and Smoothed Round-Robin. Our experimental
        results demonstrate that GR can provide much lower scheduling overhead and
        much better scheduling accuracy in practice than these other approaches.",
        "venue": "", "year": 2003, "referenceCount": 27, "citationCount": 16, "influentialCitationCount":
        1, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": null, "journal": {"volume": "",
        "name": ""}, "authors": [{"authorId": "2502738", "name": "W. C. Chan"}, {"authorId":
        "1700208", "name": "Jason Nieh"}]}, {"paperId": "f06a958a1e03b1166f9877c746504941ec7b6758",
        "externalIds": {"DBLP": "journals/tocs/NiehL03", "MAG": "2160284242", "DOI":
        "10.1145/762483.762484", "CorpusId": 1645118}, "corpusId": 1645118, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/f06a958a1e03b1166f9877c746504941ec7b6758",
        "title": "A SMART scheduler for multimedia applications", "abstract": "Real-time
        applications such as multimedia audio and video are increasingly populating
        the workstation desktop. To support the execution of these applications in
        conjunction with traditional non-real-time applications, we have created SMART,
        a Scheduler for Multimedia And Real-Time applications. SMART supports applications
        with time constraints, and provides dynamic feedback to applications to allow
        them to adapt to the current load. In addition, the support for real-time
        applications is integrated with the support for conventional computations.
        This allows the user to prioritize across real-time and conventional computations,
        and dictate how the processor is to be shared among applications of the same
        priority. As the system load changes, SMART adjusts the allocation of resources
        dynamically and seamlessly. It can dynamically shed real-time computations
        and regulate the execution rates of real-time tasks when the system is overloaded,
        while providing better value in underloaded conditions than previously proposed
        schemes.We have implemented SMART in the Solaris UNIX operating system and
        measured its performance against other schedulers commonly used in research
        and practice in executing real-time, interactive, and batch applications.
        Our experimental results demonstrate SMART''s superior performance over fair
        queueing and UNIX SVR4 schedulers in supporting multimedia applications.",
        "venue": "TOCS", "year": 2003, "referenceCount": 46, "citationCount": 85,
        "influentialCitationCount": 3, "isOpenAccess": false, "openAccessPdf": null,
        "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
        Science", "source": "external"}, {"category": "Computer Science", "source":
        "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2003-05-01", "journal": {"volume": "21", "pages": "117-163", "name": "ACM
        Trans. Comput. Syst."}, "authors": [{"authorId": "1700208", "name": "Jason
        Nieh"}, {"authorId": "39682108", "name": "M. Lam"}]}, {"paperId": "1fd752f08584b38b3f2b9957ad973add4f7c17d4",
        "externalIds": {"MAG": "1498557233", "DOI": "10.7916/D8HQ4B3X", "CorpusId":
        13279031}, "corpusId": 13279031, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/1fd752f08584b38b3f2b9957ad973add4f7c17d4",
        "title": "Mobile Communication with Virtual Network Address Translation",
        "abstract": "Virtual Network Address Translation (VNAT) is a novel architecture
        that allows transparent migration of end-to-end live network connections associated
        with various computation units. Such computation units can be either a single
        process, or a group of processes, or an entire host. VNAT virtualizes network
        connections perceived by transport protocols so that identification of network
        connections is decoupled from stationary hosts. Such virtual connections are
        then remapped into physical connections to be carried on the physical network
        using network address translation. VNAT requires no modification to existing
        applications, operating systems, or protocol stacks. Furthermore, it is fully
        compatible with the existing communication infrastructure; virtual and normal
        connections can coexist without interfering each other. VNAT functions entirely
        within end systems and requires no third party services. We have implemented
        a VNAT prototype with the Linux 2.4 kernel and demonstrated its functionality
        on a wide range of popular real-world network applications. Our performance
        results show that VNAT has essentially no network performance overhead except
        when connections are migrated, in which case the overhead of our Linux prototype
        is less than 7 percent over a stock RedHat Linux system.", "venue": "", "year":
        2002, "referenceCount": 31, "citationCount": 46, "influentialCitationCount":
        13, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": null, "journal": {"volume": "",
        "name": ""}, "authors": [{"authorId": "1758428", "name": "Gong Su"}, {"authorId":
        "1700208", "name": "Jason Nieh"}]}, {"paperId": "2144c76d3e93a5824c26912751984c19d598af19",
        "externalIds": {"MAG": "1514875257", "DOI": "10.7916/D8C82NG3", "CorpusId":
        14615561}, "corpusId": 14615561, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/2144c76d3e93a5824c26912751984c19d598af19",
        "title": "The Design and Implementation of Elastic Quotas: A System for Flexible
        File System Management", "abstract": "We introduce elastic quotas, a disk
        space management technique that makes disk space an elastic resource like
        CPU and memory. Elastic quotas allow all users to use unlimited amounts of
        available disk space while still providing system administrators the ability
        to control how the disk space is allocated among users. Elastic quotas maintain
        existing persistent file semantics while supporting user-controlled policies
        for removing files when the file system becomes too full. We have implemented
        an elastic quota system in Solaris and measured its performance. The system
        is simple to implement, requires no kernel modifications, and is compatible
        with existing disk space management methods. Our results show that elastic
        quotas are an effective, low-overhead solution for flexible file system management.",
        "venue": "", "year": 2002, "referenceCount": 33, "citationCount": 5, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": null, "journal": {"volume": "",
        "name": ""}, "authors": [{"authorId": "2097621449", "name": "Ozgur Can Leonard"},
        {"authorId": "1700208", "name": "Jason Nieh"}, {"authorId": "1708491", "name":
        "E. Zadok"}, {"authorId": "2278327", "name": "Ariye Shater"}, {"authorId":
        "2066110527", "name": "Jeffrey Osborn"}, {"authorId": "144146970", "name":
        "Charles P. Wright"}]}, {"paperId": "229dbf2af37c45b151801851271559e0123aeb2f",
        "externalIds": {"DBLP": "conf/sigmetrics/LaiN02", "MAG": "2049259772", "DOI":
        "10.1145/511334.511363", "CorpusId": 5473932}, "corpusId": 5473932, "publicationVenue":
        {"id": "2194778f-4fb6-471e-b2ff-5ad194635f72", "name": "Measurement and Modeling
        of Computer Systems", "type": "conference", "alternate_names": ["Meas Model
        Comput Syst", "SIGMETRICS"], "url": "http://www.acm.org/sigmetrics/"}, "url":
        "https://www.semanticscholar.org/paper/229dbf2af37c45b151801851271559e0123aeb2f",
        "title": "Limits of wide-area thin-client computing", "abstract": "While many
        application service providers have proposed using thin-client computing to
        deliver computational services over the Internet, little work has been done
        to evaluate the effectiveness of thin-client computing in a wide-area network.
        To assess the potential of thin-client computing in the context of future
        commodity high-bandwidth Internet access, we have used a novel, non-invasive
        slow-motion benchmarking technique to evaluate the performance of several
        popular thin-client computing platforms in delivering computational services
        cross-country over Internet2. Our results show that using thin-client computing
        in a wide-area network environment can deliver acceptable performance over
        Internet2, even when client and server are located thousands of miles apart
        on opposite ends of the country. However, performance varies widely among
        thin-client platforms and not all platforms are suitable for this environment.
        While many thin-client systems are touted as being bandwidth efficient, we
        show that network latency is often the key factor in limiting wide-area thin-client
        performance. Furthermore, we show that the same techniques used to improve
        bandwidth efficiency often result in worse overall performance in wide-area
        networks. We characterize and analyze the different design choices in the
        various thin-client platforms and explain which of these choices should be
        selected for supporting wide-area computing services.", "venue": "Measurement
        and Modeling of Computer Systems", "year": 2002, "referenceCount": 32, "citationCount":
        77, "influentialCitationCount": 4, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2002-06-01", "journal": {"pages": "228-239"}, "authors": [{"authorId": "145812029",
        "name": "A. Lai"}, {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId":
        "3fd4dd73277e3c1bb6a5db95eac2108531ceb0f2", "externalIds": {"DBLP": "conf/sigmetrics/OlshefskiNA02",
        "MAG": "2067254062", "DOI": "10.1145/511334.511355", "CorpusId": 1021221},
        "corpusId": 1021221, "publicationVenue": {"id": "2194778f-4fb6-471e-b2ff-5ad194635f72",
        "name": "Measurement and Modeling of Computer Systems", "type": "conference",
        "alternate_names": ["Meas Model Comput Syst", "SIGMETRICS"], "url": "http://www.acm.org/sigmetrics/"},
        "url": "https://www.semanticscholar.org/paper/3fd4dd73277e3c1bb6a5db95eac2108531ceb0f2",
        "title": "Inferring client response time at the web server", "abstract": "As
        businesses continue to grow their World Wide Web presence, it is becoming
        increasingly vital for them to have quantitative measures of the client perceived
        response times of their web services. We present Certes (CliEnt Response Time
        Estimated by the Server), an online server-based mechanism for web servers
        to measure client perceived response time, as if measured at the client. Certes
        is based on a model of TCP that quantifies the effect that connection drops
        have on perceived client response time, by using three simple server-side
        measurements: connection drop rate, connection accept rate and connection
        completion rate. The mechanism does not require modifications to http servers
        or web pages, does not rely on probing or third party sampling, and does not
        require client-side modifications or scripting. Certes can be used to measure
        response times for any web content, not just HTML. We have implemented Certes
        and compared its response time measurements with those obtained with detailed
        client instrumentation. Our results demonstrate that Certes provides accurate
        server-based measurements of client response times in HTTP 1.0/1.1 [14] environments,
        even with rapidly changing workloads. Certes runs online in constant time
        with very low overhead. It can be used at web sites and server farms to verify
        compliance with service level objectives.", "venue": "Measurement and Modeling
        of Computer Systems", "year": 2002, "referenceCount": 31, "citationCount":
        53, "influentialCitationCount": 1, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"], "publicationDate":
        "2002-06-15", "journal": {"pages": "160-171"}, "authors": [{"authorId": "1828237",
        "name": "D. Olshefski"}, {"authorId": "1700208", "name": "Jason Nieh"}, {"authorId":
        "36390931", "name": "D. Agrawal"}]}, {"paperId": "450fff5448f51244a5a95c854036d486afd28e20",
        "externalIds": {"MAG": "1899756457", "DBLP": "conf/icc/LiN02", "DOI": "10.1109/ICC.2002.997301",
        "CorpusId": 510648}, "corpusId": 510648, "publicationVenue": null, "url":
        "https://www.semanticscholar.org/paper/450fff5448f51244a5a95c854036d486afd28e20",
        "title": "Optimal linear interpolation coding for server-based computing",
        "abstract": "Due to its reduced administrative costs and better resource utilization,
        server-based computing (SBC) is becoming a popular approach for delivering
        computational services across a network. In SBC, all application processing
        is done on servers while only screen updates are sent to clients. While many
        SBC encoding techniques have been explored for transmitting screen updates
        efficiently, existing approaches do not effectively support multimedia applications.
        To address this problem, we propose optimal linear interpolation (OLI), a
        new pixel-based SBC screen update coding algorithm. With OLI, the server selects
        and transmits only a small sample of pixels to represent a screen update.
        The client recovers the complete screen update from these samples using piecewise
        linear interpolation to achieve the best visual quality. OLI can be used to
        provide lossless or lossy compression for an adaptive trade-off between network
        bandwidth and processing time requirements. We further propose and evaluate
        2D lossless linear interpolation (2DLI), which is based on OLI but additionally
        provides lower encoding complexity for lossless compression. Our experimental
        results show that when compared with other compression methods, 2DLI provides
        good data compression ratio with modest computational overhead, for both servers
        and clients.", "venue": "2002 IEEE International Conference on Communications.
        Conference Proceedings. ICC 2002 (Cat. No.02CH37333)", "year": 2002, "referenceCount":
        15, "citationCount": 10, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
        "Conference"], "publicationDate": "2002-08-07", "journal": {"volume": "4",
        "pages": "2542-2546 vol.4", "name": "2002 IEEE International Conference on
        Communications. Conference Proceedings. ICC 2002 (Cat. No.02CH37333)"}, "authors":
        [{"authorId": "2115374248", "name": "Fei Li"}, {"authorId": "1700208", "name":
        "Jason Nieh"}]}, {"paperId": "4bed5060dcf909d851a8ba1876b8aba4c9d8819b", "externalIds":
        {"DOI": "10.1145/1060289.1060323", "CorpusId": 262361807}, "corpusId": 262361807,
        "publicationVenue": {"id": "86c43745-31d9-4c1a-b33f-ce3aa0042dbb", "name":
        "USENIX Symposium on Operating Systems Design and Implementation", "type":
        "conference", "alternate_names": ["Oper Syst Des Implement", "Operating Systems
        Design and Implementation", "OSDI", "USENIX Symp Oper Syst Des Implement"]},
        "url": "https://www.semanticscholar.org/paper/4bed5060dcf909d851a8ba1876b8aba4c9d8819b",
        "title": "The design and implementation of Zap: a system for migrating computing
        environments", "abstract": "We have created Zap, a novel system for transparent
        migration of legacy and networked applications. Zap provides a thin virtualization
        layer on top of the operating system that introduces pods, which are groups
        of processes that are provided a consistent, virtualized view of the system.
        This decouples processes in pods from dependencies to the host operating system
        and other processes on the system. By integrating Zap virtualization with
        a checkpoint-restart mechanism, Zap can migrate a pod of processes as a unit
        among machines running independent operating systems without leaving behind
        any residual state after migration. We have implemented a Zap prototype in
        Linux that supports transparent migration of unmodified applications without
        any kernel modifications. We demonstrate that our Linux Zap prototype can
        provide general-purpose process migration functionality with low overhead.
        Our experimental results for migrating pods used for running a standard user''s
        X windows desktop computing environment and for running an Apache web server
        show that these kinds of pods can be migrated with subsecond checkpoint and
        restart latencies.", "venue": "USENIX Symposium on Operating Systems Design
        and Implementation", "year": 2002, "referenceCount": 0, "citationCount": 73,
        "influentialCitationCount": 3, "isOpenAccess": false, "openAccessPdf": null,
        "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
        "journal": null, "authors": [{"authorId": "1844848", "name": "Steven Osman"},
        {"authorId": "2947394", "name": "Dinesh Subhraveti"}, {"authorId": "2058270538",
        "name": "Gong Su"}, {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId":
        "65b8b122c05e7563c6af353e66230ab5495dfc08", "externalIds": {"DBLP": "conf/dcc/LiN02",
        "MAG": "1896011030", "DOI": "10.1109/DCC.2002.1000004", "CorpusId": 30220853},
        "corpusId": 30220853, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/65b8b122c05e7563c6af353e66230ab5495dfc08",
        "title": "Low-complexity interpolation coding for server-based computing",
        "abstract": "Summary form only given. The growing total cost of ownership
        has resulted in a shift away from the distributed model of desktop computing
        toward a more centralized server-based computing (SBC) model. In SBC, all
        application logic is executed on the server while clients simply process the
        resulting screen updates sent from the server. To provide good performance,
        SBC systems employ various techniques to encode the screen updates to minimize
        the bandwidth and processing requirements of sending the screen updates. However,
        existing SBC encoding techniques are not able to effectively support multimedia
        applications. To address this problem, we have developed a family of linear
        interpolation algorithms for encoding SBC screen updates. We first present
        an overview of an optimal linear interpolation (OLI) algorithm. Given a rectangular
        region of pixels to be encoded, OLI represents the region as a one-dimensional
        function, mapping from the cardinal number of each pixel to the color value
        of the pixel. To reduce encoding complexity, we developed two linear interpolation
        algorithms with linear encoding and decoding computational complexity. The
        algorithms are near optimal linear interpolation (NOLI) and 2-D lossless linear
        interpolation (2DLI). We have implemented our linear interpolation algorithms
        and compared their performance with other approaches on discrete-toned and
        smoothed-toned images.", "venue": "Proceedings DCC 2002. Data Compression
        Conference", "year": 2002, "referenceCount": 0, "citationCount": 3, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle", "Conference", "Review"], "publicationDate":
        "2002-04-02", "journal": {"pages": "461-", "name": "Proceedings DCC 2002.
        Data Compression Conference"}, "authors": [{"authorId": "2115374248", "name":
        "Fei Li"}, {"authorId": "1700208", "name": "Jason Nieh"}]}, {"paperId": "97fde10b5cd0e68f7257009caa2829f6c2f8109b",
        "externalIds": {"MAG": "100133255", "CorpusId": 6476987}, "corpusId": 6476987,
        "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/97fde10b5cd0e68f7257009caa2829f6c2f8109b",
        "title": "THE COLUMBIA HOTSPOT RESCUE SERVICE: A RESEARCH PLAN", "abstract":
        "The technical reports in this series are considered to be semi-formal. The
        ideas expressed are solely those of the authors, and questions about the content
        should be directed to them. 1 Introduction Internet performance is unpredictable,
        and users often find the level of service inadequate. We expect this problem
        to worsen as the Internet continues to grow, both in the number of users and
        in the stringency of the requirements of new applications. Intolerable levels
        of service stem from a lack of sufficient resources being targeted to locations
        where service quality is lacking. In a system as complex as the Internet,
        the insufficient resource can be of many types. It may be a server with insufficient
        processing power to handle a large load of requests. It may be a router at
        the edge of the network that is forced to carry a heavy load to or from its
        local area network. It may be a router in the middle of the network that must
        carry a large load, perhaps connecting a set of ISPs, such that upgrading
        its performance does not directly increase any company''s profits. Lastly,
        it may be an attacker intentionally trying to bring down a portion of the
        network. Commonly, the periods of insufficiency are short-lived. In other
        words, the resources allocated within a network to support a service are sufficient
        most of the time, but every so often and quite suddenly, there may be a sharp
        increase in demand, and the resource quickly becomes overwhelmed. Such an
        event is called a network hotspot [1, 2]. There are several remedies currently
        available to deal with network hotspots. The easiest, most common solution
        is to make do with the network as is and deal ad hoc with the unpredictable
        level of service. A second remedy that works in theory is to \" build a better
        network \" in which hot spots do not occur. Here, each network and server
        component must be provisioned with enough resources to handle the maximum
        possible short-term overload. However, such overprovisioning is extremely
        costly, making it an infeasible solution for the majority of network servers
        and users. Another remedy is for companies to offer content delivery services,
        such as caching or access to additional network bandwidth [3]. The content
        delivery company deploys servers throughout the network, and then profits
        when those wishing to provide information efficiently are forced to pay for
        access to \u2026", "venue": "", "year": 2002, "referenceCount": 33, "citationCount":
        6, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Geography"], "s2FieldsOfStudy": [{"category": "Geography",
        "source": "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": null, "journal": {"volume": "",
        "name": ""}, "authors": [{"authorId": "2238141612", "name": "Ed Coffman"},
        {"authorId": "1797241", "name": "P. Jelenkovic"}, {"authorId": "1700208",
        "name": "Jason Nieh"}, {"authorId": "1926685", "name": "D. Rubenstein"}]},
        {"paperId": "a6b100291fe50fd8a563e0ade459081827792ef6", "externalIds": {"DBLP":
        "conf/osdi/OsmanSSN02", "MAG": "2157801087", "DOI": "10.1145/844128.844162",
        "CorpusId": 263871712}, "corpusId": 263871712, "publicationVenue": {"id":
        "86c43745-31d9-4c1a-b33f-ce3aa0042dbb", "name": "USENIX Symposium on Operating
        Systems Design and Implementation", "type": "conference", "alternate_names":
        ["Oper Syst Des Implement", "Operating Systems Design and Implementation",
        "OSDI", "USENIX Symp Oper Syst Des Implement"]}, "url": "https://www.semanticscholar.org/paper/a6b100291fe50fd8a563e0ade459081827792ef6",
        "title": "The design and implementation of Zap", "abstract": "We have created
        Zap, a novel system for transparent migration of legacy and networked applications.
        Zap provides a thin virtualization layer on top of the operating system that
        introduces pods, which are groups of processes that are provided a consistent,
        virtualized view of the system. This decouples processes in pods from dependencies
        to the host operating system and other processes on the system. By integrating
        Zap virtualization with a checkpoint-restart mechanism, Zap can migrate a
        pod of processes as a unit among machines running independent operating systems
        without leaving behind any residual state after migration. We have implemented
        a Zap prototype in Linux that supports transparent migration of unmodified
        applications without any kernel modifications. We demonstrate that our Linux
        Zap prototype can provide general-purpose process migration functionality
        with low overhead. Our experimental results for migrating pods used for running
        a standard user''s X windows desktop computing environment and for running
        an Apache web server show that these kinds of pods can be migrated with subsecond
        checkpoint and restart latencies.", "venue": "USENIX Symposium on Operating
        Systems Design and Implementation", "year": 2002, "referenceCount": 45, "citationCount":
        9, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
        "publicationDate": "2002-12-09", "journal": {"volume": "36", "pages": "361
        - 376", "name": "ACM SIGOPS Operating Systems Review"}, "authors": [{"authorId":
        "2257250352", "name": "Steven Osman"}, {"authorId": "2947394", "name": "Dinesh
        Subhraveti"}, {"authorId": "2257200401", "name": "Gong Su"}, {"authorId":
        "1700208", "name": "Jason Nieh"}]}, {"paperId": "e60a892427b03bfbcbbcfb058ef310708006276c",
        "externalIds": {"DBLP": "conf/usenix/YangNST02", "MAG": "2114835066", "CorpusId":
        5093134}, "corpusId": 5093134, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/e60a892427b03bfbcbbcfb058ef310708006276c",
        "title": "The Performance of Remote Display Mechanisms for Thin-Client Computing",
        "abstract": "The growing popularity of thin-client systems makes it important
        to determine the factors that govern the performance of these thin-client
        architectures. To assess the viability of the thin-client computing model,
        we measured the performance of six popular thin-client platforms\u2014Citrix
        MetaFrame, Microsoft Terminal Services, Sun Ray, Tarantella, VNC, and X\u2014running
        over a wide range of network access bandwidths. We find that thinclient systems
        can perform well on web and multimedia applications in LAN environments, but
        the efficiency of the thin-client protocols varies widely. We analyze the
        differences in the various approaches and explain the impact of the underlying
        remote display protocols on overall performance. Our results quantify the
        impact of different approaches in display encoding primitives, display update
        policies, and display caching and compression techniques across a broad range
        of thin-client systems.", "venue": "USENIX Annual Technical Conference, General
        Track", "year": 2002, "referenceCount": 25, "citationCount": 87, "influentialCitationCount":
        2, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2002-06-10",
        "journal": {"pages": "131-146"}, "authors": [{"authorId": "123362989", "name":
        "S. J. Yang"}, {"authorId": "1700208", "name": "Jason Nieh"}, {"authorId":
        "46337582", "name": "Matt Selsky"}, {"authorId": "2065708559", "name": "Nikhil
        Tiwari"}]}, {"paperId": "35fc6d70a555d66dc06bd53bb4f24922f1d9da09", "externalIds":
        {"MAG": "2914347563", "CorpusId": 62036223}, "corpusId": 62036223, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/35fc6d70a555d66dc06bd53bb4f24922f1d9da09",
        "title": "Proceedings of the 11th international workshop on Network and operating
        systems support for digital audio and video", "abstract": null, "venue": "",
        "year": 2001, "referenceCount": 0, "citationCount": 4, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}], "publicationTypes": null, "publicationDate": null, "journal":
        {"volume": "", "name": ""}, "authors": [{"authorId": "1700208", "name": "Jason
        Nieh"}]}, {"paperId": "535ffd4979373706dc7d4cc6ca670f518fce3f2d", "externalIds":
        {"DBLP": "conf/usenix/ZadokABN01", "MAG": "1524501725", "CorpusId": 5115852},
        "corpusId": 5115852, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/535ffd4979373706dc7d4cc6ca670f518fce3f2d",
        "title": "Fast Indexing: Support for Size-Changing Algorithms in Stackable
        File Systems", "abstract": "Stackable file systems can provide extensible
        file system functionality with minimal performance overhead and development
        cost. However, previous approaches provide only limited functionality. In
        particular, they do not support size-changing algorithms (SCAs), which are
        important and useful for many applications such as compression and encryption.
        We propose fast indexing, a technique for efficient support of SCAs in stackable
        file systems. Fast indexing provides a page mapping between file system layers
        in a way that can be used with any SCA. We use index files to store this mapping.
        Index files are designed to be recoverable if lost and add less than 0.1%
        disk space overhead. We have implemented fast indexing using portable stackable
        templates, and we have used this system to build several example file systems
        with SCAs. We demonstrate that fast index files have low overhead for typical
        user workloads such as large compilations, only 2.3% over other stacked file
        systems and 4.7%over non-stackable file systems. Our system can deliver better
        performance with SCAs than userlevel applications, as much as five times faster.",
        "venue": "USENIX Annual Technical Conference, General Track", "year": 2001,
        "referenceCount": 27, "citationCount": 21, "influentialCitationCount": 0,
        "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle", "Conference"], "publicationDate": "2001-06-25",
        "journal": {"pages": "289-304"}, "authors": [{"authorId": "1708491", "name":
        "E. Zadok"}, {"authorId": "2074151022", "name": "J. M. Andersen"}, {"authorId":
        "2873270", "name": "Ion Badulescu"}, {"authorId": "1700208", "name": "Jason
        Nieh"}]}, {"paperId": "9d5705cfaec7002218c09c808a6ffc26d34bc192", "externalIds":
        {"DBLP": "conf/usenix/NiehVZ01", "MAG": "2119984268", "CorpusId": 1732526},
        "corpusId": 1732526, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/9d5705cfaec7002218c09c808a6ffc26d34bc192",
        "title": "Virtual-Time Round-Robin: An O(1) Proportional Share Scheduler",
        "abstract": "Proportional share resource management provides a flexible and
        useful abstraction for multiplexing timeshared resources. However, previous
        proportional share mechanisms have either weak proportional sharing accuracy
        or high scheduling overhead. We present VirtualTime Round-Robin (VTRR), a
        proportional share scheduler that can provide good proportional sharing accuracy
        with O(1) scheduling overhead. VTRR achieves this by combining the benefits
        of fair queueing algorithms with a round-robin scheduling mechanism. Unlike
        many other schedulers, VTRR is simple to implement. We have implemented a
        VTRR CPU scheduler in Linux in less than 100 lines of code. Our performance
        results demonstrate that VTRR provides accurate proportional share allocation
        with constant, sub-microsecond scheduling overhead. The scheduling overhead
        using VTRR is two orders of magnitude less than the standard Linux scheduler
        for large numbers of clients.", "venue": "USENIX Annual Technical Conference,
        General Track", "year": 2001, "referenceCount": 39, "citationCount": 106,
        "influentialCitationCount": 7, "isOpenAccess": false, "openAccessPdf": null,
        "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer
        Science", "source": "external"}, {"category": "Computer Science", "source":
        "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"], "publicationDate":
        "2001-06-25", "journal": {"pages": "245-259"}, "authors": [{"authorId": "1700208",
        "name": "Jason Nieh"}, {"authorId": "2596531", "name": "Chris Vaill"}, {"authorId":
        "145901388", "name": "Hua Zhong"}]}, {"paperId": "eb867b23e31dce148902b7ef879b63247d83f9c2",
        "externalIds": {"MAG": "2160376187", "DBLP": "conf/usenix/YangNN01", "DOI":
        "10.1145/592637.592640", "CorpusId": 207656900}, "corpusId": 207656900, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/eb867b23e31dce148902b7ef879b63247d83f9c2",
        "title": "Measuring thin-client performance using slow-motion benchmarking",
        "abstract": "Modern thin-client systems are designed to provide the same graphical
        interfaces and applications available on traditional desktop computers while
        centralizing administration and allowing more efficient use of computing resources.
        Despite the rapidly increasing popularity of these client-server systems,
        there are few reliable analyses of their performance. Industry standard benchmark
        techniques commonly used for measuring desktop system performance are ill-suited
        for measuring the performance of thin-client systems because these benchmarks
        only measure application performance on the server, not the actual user-perceived
        performance on the client. To address this problem, we have developed slow-motion
        benchmarking, a new measurement technique for evaluating thin-client systems.
        In slow-motion benchmarking, performance is measured by capturing network
        packet traces between a thin client and its respective server during the execution
        of a slow-motion version of a conventional benchmark application. These results
        can then be used either independently or in conjunction with conventional
        benchmark results to yield an accurate and objective measure of the performance
        of thin-client systems. We have demonstrated the effectiveness of slow-motion
        benchmarking by using this technique to measure the performance of several
        popular thin-client systems in various network environments on Web and multimedia
        workloads. Our results show that slow-motion benchmarking solves the problems
        with using conventional benchmarks on thin-client systems and is an accurate
        tool for analyzing the performance of these systems.", "venue": "TOCS", "year":
        2001, "referenceCount": 34, "citationCount": 153, "influentialCitationCount":
        7, "isOpenAccess": true, "openAccessPdf": {"url": "http://www.usenix.org/event/usenix01/full_papers/yang/yang.pdf",
        "status": null}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle"],
        "publicationDate": "2001-06-25", "journal": {"pages": "35-49"}, "authors":
        [{"authorId": "123362989", "name": "S. J. Yang"}, {"authorId": "1700208",
        "name": "Jason Nieh"}, {"authorId": "2072002899", "name": "N. Novik"}]}, {"paperId":
        "faaec4e2a49a161d11bc79c3f836ea06790bb520", "externalIds": {"MAG": "2141904009",
        "CorpusId": 62316668}, "corpusId": 62316668, "publicationVenue": null, "url":
        "https://www.semanticscholar.org/paper/faaec4e2a49a161d11bc79c3f836ea06790bb520",
        "title": "Fist: a system for stackable file-system code generation", "abstract":
        "FiST: A Systemfor StackableFile-SystemCodeGeneration", "venue": "", "year":
        2001, "referenceCount": 146, "citationCount": 19, "influentialCitationCount":
        3, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": null, "journal": {"volume": "",
        "name": ""}, "authors": [{"authorId": "1700208", "name": "Jason Nieh"}, {"authorId":
        "1708491", "name": "E. Zadok"}]}, {"paperId": "2185d23a7930ebebe3a44bb9b5fa13a141db96d6",
        "externalIds": {"MAG": "1504006323", "DOI": "10.7916/D8697FRW", "CorpusId":
        1595868}, "corpusId": 1595868, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/2185d23a7930ebebe3a44bb9b5fa13a141db96d6",
        "title": "Performance of Size-Changing Algorithms in Stackable File Systems",
        "abstract": "Stackable file systems can provide extensible file system functionality
        with minimal performance overhead and development cost. However, previous
        approaches are limited in the functionality they provide. In particular, they
        do not support size-changing algorithms, which are important and useful for
        many applications, such as compression and security. We propose fast index
        files, a technique for efficient support of size-changing algorithms in stackable
        file systems. Fast index files provide a page mapping between file system
        layers in a way that can be used with any size-changing algorithm. Index files
        are designed to be recoverable if lost and add less than 0.1% disk space overhead.
        We have implemented fast indexing using portable stackable templates, and
        we have used this system to build several example file systems with size-changing
        algorithms. We demonstrate that fast index files have very low overhead for
        typical workloads, only 2.3% over other stacked file systems. Our system can
        deliver much better performance on size-changing algorithms than user-level
        applications, as much as five times faster.", "venue": "", "year": 2000, "referenceCount":
        47, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
        null, "journal": {"volume": "", "name": ""}, "authors": [{"authorId": "1708491",
        "name": "E. Zadok"}, {"authorId": "2074151022", "name": "J. M. Andersen"},
        {"authorId": "2873270", "name": "Ion Badulescu"}, {"authorId": "1700208",
        "name": "Jason Nieh"}]}, {"paperId": "350fd78f0e8432f00d1d18e0c8c003c52a4b57d1",
        "externalIds": {"MAG": "2169792717", "CorpusId": 7435181}, "corpusId": 7435181,
        "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/350fd78f0e8432f00d1d18e0c8c003c52a4b57d1",
        "title": "Measuring the Multimedia Performance of Server-Based Computing",
        "abstract": "The server-based computing (SBC) model is becoming an increasingly
        popular approach for delivering computational services with reduced administrative
        costs and better resource utilization. In this paper, we examine how effectively
        SBC architectures support multimedia applications. We focus on the effectiveness
        of the remote display protocol used in three popular SBC platforms for supporting
        video applications, Citrix Metaframe, Windows Terminal Server, and AT&T VNC.
        Our results show that SBC can be a viable approach for delivering VCR-quality
        video in LAN environments, but that existing solutions are inadequate at network
        access bandwidths found in broadband environments. Our results also show that
        SBC can deliver video with comparable network efficiency as streaming media
        solutions. We show that there is wide variation in the performance of the
        remote display technologies and discuss the factors that influence their performance.",
        "venue": "", "year": 2000, "referenceCount": 11, "citationCount": 36, "influentialCitationCount":
        3, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": null, "journal": {"volume": "",
        "name": ""}, "authors": [{"authorId": "1700208", "name": "Jason Nieh"}, {"authorId":
        "123362989", "name": "S. J. Yang"}]}, {"paperId": "382c83c7d987ca8d71adbd0070172027accd990e",
        "externalIds": {"CorpusId": 15847168}, "corpusId": 15847168, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/382c83c7d987ca8d71adbd0070172027accd990e",
        "title": "Examining VMware", "abstract": "VMware is a virtual-machine platform
        that provides an abstraction of x86 PC hardware so that multiple operating
        systems can run unmodified and at the same time on a standard PC. For developers,
        this means you can run multiple development environments on your desktop without
        rebooting or repartitioning. In the process, you can isolate and protect operating
        environments (and the applications and data that are running in them), as
        well as interoperate among operating systems for networking, device/file sharing,
        and cut-andpaste. For users, VMware makes it possible to run Windows applications
        with Linux. VMware comes in two flavors, depending on the operating system
        running on the user\u2019s Pentium-based (or compatible) PC -VMware for Linux,
        and VMware for Windows NT/2000. VMware installs like an application program,
        requiring no special hardware support.", "venue": "", "year": 2000, "referenceCount":
        0, "citationCount": 26, "influentialCitationCount": 1, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "s2-fos-model"}], "publicationTypes": null,
        "publicationDate": null, "journal": null, "authors": [{"authorId": "1700208",
        "name": "Jason Nieh"}]}, {"paperId": "d0113d1ab647be8250018f370e9e56d0a7392c97",
        "externalIds": {"MAG": "1753858198", "DOI": "10.7916/D8Z329VF", "CorpusId":
        2570433}, "corpusId": 2570433, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/d0113d1ab647be8250018f370e9e56d0a7392c97",
        "title": "A Comparison of Thin-Client Computing Architectures", "abstract":
        "Thin-client computing offers the promise of easier-to-maintain computational
        services with reduced total cost of ownership. The recent and growing popularity
        of thin-client systems makes it important to develop techniques for analyzing
        and comparing their performance, to assess the general feasibility of the
        thin-client computing model, and to determine the factors that govern the
        performance of these architectures. To assess the viability of the thin-client
        computing model, we measured the performance of five popular thin-client platforms
        running over a wide range of network access bandwidths. Our results show that
        current thin-client solutions generally work well in a LAN environment, but
        their performance degrades significantly when they are used in today\u2019s
        broadband environments. We also find that the efficiency of the thin-client
        protocols varies widely. In some cases, the efficiency of the thin client
        protocol for web applications is within a factor of two of standard web protocols,
        while others are 30 times more inefficient. We analyze the differences in
        the various approaches and explain the impact of the underlying remote display
        protocols on overall performance.", "venue": "", "year": 2000, "referenceCount":
        17, "citationCount": 86, "influentialCitationCount": 3, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
        null, "journal": {"volume": "", "name": ""}, "authors": [{"authorId": "1700208",
        "name": "Jason Nieh"}, {"authorId": "123362989", "name": "S. J. Yang"}, {"authorId":
        "2072002899", "name": "N. Novik"}]}, {"paperId": "6d3e34e7ff8e70130f60dfc1dc43df81b0670d66",
        "externalIds": {"MAG": "3120021568", "DOI": "10.1145/269005.266677", "CorpusId":
        235970064}, "corpusId": 235970064, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/6d3e34e7ff8e70130f60dfc1dc43df81b0670d66",
        "title": "The design, implementation, and evaluation of SMART", "abstract":
        null, "venue": "", "year": 1999, "referenceCount": 0, "citationCount": 2,
        "influentialCitationCount": 0, "isOpenAccess": true, "openAccessPdf": {"url":
        "https://dl.acm.org/doi/pdf/10.1145/269005.266677", "status": null}, "fieldsOfStudy":
        ["Computer Science"], "s2FieldsOfStudy": [{"category": "Computer Science",
        "source": "external"}], "publicationTypes": null, "publicationDate": null,
        "journal": {"volume": "", "name": ""}, "authors": [{"authorId": "1700208",
        "name": "Jason Nieh"}]}, {"paperId": "928e56d819a7a9fb64f800bba2c2d23a875d6794",
        "externalIds": {"MAG": "2120945246", "DBLP": "conf/sosp/NiehL97", "DOI": "10.1145/268998.266677",
        "CorpusId": 962256}, "corpusId": 962256, "publicationVenue": {"id": "6c6fcaa9-fd25-488b-8050-995227ac671c",
        "name": "Symposium on Operating Systems Principles", "type": "conference",
        "alternate_names": ["Symp Oper Syst Princ", "SOSP"], "url": "http://sosp.org/"},
        "url": "https://www.semanticscholar.org/paper/928e56d819a7a9fb64f800bba2c2d23a875d6794",
        "title": "The design, implementation and evaluation of SMART: a scheduler
        for multimedia applications", "abstract": "Real-time applications such as
        multimedia audio and video are increasingly populating the workstation desktop.
        To support the execution of these applications in conjunction with traditional
        non-realtime applications, we have created SMART, a Scheduler for Multimedia
        And Real-Time applications. SMART supports applications with time constraints,
        and provides dynamic feedback to applications to allow them to adapt to the
        current load. In addition, the support for real-time applications is inte
        grated with the support for conventional computations. This allows the user
        to prioritize across real-time and conventional computations, and dictate
        how the processor is to be shared among applications of the same priority
        . As the system load changes, SMART adjusts the allocation of resources dynamically
        and seamlessly. SMAR T is unique in its ability to automatically shed real-time
        tasks and re gulate their execution rates when the system is overloaded, while
        providing better value in underloaded conditions than previously proposed
        schemes. We have implemented SMART in the Solaris UNIX operating system and
        measured its performance against other schedulers in e xecuting real-time,
        interacti ve, and batch applications. Our results demonstrate SMART\u2019s
        superior performance in supporting multimedia applications.", "venue": "Symposium
        on Operating Systems Principles", "year": 1997, "referenceCount": 57, "citationCount":
        296, "influentialCitationCount": 21, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["Book", "JournalArticle",
        "Conference"], "publicationDate": "1997-10-01", "journal": {"name": "Proceedings
        of the sixteenth ACM symposium on Operating systems principles"}, "authors":
        [{"authorId": "1700208", "name": "Jason Nieh"}, {"authorId": "39682108", "name":
        "M. Lam"}]}, {"paperId": "d7693012c522efbdc59f784214b711836048f58e", "externalIds":
        {"DBLP": "conf/icmcs/NiehL97", "MAG": "2117773082", "DOI": "10.1109/MMCS.1997.609751",
        "CorpusId": 17295574}, "corpusId": 17295574, "publicationVenue": null, "url":
        "https://www.semanticscholar.org/paper/d7693012c522efbdc59f784214b711836048f58e",
        "title": "SMART UNIX SVR4 support for multimedia applications", "abstract":
        "Multimedia applications have dynamic and adaptive real-time requirements.
        Current scheduling practice, as typified by UNIX System V Release 4, lacks
        the necessary information and interfaces to meet these requirements. To address
        this problem, we have created the SMART (Scheduler for Multimedia And Real-Time)
        interface. It explicitly accounts for application-specific time constraints
        and provides dynamic feedback from the scheduler to applications to allow
        them to adapt to the system loading condition. This paper describes the design
        of the interface and its implementation in the Solaris UNIX operating system
        to provide an effective SVR4-conformant full featured environment for supporting
        multimedia applications.", "venue": "Proceedings of IEEE International Conference
        on Multimedia Computing and Systems", "year": 1997, "referenceCount": 12,
        "citationCount": 16, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
        "Conference"], "publicationDate": "1997-06-03", "journal": {"pages": "404-414",
        "name": "Proceedings of IEEE International Conference on Multimedia Computing
        and Systems"}, "authors": [{"authorId": "1700208", "name": "Jason Nieh"},
        {"authorId": "39682108", "name": "M. Lam"}]}, {"paperId": "4051754e54a513b3b73f5b12ad5840ce538a6ae9",
        "externalIds": {"MAG": "1575759939", "CorpusId": 15180587}, "corpusId": 15180587,
        "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/4051754e54a513b3b73f5b12ad5840ce538a6ae9",
        "title": "The Design of SMART: A Scheduler for Multimedia Applications", "abstract":
        "We have created SMART, a Scheduler for Multimedia And Real-Time applications.
        SMART supports both real-time and conventional computations and provides flexible
        and accurate control over the sharing of processor time. SMART is able to
        satisfy real-time constraints in an optimal manner and provide proportional
        sharing across all real-time and conventional tasks. Furthermore, when not
        all real-time constraints can be met, SMART satisfies each real-time task''''s
        proportional share of deadlines, and adjusts its execution rate dynamically.
        This technique is especially important for multimedia applications that can
        operate at different rates depending on the loading condition. This paper
        presents the design of SMART and provides measured performance results of
        its effectiveness based on a prototype implementation in the Solaris operating
        system.", "venue": "", "year": 1996, "referenceCount": 27, "citationCount":
        18, "influentialCitationCount": 2, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": "1996-06-01",
        "journal": {"volume": "", "name": ""}, "authors": [{"authorId": "1700208",
        "name": "Jason Nieh"}, {"authorId": "39682108", "name": "M. Lam"}]}, {"paperId":
        "cc1f69155d69260ea1b09874fdb8933d6e41da70", "externalIds": {"DBLP": "conf/nossdav/NiehL95",
        "MAG": "2154814482", "DOI": "10.1007/BFb0019270", "CorpusId": 32364992}, "corpusId":
        32364992, "publicationVenue": {"id": "193beb19-09ca-4e40-97b9-20e911993ff9",
        "name": "International Workshop on Network and Operating System Support for
        Digital Audio and Video", "type": "conference", "alternate_names": ["Network
        and Operating System Support for Digital Audio and Video", "Netw Oper Syst
        Support Digit Audio Video", "Int Workshop Netw Oper Syst Support Digit Audio
        Video", "NOSSDAV"], "url": "http://www.nossdav.org/"}, "url": "https://www.semanticscholar.org/paper/cc1f69155d69260ea1b09874fdb8933d6e41da70",
        "title": "Integrated Processors Scheduling for Multimedia", "abstract": null,
        "venue": "International Workshop on Network and Operating System Support for
        Digital Audio and Video", "year": 1995, "referenceCount": 9, "citationCount":
        32, "influentialCitationCount": 1, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy": [{"category":
        "Computer Science", "source": "external"}, {"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle", "Conference"],
        "publicationDate": "1995-04-19", "journal": {"pages": "202-205"}, "authors":
        [{"authorId": "1700208", "name": "Jason Nieh"}, {"authorId": "39682108", "name":
        "M. Lam"}]}, {"paperId": "d31ace6a28ebbb10d09db1a0868f1d6596f15f49", "externalIds":
        {"DBLP": "conf/sosp/NiehL95", "MAG": "2119397242", "DOI": "10.1145/224056.225837",
        "CorpusId": 37003975}, "corpusId": 37003975, "publicationVenue": {"id": "6c6fcaa9-fd25-488b-8050-995227ac671c",
        "name": "Symposium on Operating Systems Principles", "type": "conference",
        "alternate_names": ["Symp Oper Syst Princ", "SOSP"], "url": "http://sosp.org/"},
        "url": "https://www.semanticscholar.org/paper/d31ace6a28ebbb10d09db1a0868f1d6596f15f49",
        "title": "SMART: a processor scheduler for multimedia applications", "abstract":
        "Applications that manipulate digital audio and video represent a growing
        class of computations executed by workstation users. This class of computations
        is known as continuous media. Their distinguishing characteristic is that
        they must process and transport media samples within application-specific
        time constraints. To support these real-time activities, the operating system
        must manage resources so that their time constraints can be satisfied whenever
        possible.", "venue": "Symposium on Operating Systems Principles", "year":
        1995, "referenceCount": 0, "citationCount": 17, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["Book", "JournalArticle", "Conference"], "publicationDate":
        "1995-12-03", "journal": {"name": "Proceedings of the fifteenth ACM symposium
        on Operating systems principles"}, "authors": [{"authorId": "1700208", "name":
        "Jason Nieh"}, {"authorId": "39682108", "name": "M. Lam"}]}, {"paperId": "58936b249316c9b64ee77a46e847b828b12b89e9",
        "externalIds": {"CorpusId": 482969}, "corpusId": 482969, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/58936b249316c9b64ee77a46e847b828b12b89e9",
        "title": "Wall: \" a New Framework for Processor Scheduling, \" in Progress.
        5.3 New Timesharing Class 6 Conclusions and Future Work 5.2 Svr4 Timesharing
        and Realtime Classes 5 Interpretation of Results", "abstract": "addition,
        when the system is overloaded with continuous media applications, a way of
        identifying applications of lesser or greater importance to the users can
        allow the system to automatically perform service trade-offs rather than forcing
        it to degrade all applications equally at best, or randomly at worst. Armed
        with such information, the system can manage its resources in such a way as
        to maximize the total value delivered to the end user. Towards this end, we
        are creating a new scheduling framework , based on Time-Driven Resource Management
        [6, 8, 9], that provides the flexible control and delivered performance required
        for multimedia applications. Finally, note that the existence of the strict-priority
        realtime scheduling class in standard SVR4 in no way allows a user to effectively
        deal with these types of problems. In addition, it opens the very real possibility
        of runaway applications that consume all CPU resources and effectively prevent
        a user or system administrator from regaining control without rebooting the
        system. 7 Acknowledgments Monica Lam provided many insightful suggestions,
        especially during the formative stages of this work. A new timesharing scheduling
        class was developed in order to correct the problems demonstrated in these
        experimental runs. In particular, the modified version removes the anomalies
        of identifying batch jobs as interactive, and vice versa. In addition, it
        attempts to ensure that each process that can run is given the opportunity
        to make steady progress in its computation, while retaining a bias in favor
        of interactive processes. Finally, it reduces the feedback interval over which
        CPU behavior is monitored and penalties and rewards given. The timesharing
        scheduling class contained in Sun''s Solaris 2.3 operating system is based
        on this work. The results of the default use of this class for all applications
        and the window server process are given by Figure 2i. As can be seen, this
        delivers significantly better results for the continuous media and interactive
        applications than any combination of the standard SVR4 scheduling classes.
        It should also be noted that this scheduling policy achieves this level of
        performance without significantly starving the batch application, which still
        receives approximately 30% of the available CPU time. Additional tests were
        performed by adjusting user priorities and by combining this new scheduling
        class with the SVR4 RT class (as was done with SVR4 TS class). However, with
        the exception of the cases where there was sufficient load in the RT class
        to consume \u2026", "venue": "", "year": 1993, "referenceCount": 0, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
        "journal": null, "authors": [{"authorId": "1700208", "name": "Jason Nieh"},
        {"authorId": "47169479", "name": "James G. Hanko"}, {"authorId": "144539662",
        "name": "J. Northcutt"}]}, {"paperId": "c3f01f7e2704192afe78a7e8ae54f431e6c09722",
        "externalIds": {"DBLP": "conf/nossdav/NiehHNW93", "MAG": "1657203581", "DOI":
        "10.1007/3-540-58404-8_5", "CorpusId": 36904580}, "corpusId": 36904580, "publicationVenue":
        {"id": "193beb19-09ca-4e40-97b9-20e911993ff9", "name": "International Workshop
        on Network and Operating System Support for Digital Audio and Video", "type":
        "conference", "alternate_names": ["Network and Operating System Support for
        Digital Audio and Video", "Netw Oper Syst Support Digit Audio Video", "Int
        Workshop Netw Oper Syst Support Digit Audio Video", "NOSSDAV"], "url": "http://www.nossdav.org/"},
        "url": "https://www.semanticscholar.org/paper/c3f01f7e2704192afe78a7e8ae54f431e6c09722",
        "title": "SVR4UNIX Scheduler Unacceptable for Multimedia Applications", "abstract":
        null, "venue": "International Workshop on Network and Operating System Support
        for Digital Audio and Video", "year": 1993, "referenceCount": 7, "citationCount":
        132, "influentialCitationCount": 5, "isOpenAccess": true, "openAccessPdf":
        {"url": "http://www.cse.ucsc.edu/~sbrandt/courses/Winter00/290S/nieh_nossdav93.pdf",
        "status": null}, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": ["JournalArticle",
        "Conference"], "publicationDate": "1993-11-03", "journal": {"pages": "41-53"},
        "authors": [{"authorId": "1700208", "name": "Jason Nieh"}, {"authorId": "47169479",
        "name": "James G. Hanko"}, {"authorId": "144539662", "name": "J. Northcutt"},
        {"authorId": "32668543", "name": "Gerard A. Wall"}]}, {"paperId": "f797376771e2ea038ba1ff496371dc7b615fbc3b",
        "externalIds": {"DBLP": "conf/vvs/NiehL92", "MAG": "2165525587", "DOI": "10.1145/147130.147141",
        "CorpusId": 15575048}, "corpusId": 15575048, "publicationVenue": {"id": "7581f61f-4f64-4ae7-81ef-283e0e6d15ee",
        "name": "Symposium on Volume Visualization", "type": "conference", "alternate_names":
        ["VVS", "Symp Vol Vis"]}, "url": "https://www.semanticscholar.org/paper/f797376771e2ea038ba1ff496371dc7b615fbc3b",
        "title": "Volume rendering on scalable shared-memory MIMD architectures",
        "abstract": "Volume rendering is a useful visualization technique for understanding
        the large amounts of data generated in a variety of scientific disciplines.
        Routine use of this technique is currently limited by its computational expense.
        We have designed a parallel volume rendering algorithm for MIMD architectures
        based on ray tracing and a novel task queue image partitioning technique.
        The combination of ray tracing and MIMD architectures allows us to employ
        algorithmic optimizations such as hierarchical opacity enumeration, early
        ray termination, and adaptive image sampling. The use of task queue image
        partitioning makes these optimizations efficient in a parallel framework.
        We have implemented our algorithm on the Stanford DASH Multiprocessor, a scalable
        shared-memory MIMD machine. Its single address-space and coherent caches provide
        programming ease and good performance for our algorithm. With only a few days
        of programming effort, we have obtained nearly linear speedups and near real-time
        frame update rates on a 48 processor machine. Since DASH is constructed from
        Silicon Graphics multiprocessors, our code runs on any Silicon Graphics workstation
        without modification.", "venue": "Symposium on Volume Visualization", "year":
        1992, "referenceCount": 19, "citationCount": 161, "influentialCitationCount":
        7, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": ["JournalArticle", "Book"], "publicationDate": "1992-12-01",
        "journal": {"name": "Proceedings of the 1992 workshop on Volume visualization"},
        "authors": [{"authorId": "1700208", "name": "Jason Nieh"}, {"authorId": "1801789",
        "name": "M. Levoy"}]}, {"paperId": "51f453967d852cd1c0247e7ce61bd64bc739e95e",
        "externalIds": {"MAG": "1595053259", "DOI": "10.21236/ada219943", "CorpusId":
        54151774}, "corpusId": 54151774, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/51f453967d852cd1c0247e7ce61bd64bc739e95e",
        "title": "The Standard Map Machine", "abstract": "Abstract : The Standard
        Map Machine (SMM) is designed as an answer to the intensive computational
        requirements involved in the study of chaotic behavior in nonlinear systems.
        The high-speed and high-precision performance of this computer is due to its
        simple architecture specialized to the numerical computations required of
        nonlinear systems. This report will discuss the design and implementation
        of this special-purpose machine. (JHD)", "venue": "", "year": 1989, "referenceCount":
        0, "citationCount": 0, "influentialCitationCount": 0, "isOpenAccess": false,
        "openAccessPdf": null, "fieldsOfStudy": ["Computer Science"], "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "external"}, {"category": "Computer
        Science", "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate":
        "1989-09-01", "journal": {"volume": "", "name": ""}, "authors": [{"authorId":
        "1798376", "name": "Brian A. LaMacchia"}, {"authorId": "1700208", "name":
        "Jason Nieh"}]}, {"paperId": "7dd65eb5d91f65e21ff1c8b85fbff6faa155ad6a", "externalIds":
        {"MAG": "1585877620", "CorpusId": 60691193}, "corpusId": 60691193, "publicationVenue":
        null, "url": "https://www.semanticscholar.org/paper/7dd65eb5d91f65e21ff1c8b85fbff6faa155ad6a",
        "title": "Using Special-Purpose Computing to Examine Chaotic Behavior in Nonlinear
        Mappings", "abstract": "Abstract : Most physical phenomena are nonlinear in
        nature and exhibit the complicated and seemingly random behavior known as
        chaos. Studying chaotic behavior in nonlinear systems requires numerous computations
        in order to simulate the behavior of such systems. The Standard Map Machine
        (SMM) was designed and implemented as a special computer for performing these
        intensive computations with high-speed and high-precision. SMM''s impressive
        performance is due to its simple architecture specialized to the numerical
        computations required to nonlinear systems. This report discusses the design
        and implementation of the Standard Map Machine and its use in the study of
        nonlinear mappings, in particular, the study of the standard map.", "venue":
        "", "year": 1989, "referenceCount": 0, "citationCount": 0, "influentialCitationCount":
        0, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": ["Computer
        Science"], "s2FieldsOfStudy": [{"category": "Computer Science", "source":
        "external"}, {"category": "Computer Science", "source": "s2-fos-model"}],
        "publicationTypes": null, "publicationDate": "1989-09-01", "journal": {"volume":
        "", "name": ""}, "authors": [{"authorId": "1700208", "name": "Jason Nieh"}]},
        {"paperId": "22a72172cbaad09910b23b932743d5153fb640a8", "externalIds": {"CorpusId":
        10381808}, "corpusId": 10381808, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/22a72172cbaad09910b23b932743d5153fb640a8",
        "title": "SchedulerUnacceptablefor MultimediaApplications", "abstract": "Applications
        that manipulate digital audio and video are rapidly being added to workstations.
        Such computations can often consume the resources of an entire machine. By
        incorporating a \u201crealtime\u201d process scheduler, UNIX System V Release
        4 (SVR4), the most common basis of workstation operating systems, claims to
        provide system support for multimedia applications. Our quantitative measurements
        of real application performance demonstrate that this process scheduler is
        largely ineffective and can even produce system lockup. While SVR4 UNIX provides
        many controls for changing scheduler performance, they are virtually impossible
        to use successfully. Furthermore, the existence of a realtime static priority
        process scheduler in no way allows a user to deal with these problems. This
        paper provides a quantitative analysis of real system behavior, demonstrates
        why it is not possible to obtain the kind of behavior desired with the mechanisms
        currently provided by the system, and presents modifications to improve the
        situation.", "venue": "", "year": null, "referenceCount": 15, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": null, "s2FieldsOfStudy": [{"category": "Computer Science",
        "source": "s2-fos-model"}], "publicationTypes": null, "publicationDate": null,
        "journal": null, "authors": [{"authorId": "1700208", "name": "Jason Nieh"},
        {"authorId": "47169479", "name": "James G. Hanko"}, {"authorId": "144539662",
        "name": "J. Northcutt"}, {"authorId": "32668543", "name": "Gerard A. Wall"}]},
        {"paperId": "ba433e8f1d8672c15196e037c22b549b57ae4079", "externalIds": {"CorpusId":
        2549935}, "corpusId": 2549935, "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/ba433e8f1d8672c15196e037c22b549b57ae4079",
        "title": "Proceedings of 2000 Usenix Annual Technical Conference Fist: a Language
        for Stackable File Systems", "abstract": "Traditional file system development
        is difficult. Stack-able file systems promise to ease the development of file
        systems by offering a mechanism for incremental development. Unfortunately,
        existing methods often require writing complex low-level kernel code that
        is specific to a single operating system platform and also difficult to port.
        We propose a new language, FiST, to describe stackable file systems. FiST
        uses operations common to file system interfaces. From a single description,
        FiST''s compiler produces file system modules for multiple platforms. The
        generated code handles many kernel details, freeing developers to concentrate
        on the main issues of their file systems. This paper describes the design,
        implementation, and evaluation of FiST. We extended file system functionality
        in a portable way without changing existing kernels. We built several file
        systems using FiST on Solaris, FreeBSD, and Linux. Our experiences with these
        examples shows the following benefits of FiST: average code size over other
        stackable file systems is reduced ten times; average development time is reduced
        seven times; performance overhead of stacking is 1\u20132%.", "venue": "",
        "year": null, "referenceCount": 27, "citationCount": 176, "influentialCitationCount":
        3, "isOpenAccess": false, "openAccessPdf": null, "fieldsOfStudy": null, "s2FieldsOfStudy":
        [{"category": "Computer Science", "source": "s2-fos-model"}], "publicationTypes":
        null, "publicationDate": null, "journal": null, "authors": [{"authorId": "1708491",
        "name": "E. Zadok"}, {"authorId": "1700208", "name": "Jason Nieh"}]}]}, {"authorId":
        "2058479292", "externalIds": {}, "url": "https://www.semanticscholar.org/author/2058479292",
        "name": "Jason Nieh", "aliases": null, "affiliations": [], "homepage": null,
        "paperCount": 1, "citationCount": 0, "hIndex": 0, "papers": [{"paperId": "6360e672b82ea6ed2419ba79392fc153050ceb24",
        "externalIds": {"MAG": "2926593587", "CorpusId": 188343117}, "corpusId": 188343117,
        "publicationVenue": null, "url": "https://www.semanticscholar.org/paper/6360e672b82ea6ed2419ba79392fc153050ceb24",
        "title": "Syst\u00e8mes et proc\u00e9d\u00e9s pour attribuer une largeur de
        bande d''homologue \u00e0 homologue", "abstract": "La presente invention concerne
        un appareil, des systemes et des procedes utilisables pour fournir un transfert
        de donnees efficace dans un reseau d''homologue a homologue. Il est possible
        d''acceder a une liste d''ordinateurs homologues et de la trier par une mesure
        d''echange de donnees. Un homologue demandeur est selectionne en parcourant
        la liste d''un ordinateur homologue ayant la plus petite mesure d''echange
        de donnees a un ordinateur homologue ayant la plus grande mesure d''echange
        de donnees afin d''identifier un ordinateur homologue ayant une demande de
        bloc de donnees en attente, l''ordinateur homologue avec une demande de bloc
        de donnees en attente etant l''homologue demandeur et ayant une mesure d''echange
        de donnees associee. Un bloc de donnees est alors transmis a l''homologue
        demandeur et la mesure d''echange de donnees associee a l''homologue demandeur
        est actualisee afin de fournir une mesure d''echange de donnees actualisee
        a l''homologue demandeur. La liste des ordinateurs homologues peut etre retriee.
        La presente invention concerne egalement un appareil, des systemes et des
        procedes.", "venue": "", "year": 2009, "referenceCount": 0, "citationCount":
        0, "influentialCitationCount": 0, "isOpenAccess": false, "openAccessPdf":
        null, "fieldsOfStudy": null, "s2FieldsOfStudy": [], "publicationTypes": null,
        "publicationDate": null, "journal": null, "authors": [{"authorId": "2058479292",
        "name": "Jason Nieh"}, {"authorId": "143871192", "name": "Alexander Sherman"},
        {"authorId": "2065077530", "name": "Clifford Stein"}]}]}]}

        '
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Connection:
      - keep-alive
      Content-Length:
      - '412703'
      Content-Type:
      - application/json
      Date:
      - Thu, 19 Oct 2023 18:20:16 GMT
      Via:
      - 1.1 c28d583393bad4965b8efa4ef27ccc9e.cloudfront.net (CloudFront)
      X-Amz-Cf-Id:
      - A1BHw0mInT1nnagljMA5_wsmF3HQchNYrJr-JdPhWFADsiYRy_U9Eg==
      X-Amz-Cf-Pop:
      - JFK52-P2
      X-Cache:
      - Miss from cloudfront
      x-amz-apigw-id:
      - ND73CHhLPHcFoyg=
      x-amzn-Remapped-Connection:
      - keep-alive
      x-amzn-Remapped-Content-Length:
      - '412703'
      x-amzn-Remapped-Date:
      - Thu, 19 Oct 2023 18:20:16 GMT
      x-amzn-Remapped-Server:
      - gunicorn
      x-amzn-RequestId:
      - 51936514-7e94-4cf1-a952-716a5359e58b
    status:
      code: 200
      message: OK
version: 1
